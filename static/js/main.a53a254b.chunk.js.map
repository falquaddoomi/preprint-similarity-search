{"version":3,"sources":["logo.svg","header.js","neighbors.js","status.js","search.js","recommended-journals.js","related-papers.js","map.js","about.js","footer.js","app.js","index.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","createElement","id","fill","d","stroke","strokeWidth","strokeLinecap","strokeLinejoin","transform","_ref","svgRef","title","props","viewBox","ref","ForwardRef","forwardRef","className","getNeighbors","query","a","fetch","json","neighbors","recommendedJournals","journal_neighbors","relatedPapers","paper_neighbors","coordinates","x","dim1","y","dim2","removePMC","entry","pmcid","document","replace","forEach","getMetadata","rest","ids","map","filter","join","metadata","result","incorp","cleanNeighbors","cleanArray","array","distances","distance","max","Math","min","diff","sort","b","index","authors","author","name","journal","fulljournalname","split","year","pubdate","strength","rank","status","setStatus","setRecommendedJournals","setRelatedPapers","setCoordinates","useState","getUrl","setQuery","onChange","useCallback","event","newQuery","value","trim","search","substr","doi","updateUrl","setUrl","console","log","onNav","useEffect","window","addEventListener","removeEventListener","href","onSubmit","preventDefault","type","placeholder","disabled","URLSearchParams","location","substring","get","oldUrl","newUrl","history","pushState","style","backgroundColor","floor","toString","padStart","borderColor","cells","setCells","selectedPc","setSelectedPc","selectedCell","setSelectedCell","getMapData","CloudButtons","start","end","Array","from","_","number","getCloudNum","String","getCloudUrl","CloudButton","hover","setHover","reference","setReference","popper","setPopper","usePopper","placement","modifiers","options","adaptive","offset","styles","attributes","update","data-number","data-selected","onClick","onMouseEnter","onMouseLeave","src","alt","onLoad","createPortal","body","Map","svg","useRef","setViewBox","counts","useMemo","cell","papers","minCount","maxCount","countRange","current","getBBox","width","height","undefined","cellSize","fillOpacity","cx","cy","r","SelectedCellDetails","toLocaleString","journals","count","pcs","score","role","parseInt","toFixed","render","getElementById"],"mappings":"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","file":"static/js/main.a53a254b.chunk.js","sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"style\", null, \"\\n    #logo:hover #star,\\n    #logo[data-spin] #star {\\n      animation: star_rotate 2s ease forwards infinite;\\n    }\\n    @keyframes star_rotate {\\n      from {\\n        transform: rotate(0);\\n      }\\n      to {\\n        transform: rotate(360deg);\\n      }\\n    }\\n  \");\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"path\", {\n  id: \"book_filling\",\n  fill: \"#ffe0b2\",\n  d: \"       M 10 50       L 50 70       L 90 50       L 90 35       L 50 55       L 10 35       A 10 10 0 0 0 10 50       M 10 65       L 50 85       L 90 65       L 90 50       L 50 70       L 10 50       A 10 10 0 0 0 10 65     \"\n});\n\nvar _ref4 = /*#__PURE__*/React.createElement(\"path\", {\n  id: \"book_top_cover\",\n  fill: \"#000000\",\n  stroke: \"#000000\",\n  strokeWidth: 5,\n  strokeLinecap: \"round\",\n  strokeLinejoin: \"round\",\n  d: \"       M 50 15       L 90 35       L 50 55       L 10 35       z     \"\n});\n\nvar _ref5 = /*#__PURE__*/React.createElement(\"path\", {\n  id: \"book_outlines\",\n  fill: \"none\",\n  stroke: \"#000000\",\n  strokeWidth: 5,\n  strokeLinecap: \"round\",\n  strokeLinejoin: \"round\",\n  d: \"       M 10 50       L 30 60       M 47.5 68.75       L 50 70       L 90 50       M 10 65       L 50 85       L 90 65       M 10 35       A 10 10 0 0 0 10 50       A 10 10 0 0 0 10 65     \"\n});\n\nvar _ref6 = /*#__PURE__*/React.createElement(\"path\", {\n  id: \"bookmark\",\n  fill: \"#000000\",\n  stroke: \"#000000\",\n  strokeWidth: 2,\n  strokeLinecap: \"round\",\n  strokeLinejoin: \"round\",\n  d: \"       M 35 55       L 35 71.25       L 38.75 69.25       L 42.5 74.75       L 42.5 58.75       z     \"\n});\n\nvar _ref7 = /*#__PURE__*/React.createElement(\"g\", {\n  transform: \"translate(50,34) rotate(26.565) skewX(-26.565) scale(0.10)\"\n}, /*#__PURE__*/React.createElement(\"path\", {\n  id: \"star\",\n  fill: \"#ffe0b2\",\n  stroke: \"#ffe0b2\",\n  strokeWidth: 20,\n  strokeLinecap: \"round\",\n  strokeLinejoin: \"round\",\n  d: \"         M 0.000 -100.000         L 29.389 -40.451         L 95.106 -30.902         L 47.553 15.451         L 58.779 80.902         L 0.000 50.000         L -58.779 80.902         L -47.553 15.451         L -95.106 -30.902         L -29.389 -40.451         z       \"\n}));\n\nvar SvgLogo = function SvgLogo(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 100 100\",\n    id: \"logo\",\n    ref: svgRef\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _ref2, _ref3, _ref4, _ref5, _ref6, _ref7);\n};\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgLogo, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/logo.e444815c.svg\";\nexport { ForwardRef as ReactComponent };","import React from 'react';\n\nimport { ReactComponent as Logo } from './logo.svg';\n\nimport './header.css';\n\n// header component\n\nexport default () => (\n  <header>\n    <section>\n      <h1>AnnoRxver</h1>\n      <h2>Journal Recommender</h2>\n      <Logo className='logo' />\n    </section>\n  </header>\n);\n","const backendServer = 'https://api-journal-rec.greenelab.com/doi/';\n\n// get neighbor and coordinate data from backend\nexport const getNeighbors = async (query) => {\n  // lookup data from backend\n  const neighbors = await (await fetch(backendServer + query)).json();\n\n  // extract results\n  const recommendedJournals = neighbors.journal_neighbors || [];\n  const relatedPapers = neighbors.paper_neighbors || [];\n  const coordinates = {\n    x: neighbors['2d_coord'].dim1,\n    y: neighbors['2d_coord'].dim2\n  };\n\n  // remove \"PMC\" prefix from PMCID's\n  const removePMC = (entry) =>\n    (entry.pmcid = (entry.pmcid || entry.document || '').replace('PMC', ''));\n  recommendedJournals.forEach(removePMC);\n  relatedPapers.forEach(removePMC);\n\n  // return results\n  return { recommendedJournals, relatedPapers, coordinates };\n};\n\nconst metaLookup =\n  'https://eutils.ncbi.nlm.nih.gov/entrez/eutils/esummary.fcgi?db=pmc&tool=AnnoRxivir&email=greenescientist@gmail.com&retmode=json&id=';\n\n// look up metadata from nih.gov\nexport const getMetadata = async ({\n  recommendedJournals,\n  relatedPapers,\n  ...rest\n}) => {\n  // get pmcid's of all relatedPapers for looking up meta data\n  const ids = [...recommendedJournals, ...relatedPapers]\n    .map((entry) => entry.pmcid)\n    .filter((entry) => entry);\n\n  // lookup metadata from pubmed\n  const metadata = (await (await fetch(metaLookup + ids.join(','))).json())\n    .result;\n\n  // incorp meta data into journal and paper objects\n  const incorp = (entry) => ({ ...entry, ...(metadata[entry.pmcid] || {}) });\n  recommendedJournals = recommendedJournals.map(incorp);\n  relatedPapers = relatedPapers.map(incorp);\n\n  // return results\n  return { recommendedJournals, relatedPapers, ...rest };\n};\n\n// clean neighbor data to handle more conveniently\nexport const cleanNeighbors = ({\n  recommendedJournals,\n  relatedPapers,\n  ...rest\n}) => {\n  recommendedJournals = cleanArray(recommendedJournals);\n  relatedPapers = cleanArray(relatedPapers);\n  return { recommendedJournals, relatedPapers, ...rest };\n};\n\n// clean array of journal or paper results\nconst cleanArray = (array) => {\n  // get range of distances\n  const distances = array.map((entry) => entry.distance);\n  const max = Math.max(...distances);\n  const min = Math.min(...distances);\n  const diff = max - min;\n\n  // sort by smaller distances first\n  array.sort((a, b) => a.distance - b.distance);\n\n  // set new values of array. keep only needed props and rename sensibly\n  array = array.map((entry, index) => ({\n    // pubmed id\n    id: entry.pmcid || null,\n    // name of paper\n    title: entry.title || '',\n    // authors of paper\n    authors: (entry.authors || [])\n      .map((author) => author.name || '')\n      .filter((name) => name)\n      .join(', '),\n    // name of journal\n    journal: (entry.fulljournalname || entry.journal || '')\n      .split('_')\n      .join(' '),\n    // year of publication\n    year: (entry.pubdate || '').split(' ')[0] || '',\n    // distance score\n    distance: entry.distance,\n    // normalized distance score\n    strength: (entry.distance - min) / diff,\n    // whole number rank\n    rank: index + 1\n  }));\n\n  return array;\n};\n","import React from 'react';\n\nimport './status.css';\n\n// status key codes\nexport const empty = '';\nexport const loading = 'LOADING';\nexport const error = 'ERROR';\nexport const success = 'SUCCESS';\n\n// loading/error message component\n\nexport default ({ status }) => {\n  if (status === loading) {\n    return (\n      <section className='center'>\n        <div className='message loading'>\n          <i className='fas fa-spinner fa-spin icon'></i>\n          <span>Loading...</span>\n        </div>\n      </section>\n    );\n  }\n\n  if (status === error) {\n    return (\n      <section className='center'>\n        <div className='error'>\n          <i className='far fa-times-circle icon'></i>\n          <span>Couldn't get results</span>\n        </div>\n      </section>\n    );\n  }\n\n  return null;\n};\n","import React, { useEffect } from 'react';\nimport { useState } from 'react';\nimport { useCallback } from 'react';\n\nimport { getNeighbors } from './neighbors';\nimport { getMetadata } from './neighbors';\nimport { cleanNeighbors } from './neighbors';\nimport { loading, success, error } from './status';\n\nimport './search.css';\n\n// search box component\n\nexport default ({\n  status,\n  setStatus,\n  setRecommendedJournals,\n  setRelatedPapers,\n  setCoordinates\n}) => {\n  // default query\n  const [query, setQuery] = useState(getUrl() || '10.1101/833400');\n\n  // on type\n  const onChange = useCallback((event) => {\n    const newQuery = event.target.value.trim();\n    // remove everything before first number, eg \"doi:\"\n    const index = newQuery.search(/\\d/);\n    // set updated query\n    if (index !== -1)\n      setQuery(newQuery.substr(index));\n    // if no number, can't be a valid doi, so set query to empty\n    else\n      setQuery('');\n  }, []);\n\n  // search\n  const search = useCallback(\n    async (doi, updateUrl = true) => {\n      // set loading status\n      setStatus(loading);\n\n      // update url based on search\n      if (updateUrl)\n        setUrl(doi);\n\n      try {\n        // get neighbor data\n        const {\n          recommendedJournals,\n          relatedPapers,\n          coordinates\n        } = await cleanNeighbors(await getMetadata(await getNeighbors(doi)));\n\n        // set neighbor data\n        setRecommendedJournals(recommendedJournals);\n        setRelatedPapers(relatedPapers);\n        setCoordinates(coordinates);\n        setStatus(success);\n      } catch (errorMessage) {\n        console.log(errorMessage);\n        // set error status if any problem\n        setStatus(error);\n      }\n    },\n    [setCoordinates, setRecommendedJournals, setRelatedPapers, setStatus]\n  );\n\n  // when user navigates back/forward\n  const onNav = useCallback(() => {\n    // get new doi\n    const doi = getUrl();\n    if (!doi)\n      return;\n    // put doi in search box\n    setQuery(doi);\n    // run search, without updating url since browser does this automatically\n    search(doi, false);\n  }, [search]);\n\n  // search for doi in url if any on first load\n  useEffect(() => {\n    if (getUrl())\n      search(getUrl());\n  }, [search]);\n\n  // listen for user back/forward nav\n  useEffect(() => {\n    window.addEventListener('popstate', onNav);\n    return () => window.removeEventListener('popstate', onNav);\n  }, [onNav, search]);\n\n  // render\n  return (\n    <section>\n      <p className='center'>\n        <i>\n          Enter the <a href='https://www.biorxiv.org/'>bioRxiv</a> DOI of your\n          preprint\n        </i>\n      </p>\n      <form\n        className='search'\n        onSubmit={(event) => {\n          // prevent page from navigating away/refreshing on submit\n          event.preventDefault();\n          if (!query.trim())\n            return;\n          search(query);\n        }}\n      >\n        <input\n          className='search_input'\n          value={query}\n          onChange={onChange}\n          type='text'\n          placeholder='e.g. 10.1101/833400'\n          disabled={status === 'LOADING'}\n        />\n        <button\n          className='search_button'\n          type='submit'\n          title='Search for related papers and journals'\n          disabled={status === 'LOADING'}\n        >\n          <i className='fas fa-search'></i>\n        </button>\n      </form>\n    </section>\n  );\n};\n\n// get doi from url\nconst getUrl = () =>\n  new URLSearchParams(window.location.search.substring(1)).get('doi');\n\n// put doi in url as param\nconst setUrl = (doi) => {\n  const oldUrl = window.location.href;\n  const base = window.location.href.split(/[?#]/)[0];\n  const newUrl = base + '?doi=' + doi;\n  // compare old to new url to prevent duplicate history entries when refreshing\n  if (oldUrl !== newUrl)\n    window.history.pushState(null, null, newUrl);\n};\n","import React from 'react';\n\nimport './card.css';\n\nconst rankColor = '#ff9800';\nconst googleLink = 'https://www.google.com/search?q=';\n\n// recommended journals section\n\nexport default ({ recommendedJournals }) => (\n  <section>\n    <h3>Recommended Journals</h3>\n    {recommendedJournals.map(({ journal, rank, distance, strength }, index) => (\n      <div key={index} className='card'>\n        <div\n          className='score'\n          title={'Distance score: ' + distance}\n          style={{\n            backgroundColor:\n              rankColor +\n              Math.floor((1 - strength) * 255)\n                .toString(16)\n                .padStart(2, '0'),\n            borderColor: rankColor\n          }}\n        >\n          {rank}\n        </div>\n        <div className='details'>\n          <a href={googleLink + journal}>{journal}</a>\n        </div>\n      </div>\n    ))}\n  </section>\n);\n","import React from 'react';\n\nimport './card.css';\n\nconst rankColor = '#ff9800';\nconst paperLink = 'https://www.ncbi.nlm.nih.gov/pmc/articles/';\n\n// related papers section\n\nexport default ({ relatedPapers }) => (\n  <section>\n    <h3>Related Papers</h3>\n    {relatedPapers.map(\n      (\n        { id, title, authors, year, journal, rank, distance, strength },\n        index\n      ) => (\n        <div key={index} className='card'>\n          <div\n            className='score'\n            title={'Distance score: ' + distance}\n            style={{\n              backgroundColor:\n                rankColor +\n                Math.floor((1 - strength) * 255)\n                  .toString(16)\n                  .padStart(2, '0'),\n              borderColor: rankColor\n            }}\n          >\n            {rank}\n          </div>\n          <div className='details'>\n            <a href={paperLink + id} title={title}>\n              {title}\n            </a>\n            <div title={authors}>{authors}</div>\n            <div title={journal + ' · ' + year}>\n              {journal} · {year}\n            </div>\n          </div>\n        </div>\n      )\n    )}\n  </section>\n);\n","import React from 'react';\nimport { createPortal } from 'react-dom';\nimport { useState } from 'react';\nimport { useEffect } from 'react';\nimport { useMemo } from 'react';\nimport { useRef } from 'react';\nimport { usePopper } from 'react-popper';\n\nimport './map.css';\n\n// word cloud \"principal component\" (pc) images\nconst cloudImages =\n  'https://raw.githubusercontent.com/greenelab/annorxiver/master/biorxiv/pca_association_experiment/output/word_pca_similarity/figures/pca_XX_cossim_word_cloud.png';\nconst startImage = 1;\nconst endImage = 50;\n\n// map cell data\nconst mapData = './data/plot.json';\n// size of map cells in svg units\nconst cellSize = 10;\n\n// map section component\n\nexport default ({ coordinates }) => {\n  // component state\n  const [cells, setCells] = useState([]);\n  const [selectedPc, setSelectedPc] = useState(null);\n  const [selectedCell, setSelectedCell] = useState(null);\n\n  // on app start, load map cell data\n  useEffect(() => {\n    const getMapData = async () =>\n      setCells(await (await fetch(mapData)).json());\n    getMapData();\n  }, []);\n\n  // render\n  return (\n    <section>\n      <h3>Map of PubMed Central</h3>\n      <CloudButtons {...{ selectedPc, setSelectedPc }} />\n      <Map {...{ cells, selectedCell, setSelectedCell, coordinates }} />\n      {selectedCell && (\n        <SelectedCellDetails {...{ selectedCell, setSelectedPc }} />\n      )}\n    </section>\n  );\n};\n\n// util func to generate range between ints\nconst range = (start, end) =>\n  Array.from({ length: end - start + 1 }, (_, i) => start + i);\n\n// cloud image buttons section\nconst CloudButtons = ({ selectedPc, setSelectedPc }) => (\n  <p className='center'>\n    {range(startImage, endImage).map((number) => (\n      <CloudButton key={number} {...{ number, selectedPc, setSelectedPc }} />\n    ))}\n  </p>\n);\n\n// get cloud number padded with 0's\nconst getCloudNum = (number) => String(number).padStart(2, '0');\n\n// get url of word cloud image\nconst getCloudUrl = (number) => cloudImages.replace('XX', getCloudNum(number));\n\n// cloud image button component\nconst CloudButton = ({ number, selectedPc, setSelectedPc }) => {\n  // component state\n  const [hover, setHover] = useState(false);\n  const [reference, setReference] = useState(null);\n  const [popper, setPopper] = useState(null);\n\n  // make tooltip\n  const { styles, attributes, update } = usePopper(reference, popper, {\n    placement: 'top',\n    modifiers: [\n      // https://github.com/popperjs/popper-core/issues/1138\n      { name: 'computeStyles', options: { adaptive: false } },\n      { name: 'offset', options: { offset: [0, 10] } }\n    ]\n  });\n\n  // render\n  return (\n    <>\n      <button\n        ref={setReference}\n        className='cloud_button'\n        data-number={getCloudNum(number)}\n        data-selected={selectedPc === number}\n        onClick={() => setSelectedPc(number)}\n        onMouseEnter={() => setHover(true)}\n        onMouseLeave={() => setHover(false)}\n      >\n        <img\n          src={getCloudUrl(number)}\n          title={'Select principal component ' + getCloudNum(number)}\n          alt={'Select principal component ' + getCloudNum(number)}\n          onLoad={update}\n        />\n      </button>\n      {hover &&\n        createPortal(\n          <img\n            ref={setPopper}\n            src={getCloudUrl(number)}\n            className='cloud_enlarged'\n            title={'Select principal component ' + getCloudNum(number)}\n            alt={'Select principal component ' + getCloudNum(number)}\n            onLoad={update}\n            style={styles.popper}\n            {...attributes.popper}\n          />,\n          document.body\n        )}\n    </>\n  );\n};\n\n// pubmed central map section\nconst Map = ({ cells, selectedCell, setSelectedCell, coordinates }) => {\n  // component state\n  const svg = useRef();\n  const [viewBox, setViewBox] = useState('');\n\n  // pre-compute some values\n  const counts = useMemo(() => cells.map((cell) => cell.papers), [cells]);\n  const minCount = useMemo(() => Math.min(...counts), [counts]);\n  const maxCount = useMemo(() => Math.max(...counts), [counts]);\n  const countRange = useMemo(() => maxCount - minCount, [minCount, maxCount]);\n\n  // set svg viewbox based on bbox of content in it, ie fit view\n  useEffect(() => {\n    if (!svg.current)\n      return;\n    const { x, y, width, height } = svg.current.getBBox();\n    setViewBox([x, y, width, height].join(' '));\n  }, [cells]);\n\n  // render\n  return (\n    <svg ref={svg} viewBox={viewBox || undefined} className='map'>\n      {cells.map((cell, number) => (\n        <rect\n          key={number}\n          className='cell'\n          x={cell.x * cellSize - cellSize / 2}\n          y={cell.y * cellSize - cellSize / 2}\n          width={cellSize}\n          height={cellSize}\n          data-selected={cell === selectedCell}\n          fillOpacity={0.25 + ((cell.papers - minCount) / countRange) * 0.75}\n          onClick={() => setSelectedCell(cell)}\n        />\n      ))}\n      {coordinates.x && coordinates.y && (\n        <circle\n          className='marker'\n          cx={coordinates.x * cellSize}\n          cy={coordinates.y * cellSize}\n          r={cellSize / 3}\n        />\n      )}\n    </svg>\n  );\n};\n\n// details of selected cell section\nconst SelectedCellDetails = ({ selectedCell, setSelectedPc }) => (\n  <div>\n    <h4>Papers</h4>\n    <p>{selectedCell.papers.toLocaleString()}</p>\n    <h4>Top Journals</h4>\n    <p>\n      {selectedCell.journals.map(({ name, count }, number) => (\n        <span key={number} className='cell_detail_row'>\n          <span>{name}</span>\n          <span>{count.toLocaleString()} papers</span>\n          <br />\n        </span>\n      ))}\n    </p>\n    <h4>Top Principal Components</h4>\n    <p>\n      {selectedCell.pcs.map(({ name, score }, number) => (\n        <span key={number} className='cell_detail_row'>\n          <a\n            role='button'\n            title={'Select principal component ' + getCloudNum(parseInt(name))}\n            onClick={() => setSelectedPc(parseInt(name))}\n          >\n            {name}\n          </a>\n          <span>{score.toFixed(2)} score</span>\n          <br />\n        </span>\n      ))}\n    </p>\n  </div>\n);\n","import React from 'react';\n\n// about section\n\nexport default () => (\n  <section>\n    <h3>What does this do?</h3>\n    <p>\n      This tool uses a machine learning model trained on 1.7 million{' '}\n      <a href='https://www.ncbi.nlm.nih.gov/pmc/'>PubMed Central</a> documents\n      to recommend suitable journals based on the textual content of your{' '}\n      <a href='https://www.biorxiv.org/'>bioRxiv</a> preprint. For information\n      on how this works, see the{' '}\n      <a href='https://github.com/greenelab/annorxiver-journal-recommender#annorxiver-journal-recommender'>\n        readme on GitHub\n      </a>\n      .\n    </p>\n  </section>\n);\n","import React from 'react';\n\n// footer component\n\nexport default () => (\n  <footer>\n    <section>\n      <p>\n        A project of the <a href='https://greenelab.com/'>Greene Lab</a>\n      </p>\n      <p>\n        <a href='https://github.com/greenelab/annorxiver_journal_rec_app'>\n          <i className='fab fa-github icon'></i>View on GitHub\n        </a>\n      </p>\n    </section>\n  </footer>\n);\n","import React from 'react';\nimport { useState } from 'react';\n\nimport Header from './header';\nimport Search from './search';\nimport Status from './status';\nimport RecommendedJournals from './recommended-journals';\nimport RelatedPapers from './related-papers';\nimport Map from './map';\nimport About from './about';\nimport Footer from './footer';\n\nimport './app.css';\n\nimport { empty, success } from './status';\n\n// main app component\n\nexport default () => {\n  // data status\n  const [status, setStatus] = useState(empty);\n\n  // main data\n  const [recommendedJournals, setRecommendedJournals] = useState([]);\n  const [relatedPapers, setRelatedPapers] = useState([]);\n  const [coordinates, setCoordinates] = useState({});\n\n  // render\n  return (\n    <>\n      <Header />\n      <main>\n        <Search\n          {...{\n            status,\n            setStatus,\n            setRecommendedJournals,\n            setRelatedPapers,\n            setCoordinates\n          }}\n        />\n        <Status {...{ status }} />\n        {status === success && (\n          <RecommendedJournals {...{ recommendedJournals }} />\n        )}\n        {status === success && <RelatedPapers {...{ relatedPapers }} />}\n        <Map {...{ coordinates }} />\n        <About />\n      </main>\n      <Footer />\n    </>\n  );\n};\n","import React from 'react';\nimport { render } from 'react-dom';\nimport App from './app';\n\n// render whole app\nrender(<App />, document.getElementById('root'));\n"],"sourceRoot":""}