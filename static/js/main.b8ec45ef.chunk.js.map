{"version":3,"sources":["logo.svg","header.js","error.js","backend.js","status.js","search.js","hooks.js","preprint-info.js","similar-journals.js","similar-papers.js","cloud-buttons.js","math.js","map.js","legend.js","cell-details.js","map-sections.js","about.js","footer.js","app.js","index.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","_ref3","id","fill","d","_ref4","stroke","strokeWidth","strokeLinecap","strokeLinejoin","_ref5","_ref6","_ref7","transform","SvgLogo","_ref","svgRef","title","titleId","props","xmlns","viewBox","ref","ForwardRef","Header","className","CustomError","args","name","Error","getNeighbors","query","a","fetch","response","ok","json","neighbors","message","preprint","paper_info","xml_found","similarJournals","journal_neighbors","similarPapers","paper_neighbors","coordinates","removePMC","entry","pmcid","document","replace","forEach","getNeighborsMetadata","array","ids","map","filter","join","metadata","result","incorp","cleanPreprint","doi","authors","split","journal","publisher","year","accepted_date","prelim","cleanNeighbors","distances","distance","max","Math","min","diff","sort","b","index","author","fulljournalname","pubdate","strength","rank","empty","loading","success","Status","status","cleanDoi","trim","getUrl","URLSearchParams","window","location","search","substring","get","setUrl","oldUrl","href","newUrl","history","pushState","Search","setStatus","setPreprint","setSimilarJournals","setSimilarPapers","setCoordinates","useState","setQuery","onChange","useCallback","event","value","updateUrl","Sentry","tags","onNav","useEffect","addEventListener","removeEventListener","onSubmit","preventDefault","type","placeholder","disabled","onFocus","select","useViewBox","rerender","svg","useRef","undefined","setViewBox","current","getBBox","x","y","width","height","n","toFixed","useTooltip","delay","show","setShow","anchor","anchorRef","tooltip","tooltipRef","timeout","usePopper","placement","modifiers","options","adaptive","offset","rootBoundary","styles","attributes","update","tooltipProps","style","popper","open","clearTimeout","setTimeout","close","PreprintInfo","tabIndex","createPortal","body","rankColorA","color","rankColorB","SimilarJournals","backgroundColor","mix","SimilarPapers","CloudButtons","selectedPc","setSelectedPc","range","startImage","endImage","number","CloudButton","data-number","getPcNum","data-selected","onClick","src","getCloudUrl","alt","onLoad","limit","sq","pow","rt","sqrt","boost","knee","r","cellSize","Map","cells","selectedCell","setSelectedCell","cell","pc","pcs","find","score","absScore","abs","counts","count","minCount","maxCount","concat","pcColorB","pcColorA","pcColorC","countColorB","countColorA","cx","cy","Legend","CellDetails","lemmas","scores","lemma","minScore","maxScore","size","right","bottom","toLocaleString","journals","left","textAnchor","dominantBaseline","fontSize","substr","MapSections","setCells","getMapData","start","end","Array","from","_","String","padStart","About","Footer","App","dsn","environment","process","render","getElementById"],"mappings":"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","file":"static/js/main.b8ec45ef.chunk.js","sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"style\", null, \"\\n    #logo:hover #star,\\n    #logo[data-spin] #star {\\n      animation: star_rotate 2s ease forwards infinite;\\n    }\\n    @keyframes star_rotate {\\n      from {\\n        transform: rotate(0);\\n      }\\n      to {\\n        transform: rotate(360deg);\\n      }\\n    }\\n  \");\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"path\", {\n  id: \"book_filling\",\n  fill: \"#ffe0b2\",\n  d: \"       M 10 50       L 50 70       L 90 50       L 90 35       L 50 55       L 10 35       A 10 10 0 0 0 10 50       M 10 65       L 50 85       L 90 65       L 90 50       L 50 70       L 10 50       A 10 10 0 0 0 10 65     \"\n});\n\nvar _ref4 = /*#__PURE__*/React.createElement(\"path\", {\n  id: \"book_top_cover\",\n  fill: \"#000000\",\n  stroke: \"#000000\",\n  strokeWidth: 5,\n  strokeLinecap: \"round\",\n  strokeLinejoin: \"round\",\n  d: \"       M 50 15       L 90 35       L 50 55       L 10 35       z     \"\n});\n\nvar _ref5 = /*#__PURE__*/React.createElement(\"path\", {\n  id: \"book_outlines\",\n  fill: \"none\",\n  stroke: \"#000000\",\n  strokeWidth: 5,\n  strokeLinecap: \"round\",\n  strokeLinejoin: \"round\",\n  d: \"       M 10 50       L 30 60       M 47.5 68.75       L 50 70       L 90 50       M 10 65       L 50 85       L 90 65       M 10 35       A 10 10 0 0 0 10 50       A 10 10 0 0 0 10 65     \"\n});\n\nvar _ref6 = /*#__PURE__*/React.createElement(\"path\", {\n  id: \"bookmark\",\n  fill: \"#000000\",\n  stroke: \"#000000\",\n  strokeWidth: 2,\n  strokeLinecap: \"round\",\n  strokeLinejoin: \"round\",\n  d: \"       M 35 55       L 35 71.25       L 38.75 69.25       L 42.5 74.75       L 42.5 58.75       z     \"\n});\n\nvar _ref7 = /*#__PURE__*/React.createElement(\"g\", {\n  transform: \"translate(50,34) rotate(26.565) skewX(-26.565) scale(0.10)\"\n}, /*#__PURE__*/React.createElement(\"path\", {\n  id: \"star\",\n  fill: \"#ffe0b2\",\n  stroke: \"#ffe0b2\",\n  strokeWidth: 20,\n  strokeLinecap: \"round\",\n  strokeLinejoin: \"round\",\n  d: \"         M 0.000 -100.000         L 29.389 -40.451         L 95.106 -30.902         L 47.553 15.451         L 58.779 80.902         L 0.000 50.000         L -58.779 80.902         L -47.553 15.451         L -95.106 -30.902         L -29.389 -40.451         z       \"\n}));\n\nfunction SvgLogo(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 100 100\",\n    id: \"logo\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _ref2, _ref3, _ref4, _ref5, _ref6, _ref7);\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgLogo);\nexport default __webpack_public_path__ + \"static/media/logo.af21f6ef.svg\";\nexport { ForwardRef as ReactComponent };","import { ReactComponent as Logo } from \"./logo.svg\";\n\nimport \"./header.css\";\n\n// header component\n\nconst Header = () => (\n  <header>\n    <section>\n      <h1>Preprint</h1>\n      <h2>Similarity Search</h2>\n      <Logo className=\"logo\" />\n    </section>\n  </header>\n);\n\nexport default Header;\n","export class CustomError extends Error {\n  constructor(...args) {\n    super(...args);\n    this.name = \"CustomError\";\n  }\n}\n","import { CustomError } from \"./error\";\n\nconst backendServer = \"https://api-pss.greenelab.com/doi/\";\n\n// get neighbor and coordinate data from backend\nexport const getNeighbors = async (query) => {\n  // look up data from backend\n  const response = await fetch(backendServer + query);\n  if (!response.ok) throw new Error();\n  const neighbors = await response.json();\n\n  // if error returned, throw error with message\n  if (neighbors.message) throw new CustomError(neighbors.message);\n\n  // extract results\n  const preprint = neighbors.paper_info || {};\n  preprint.xml_found = neighbors.xml_found;\n  const similarJournals = neighbors.journal_neighbors || [];\n  const similarPapers = neighbors.paper_neighbors || [];\n  const coordinates = neighbors.coordinates || {};\n\n  // remove \"PMC\" prefix from PMCID's\n  const removePMC = (entry) =>\n    (entry.pmcid = (entry.pmcid || entry.document || \"\").replace(\"PMC\", \"\"));\n  similarJournals.forEach(removePMC);\n  similarPapers.forEach(removePMC);\n\n  // return results\n  return { preprint, similarJournals, similarPapers, coordinates };\n};\n\nconst metaLookup =\n  \"https://eutils.ncbi.nlm.nih.gov/entrez/eutils/esummary.fcgi?db=pmc&email=greenescientist@gmail.com&retmode=json&id=\";\n\n// look up journal or paper metadata from nih.gov\nexport const getNeighborsMetadata = async (array) => {\n  // get pmcid's for looking up meta data\n  const ids = array.map((entry) => entry.pmcid).filter((entry) => entry);\n\n  // look up metadata\n  const metadata = (await (await fetch(metaLookup + ids.join(\",\"))).json())\n    .result;\n\n  // incorp meta data into journal/paper objects\n  const incorp = (entry) => ({ ...entry, ...(metadata[entry.pmcid] || {}) });\n  array = array.map(incorp);\n\n  // return results\n  return array;\n};\n\n// clean preprint data to handle more conveniently\nexport const cleanPreprint = (preprint) => ({\n  // doi\n  id: preprint.doi || null,\n  // name of paper\n  title: preprint.title || \"\",\n  // authors of paper\n  authors: (preprint.authors || []).split(\"; \").join(\", \"),\n  // name of journal\n  journal: preprint.publisher || \"\",\n  // year of publication\n  year: preprint.accepted_date.split(\"-\")[0] || \"\",\n  // is preliminary (PDF) result or XML/HTML result\n  prelim: preprint.xml_found ? false : true,\n});\n\n// clean journal or paper neighbor data to handle more conveniently\nexport const cleanNeighbors = (array) => {\n  // get range of distances\n  const distances = array.map((entry) => entry.distance);\n  const max = Math.max(...distances);\n  const min = Math.min(...distances);\n  const diff = max - min;\n\n  // sort by smaller distances first\n  array.sort((a, b) => a.distance - b.distance);\n\n  // set new values of array. keep only needed props and rename sensibly\n  array = array.map((entry, index) => ({\n    // pubmed id\n    id: entry.pmcid || null,\n    // name of paper\n    title: entry.title || \"\",\n    // authors of paper\n    authors: (entry.authors || [])\n      .map((author) => author.name || \"\")\n      .filter((name) => name)\n      .join(\", \"),\n    // name of journal\n    journal: (entry.fulljournalname || entry.journal || \"\")\n      .split(\"_\")\n      .join(\" \"),\n    // year of publication\n    year: (entry.pubdate || \"\").split(\" \")[0] || \"\",\n    // distance score\n    distance: entry.distance,\n    // normalized distance score\n    strength: (entry.distance - min) / diff,\n    // whole number rank\n    rank: index + 1,\n  }));\n\n  return array;\n};\n","import \"./status.css\";\n\n// status key codes\nexport const empty = \"EMPTY\";\nexport const loading = \"LOADING\";\nexport const success = \"SUCCESS\";\n\n// loading/error status component\n\nconst Status = ({ status }) => {\n  if (status === empty) {\n    return (\n      <section className=\"center gray\">\n        <i className=\"fas fa-exclamation\"></i>\n        <span>Search for a doi</span>\n      </section>\n    );\n  }\n\n  if (status === loading) {\n    return (\n      <section className=\"center gray\">\n        <i className=\"fas fa-spinner fa-spin\"></i>\n        <span>Loading...</span>\n      </section>\n    );\n  }\n\n  if (status === success) return null;\n\n  return (\n    <section className=\"center red\">\n      <i className=\"far fa-times-circle\"></i>\n      <span>{status || \"Couldn't get results\"}</span>\n    </section>\n  );\n};\n\nexport default Status;\n","import { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport { useCallback } from \"react\";\nimport * as Sentry from \"@sentry/react\";\n\nimport { getNeighbors } from \"./backend\";\nimport { getNeighborsMetadata } from \"./backend\";\nimport { cleanPreprint } from \"./backend\";\nimport { cleanNeighbors } from \"./backend\";\n\nimport { loading } from \"./status\";\nimport { success } from \"./status\";\n\nimport \"./search.css\";\n\nconst defaultSearch = \"e.g. 10.1101/833400\";\n\n// search box component\n\nconst Search = ({\n  status,\n  setStatus,\n  setPreprint,\n  setSimilarJournals,\n  setSimilarPapers,\n  setCoordinates,\n}) => {\n  // default query\n  const [query, setQuery] = useState(getUrl() || defaultSearch);\n\n  // on type\n  const onChange = useCallback(\n    (event) => setQuery(event.target.value.trim()),\n    []\n  );\n\n  // search\n  const search = useCallback(\n    async (doi, updateUrl = true) => {\n      // clean doi\n      doi = cleanDoi(doi);\n\n      // update search box with cleaned doi\n      setQuery(doi);\n\n      // exit if doi query empty\n      if (!doi) return;\n\n      // update url based on search\n      if (updateUrl) setUrl(doi);\n\n      // set loading status\n      setStatus(loading);\n\n      // get preprint info and neighbor data\n      try {\n        let {\n          preprint,\n          similarJournals,\n          similarPapers,\n          coordinates,\n        } = await getNeighbors(doi);\n        preprint = cleanPreprint(preprint);\n        similarJournals = await getNeighborsMetadata(similarJournals);\n        similarPapers = await getNeighborsMetadata(similarPapers);\n        similarJournals = cleanNeighbors(similarJournals);\n        similarPapers = cleanNeighbors(similarPapers);\n        setStatus(success);\n        setPreprint(preprint);\n        setSimilarJournals(similarJournals);\n        setSimilarPapers(similarPapers);\n        setCoordinates(coordinates);\n      } catch (error) {\n        if (error.name !== \"CustomError\")\n          error.message = \"Couldn't get results\";\n        setStatus(error.message);\n        setPreprint({});\n        setSimilarJournals([]);\n        setSimilarPapers([]);\n        setCoordinates({});\n        Sentry.captureException(error, { tags: { doi } });\n      }\n    },\n    [\n      setStatus,\n      setPreprint,\n      setSimilarJournals,\n      setSimilarPapers,\n      setCoordinates,\n    ]\n  );\n\n  // when user navigates back/forward\n  const onNav = useCallback(() => {\n    // get new doi\n    const doi = getUrl();\n    if (!doi) return;\n    // put doi in search box\n    setQuery(doi);\n    // run search, without updating url since browser does this automatically\n    search(doi, false);\n  }, [search]);\n\n  // search for doi in url if any on first load\n  useEffect(() => {\n    if (getUrl()) search(getUrl());\n  }, [search]);\n\n  // listen for user back/forward nav\n  useEffect(() => {\n    window.addEventListener(\"popstate\", onNav);\n    return () => window.removeEventListener(\"popstate\", onNav);\n  }, [onNav, search]);\n\n  // render\n  return (\n    <section id=\"search\">\n      <p className=\"center\">\n        <i>\n          Enter the <a href=\"https://www.biorxiv.org/\">bioRxiv</a> or{\" \"}\n          <a href=\"https://www.medrxiv.org/\">medRxiv</a> DOI of your preprint\n        </i>\n      </p>\n      <form\n        className=\"search\"\n        onSubmit={(event) => {\n          // prevent page from navigating away/refreshing on submit\n          event.preventDefault();\n          // run search\n          search(query);\n        }}\n      >\n        <input\n          className=\"search_input\"\n          value={query}\n          onChange={onChange}\n          type=\"text\"\n          placeholder=\"e.g. 10.1101/833400\"\n          disabled={status === loading}\n          onFocus={({ target }) => target.select()}\n        />\n        <button\n          className=\"search_button\"\n          type=\"submit\"\n          title=\"Search for related papers and journals\"\n          disabled={status === loading}\n        >\n          <i className=\"fas fa-search\"></i>\n        </button>\n      </form>\n    </section>\n  );\n};\n\n// clean what user types into search box for convenience\n// remove everything before first number, eg \"doi:\"\n// remove version at end, eg \"v4\"\nconst cleanDoi = (query) =>\n  query.replace(/^\\D*/g, \"\").replace(/v\\d+$/g, \"\").trim();\n\n// get doi from url\nconst getUrl = () =>\n  new URLSearchParams(window.location.search.substring(1)).get(\"doi\");\n\n// put doi in url as param\nconst setUrl = (doi) => {\n  const oldUrl = window.location.href;\n  const base = window.location.href.split(/[?#]/)[0];\n  const newUrl = base + \"?doi=\" + doi;\n  // compare old to new url to prevent duplicate history entries when refreshing\n  if (oldUrl !== newUrl) window.history.pushState(null, null, newUrl);\n};\n\nexport default Search;\n","import { useState } from 'react';\nimport { useEffect } from 'react';\nimport { useCallback } from 'react';\nimport { useRef } from 'react';\nimport { usePopper } from 'react-popper';\n\n// get fitted view box of svg\nexport const useViewBox = (rerender) => {\n  const svg = useRef();\n  const [viewBox, setViewBox] = useState(undefined);\n\n  useEffect(() => {\n    // if svg not mounted yet, exit\n    if (!svg.current)\n      return;\n    // get bbox of content in svg\n    const { x, y, width, height } = svg.current.getBBox();\n    // set view box to bbox, essentially fitting view to content\n    setViewBox([x, y, width, height].map((n) => n.toFixed(2)).join(' '));\n  }, [rerender]);\n\n  return [svg, viewBox];\n};\n\n// use tooltip\nexport const useTooltip = (delay = 200) => {\n  const [show, setShow] = useState(false);\n  const [anchor, anchorRef] = useState(null);\n  const [tooltip, tooltipRef] = useState(null);\n\n  // tooltip timer\n  const timeout = useRef();\n\n  // make tooltip\n  const { styles, attributes, update } = usePopper(anchor, tooltip, {\n    placement: 'top',\n    modifiers: [\n      // https://github.com/popperjs/popper-core/issues/1138\n      { name: 'computeStyles', options: { adaptive: false } },\n      { name: 'offset', options: { offset: [0, 10] } },\n      { name: 'flip', options: { rootBoundary: 'document' } }\n    ]\n  });\n\n  // props to attach to tooltip element\n  const tooltipProps = {\n    style: styles.popper,\n    ...attributes.popper\n  };\n\n  // open tooltip\n  const open = useCallback(() => {\n    window.clearTimeout(timeout.current);\n    timeout.current = window.setTimeout(() => setShow(true), delay);\n  }, [delay]);\n\n  // close tooltip\n  const close = useCallback(() => {\n    window.clearTimeout(timeout.current);\n    setShow(false);\n  }, []);\n\n  // attach event listeners\n  useEffect(() => {\n    if (!anchor)\n      return;\n\n    anchor.addEventListener('mouseenter', open);\n    anchor.addEventListener('focus', open);\n    anchor.addEventListener('mouseleave', close);\n    anchor.addEventListener('blur', close);\n\n    return () => {\n      anchor.removeEventListener('mouseenter', open);\n      anchor.removeEventListener('focus', open);\n      anchor.removeEventListener('mouseleave', close);\n      anchor.removeEventListener('blur', close);\n    };\n  }, [anchor, close, open]);\n\n  return { show, anchorRef, tooltipRef, tooltipProps, update };\n};\n","import { createPortal } from \"react-dom\";\nimport { useTooltip } from \"./hooks\";\n\nconst link = \"https://doi.org/\";\n\n// preprint info section\n\nconst PreprintInfo = ({\n  preprint: { id, title, authors, journal, year, prelim },\n}) => {\n  // tooltip\n  const { show, anchorRef, tooltipRef, tooltipProps } = useTooltip();\n\n  return (\n    <section id=\"your-preprint\">\n      <h3>\n        <i className=\"fas fa-feather-alt\"></i>\n        <span>Your Preprint</span>\n      </h3>\n      <p>\n        <a href={link + id} title={title} className=\"card_detail\">\n          {title}\n        </a>\n        <span title={authors} className=\"card_detail truncate\" tabIndex=\"0\">\n          {authors}\n        </span>\n        <span\n          title={journal + \" · \" + year}\n          className=\"card_detail truncate\"\n          tabIndex=\"0\"\n        >\n          {journal} · {year}\n        </span>\n      </p>\n      {prelim && (\n        <>\n          <hr />\n          <p ref={anchorRef} className=\"center gray\">\n            <i className=\"fas fa-info-circle\"></i>\n            <span>Preliminary results</span>\n          </p>\n          {show &&\n            createPortal(\n              <span ref={tooltipRef} {...tooltipProps} className=\"tooltip\">\n                These results were generated using the PDF version of the\n                preprint, which is less reliable and can reduce the accuracy of\n                predictions. Check back later when the full-text version is\n                available.\n              </span>,\n              document.body\n            )}\n        </>\n      )}\n    </section>\n  );\n};\n\nexport default PreprintInfo;\n","import color from \"color\";\n\nimport \"./card.css\";\n\nconst rankColorA = color(\"#ff980020\");\nconst rankColorB = color(\"#ff9800\");\n\nconst link = \"https://www.google.com/search?q=\";\n\n// similar journals section\n\nconst SimilarJournals = ({ similarJournals }) => (\n  <section id=\"similar-journals\">\n    <h3>\n      <i className=\"fas fa-bookmark\"></i>\n      <span>Most Similar Journals</span>\n    </h3>\n    {similarJournals.map(({ journal, rank, distance, strength }, index) => (\n      <div key={index} className=\"card\">\n        <div\n          className=\"card_score\"\n          title={\"Distance score: \" + distance}\n          style={{ backgroundColor: rankColorB.mix(rankColorA, strength) }}\n        >\n          {rank}\n        </div>\n        <div className=\"card_details\">\n          <a href={link + journal} className=\"card_detail\">\n            {journal}\n          </a>\n        </div>\n      </div>\n    ))}\n  </section>\n);\n\nexport default SimilarJournals;\n","import color from \"color\";\n\nimport \"./card.css\";\n\nconst rankColorA = color(\"#ff980020\");\nconst rankColorB = color(\"#ff9800\");\n\nconst link = \"https://www.ncbi.nlm.nih.gov/pmc/articles/\";\n\n// related papers section\n\nconst SimilarPapers = ({ similarPapers }) => (\n  <section id=\"similar-papers\">\n    <h3>\n      <i className=\"fas fa-scroll\"></i>\n      <span>Most Similar Papers</span>\n    </h3>\n    {similarPapers.map(\n      (\n        { id, title, authors, year, journal, rank, distance, strength },\n        index\n      ) => (\n        <div key={index} className=\"card\">\n          <div\n            className=\"card_score\"\n            title={\"Distance score: \" + distance}\n            style={{ backgroundColor: rankColorB.mix(rankColorA, strength) }}\n          >\n            {rank}\n          </div>\n          <div className=\"card_details\">\n            <a href={link + id} title={title} className=\"card_detail\">\n              {title}\n            </a>\n            <div title={authors} className=\"card_detail truncate\" tabIndex=\"0\">\n              {authors}\n            </div>\n            <div\n              title={journal + \" · \" + year}\n              className=\"card_detail truncate\"\n              tabIndex=\"0\"\n            >\n              {journal} · {year}\n            </div>\n          </div>\n        </div>\n      )\n    )}\n  </section>\n);\n\nexport default SimilarPapers;\n","import { createPortal } from \"react-dom\";\n\nimport { startImage } from \"./map-sections\";\nimport { endImage } from \"./map-sections\";\nimport { range } from \"./map-sections\";\nimport { getPcNum } from \"./map-sections\";\nimport { getCloudUrl } from \"./map-sections\";\nimport { useTooltip } from \"./hooks\";\n\nimport \"./cloud-buttons.css\";\n\n// cloud image button components\n\nconst CloudButtons = ({ selectedPc, setSelectedPc }) => (\n  <p className=\"center\">\n    {range(startImage, endImage).map((number) => (\n      <CloudButton key={number} {...{ number, selectedPc, setSelectedPc }} />\n    ))}\n  </p>\n);\n\nexport default CloudButtons;\n\n// cloud image button component\nconst CloudButton = ({ number, selectedPc, setSelectedPc }) => {\n  // tooltip\n  const { show, anchorRef, tooltipRef, tooltipProps, update } = useTooltip();\n\n  // render\n  return (\n    <>\n      <button\n        ref={anchorRef}\n        className=\"cloud_button\"\n        data-number={getPcNum(number)}\n        data-selected={selectedPc === number}\n        onClick={() =>\n          selectedPc === number ? setSelectedPc(null) : setSelectedPc(number)\n        }\n      >\n        <img\n          src={getCloudUrl(number)}\n          title={\"Select principal component \" + getPcNum(number)}\n          alt={\"Select principal component \" + getPcNum(number)}\n          onLoad={update}\n        />\n      </button>\n      {show &&\n        createPortal(\n          <img\n            ref={tooltipRef}\n            src={getCloudUrl(number)}\n            className=\"cloud_enlarged\"\n            title={\"Select principal component \" + getPcNum(number)}\n            alt={\"Select principal component \" + getPcNum(number)}\n            onLoad={update}\n            {...tooltipProps}\n          />,\n          document.body\n        )}\n    </>\n  );\n};\n","// limit value between min and max values\nconst limit = (value, min, max) => Math.max(Math.min(value, max), min);\n\n// shorthands for math functions\nconst sq = (x) => Math.pow(x, 2);\nconst rt = (x) => Math.sqrt(x);\n\n// boost a normalized (0 to 1) value in non-linear, \"circular\" way\n// see comments below. middle values will be boosted more than extreme values.\nexport const boost = (x, knee = 0) => {\n  // limit inputs\n  x = limit(x, 0, 1);\n  knee = limit(knee, 0.00001, 1);\n\n  // find formula for center (x,y) of circle given 2 points and radius:\n  // https://stackoverflow.com/questions/36211171/finding-center-of-a-circle-given-two-points-and-radius\n\n  // set (x1,y1) and (x2,y2) to (0,0) and (1,1):\n  // (x-0.5-0.5sqrt(2r^2-1))^2/r^2 + (y-0.5+0.5sqrt(2r^2-1))^2/r^2 = 1\n\n  // graph the equation on desmos.com to understand what this boost func does:\n  // \\frac{\\left(x-\\ 0.5-0.5\\sqrt{2r^{2}-1}\\right)^{2}}{r^{2}}+\\frac{\\left(y-0.5+0.5\\sqrt{2r^{2}-1}\\right)^{2}}{r^{2}}=1\\ \\left\\{0<x<1\\right\\}\\ \\left\\{0<y<1\\right\\}\n\n  // knee will determine radius:\n  // 0% knee = infinite radius = straight line from (0,0) to (1,1)\n  // 100% knee = radius of 1 = quarter circle from (0,0) to (1,1)\n  const r = 1 / knee;\n\n  // solve previous formula for x with WolframAlpha and simplify\n  const a = rt(2 * sq(r) - 1);\n  return (1 + rt(2) * rt(2 * x * a + sq(r) - a - 2 * sq(x) + 2 * x) - a) / 2;\n};\n","import { pcColorA } from \"./map-sections\";\nimport { pcColorB } from \"./map-sections\";\nimport { pcColorC } from \"./map-sections\";\nimport { countColorA } from \"./map-sections\";\nimport { countColorB } from \"./map-sections\";\nimport { getPcNum } from \"./map-sections\";\nimport { boost } from \"./math\";\nimport { useViewBox } from \"./hooks\";\n\nimport \"./map.css\";\n\n// size of map cells in svg units. match to bin width of plot data\nlet cellSize = 0.85;\n// increase by small % to reduce anti-alias gaps between cells\ncellSize *= 1.05;\n\n// map component\n\n// pubmed central map section\nconst Map = ({\n  cells,\n  selectedPc,\n  selectedCell,\n  setSelectedCell,\n  coordinates,\n}) => {\n  // component state\n  const [svg, viewBox] = useViewBox(cells);\n\n  if (!selectedPc) {\n    // if no selected pc, color cells by paper count\n    // normalize counts\n    const counts = cells.map((cell) => cell.count);\n    const minCount = Math.min(...counts);\n    const maxCount = Math.max(...counts);\n    for (const cell of cells) {\n      cell.strength = (cell.count - minCount) / (maxCount - minCount) || 0;\n      cell.strength = boost(cell.strength, 1);\n    }\n  } else {\n    // if pc selected, color cells by pc score\n    // normalize pc scores\n    for (const cell of cells) {\n      const pc = cell.pcs.find((pc) => pc.name === getPcNum(selectedPc));\n      cell.score = pc?.score || 0;\n    }\n    const absScore =\n      Math.max(...cells.map((cell) => Math.abs(cell.score))) || 1;\n    for (const cell of cells) cell.strength = cell.score / absScore || 0;\n  }\n\n  // render\n  return (\n    <p>\n      <svg ref={svg} viewBox={viewBox} className=\"map\">\n        {\n          // put extra selected cell last, so it will always be on top\n          cells.concat(selectedCell || []).map((cell, number) => (\n            <rect\n              key={number}\n              className=\"cell\"\n              x={cell.x}\n              y={cell.y}\n              width={cellSize}\n              height={cellSize}\n              data-selected={cell === selectedCell}\n              fill={\n                selectedPc\n                  ? pcColorB.mix(\n                      cell.strength > 0 ? pcColorA : pcColorC,\n                      Math.abs(cell.strength)\n                    )\n                  : countColorB.mix(countColorA, cell.strength)\n              }\n              strokeWidth={cellSize / 4}\n              onClick={() =>\n                cell === selectedCell\n                  ? setSelectedCell(null)\n                  : setSelectedCell(cell)\n              }\n            />\n          ))\n        }\n        {typeof coordinates.x === \"number\" &&\n          typeof coordinates.y === \"number\" && (\n            <circle\n              className=\"marker\"\n              strokeWidth={cellSize / 4}\n              cx={coordinates.x}\n              cy={coordinates.y}\n              r={cellSize / 2}\n            />\n          )}\n      </svg>\n    </p>\n  );\n};\n\nexport default Map;\n","import { pcColorA } from \"./map-sections\";\nimport { pcColorC } from \"./map-sections\";\nimport { countColorA } from \"./map-sections\";\nimport { countColorB } from \"./map-sections\";\nimport { getPcNum } from \"./map-sections\";\n\nimport \"./legend.css\";\n\n// map legend component\n\nconst Legend = ({ selectedPc, coordinates }) => (\n  <p className=\"legend\">\n    {selectedPc && (\n      <>\n        <span>\n          <span\n            className=\"legend_square\"\n            style={{ backgroundColor: pcColorA }}\n          ></span>\n          pos pc\n          {getPcNum(selectedPc)}\n        </span>\n        <span>\n          <span\n            className=\"legend_square\"\n            style={{ backgroundColor: pcColorC }}\n          ></span>\n          neg pc\n          {getPcNum(selectedPc)}\n        </span>\n      </>\n    )}\n    {!selectedPc && (\n      <>\n        <span>\n          <span\n            className=\"legend_square\"\n            style={{ backgroundColor: countColorA }}\n          ></span>\n          many papers\n        </span>\n        <span>\n          <span\n            className=\"legend_square\"\n            style={{ backgroundColor: countColorB }}\n          ></span>\n          few papers\n        </span>\n      </>\n    )}\n    {coordinates.x && coordinates.y && (\n      <>\n        <span>\n          <span\n            className=\"legend_circle\"\n            style={{ backgroundColor: \"var(--red)\" }}\n          ></span>\n          your preprint\n        </span>\n      </>\n    )}\n  </p>\n);\n\nexport default Legend;\n","import { Fragment } from \"react\";\n\nimport { useViewBox } from \"./hooks\";\n\nimport \"./cell-details.css\";\n\n// lemma plot settings\nconst maxChars = 20;\n\n// details of selected cell component\n\nconst CellDetails = ({ selectedCell }) => {\n  // get lemmas from selected cell\n  const lemmas = selectedCell.lemmas || [];\n\n  // component state\n  const [svg, viewBox] = useViewBox(lemmas);\n\n  // normalize lemma scores\n  const scores = lemmas.map((lemma) => lemma.score);\n  const minScore = Math.min(...scores);\n  const maxScore = Math.max(...scores);\n  for (const lemma of lemmas)\n    lemma.strength = (lemma.score - minScore) / (maxScore - minScore) || 0;\n\n  // height of rows and font size of text in svg units (and pixels, because\n  // width of svg is matched to view box which is fit to contents)\n  const size = 15;\n\n  // width of svg, based on view box\n  const width = (viewBox || \"\").split(\" \")[2] || 0;\n  // plot area boundaries\n  const left = 0;\n  const top = 0;\n  const right = lemmas.length * size + size;\n  const bottom = lemmas.length * size + size;\n  // min width of bars\n  const minWidth = size / 2;\n\n  return (\n    <>\n      <h4>Papers</h4>\n      <p>{selectedCell.count.toLocaleString()}</p>\n      <h4>Top Journals</h4>\n      <p>\n        {selectedCell.journals.map(({ name, count }, number) => (\n          <span key={number} className=\"cell_detail_row\">\n            <span className=\"truncate\">{name}</span>\n            <span className=\"truncate\">{count.toLocaleString()} papers</span>\n          </span>\n        ))}\n      </p>\n      <h4>Top Lemmas</h4>\n      <p>\n        <svg\n          ref={svg}\n          viewBox={viewBox}\n          className=\"chart\"\n          style={{ width: width + \"px\" }}\n        >\n          {lemmas.map((lemma, index) => {\n            const width = Math.max(lemma.strength * (right - left), minWidth);\n            const y = top + (index + 1) * size;\n            return (\n              <Fragment key={index}>\n                <text\n                  x={left - size * 0.75}\n                  y={y}\n                  textAnchor=\"end\"\n                  dominantBaseline=\"middle\"\n                  fontSize={size}\n                  title={lemma.name}\n                >\n                  {lemma.name.length > maxChars\n                    ? lemma.name.substr(0, maxChars) + \"...\"\n                    : lemma.name}\n                </text>\n                <rect\n                  x={left}\n                  y={y - size / 4}\n                  width={width}\n                  height={size / 2}\n                />\n              </Fragment>\n            );\n          })}\n          <path\n            d={`M ${left} ${top} L ${left} ${bottom} L ${right} ${bottom}`}\n            strokeWidth={size / 10}\n          />\n          <text\n            x={(left + right) / 2}\n            y={bottom + size * 0.75}\n            textAnchor=\"middle\"\n            dominantBaseline=\"hanging\"\n            fontSize={size}\n          >\n            Association Strength\n          </text>\n        </svg>\n      </p>\n    </>\n  );\n};\n\nexport default CellDetails;\n","import { useState } from \"react\";\nimport { useEffect } from \"react\";\n\nimport CloudButtons from \"./cloud-buttons\";\nimport Map from \"./map\";\nimport Legend from \"./legend\";\nimport CellDetails from \"./cell-details\";\n\nimport color from \"color\";\n\n// map cell data\nconst mapData = \"./data/plot.json\";\n\n// word cloud \"principal component\" (pc) images\nexport const cloudImages =\n  \"https://raw.githubusercontent.com/greenelab/annorxiver/master/biorxiv/pca_association_experiment/output/word_pca_similarity/figure_pieces/pca_XX_cossim_word_cloud.png\";\nexport const startImage = 1;\nexport const endImage = 50;\n\n// map count color;\nexport const countColorA = color(\"#606060\");\nexport const countColorB = color(\"#e0e0e0\");\n\n// map principal component gradient colors\nexport const pcColorA = color(\"#ff9800\");\nexport const pcColorB = color(\"#ffffff\");\nexport const pcColorC = color(\"#2196f3\");\n\n// map sections component\n\nconst MapSections = ({ coordinates }) => {\n  // component state\n  const [cells, setCells] = useState([]);\n  const [selectedPc, setSelectedPc] = useState(null);\n  const [selectedCell, setSelectedCell] = useState(null);\n\n  // on app start, load map cell data\n  useEffect(() => {\n    const getMapData = async () =>\n      setCells(await (await fetch(mapData)).json());\n    getMapData();\n  }, []);\n\n  // render\n  return (\n    <>\n      <section id=\"map\">\n        <h3>\n          <i className=\"fas fa-map\"></i>\n          <span>Map of PubMed Central</span>\n        </h3>\n        <CloudButtons {...{ selectedPc, setSelectedPc }} />\n        <Map\n          {...{ cells, selectedPc, selectedCell, setSelectedCell, coordinates }}\n        />\n        <Legend {...{ selectedPc, coordinates }} />\n      </section>\n      {selectedCell && (\n        <>\n          <hr />\n          <section id=\"cell-details\">\n            <h3>\n              <i className=\"fas fa-square\"></i>\n              <span>Selected Square</span>\n            </h3>\n            <CellDetails {...{ selectedCell, selectedPc, setSelectedPc }} />\n          </section>\n        </>\n      )}\n    </>\n  );\n};\n\nexport default MapSections;\n\n// util func to generate range between ints\nexport const range = (start, end) =>\n  Array.from({ length: end - start + 1 }, (_, i) => start + i);\n\n// get principal component number padded with 0's\nexport const getPcNum = (number) => String(number).padStart(2, \"0\");\n\n// get url of word cloud image\nexport const getCloudUrl = (number) =>\n  cloudImages.replace(\"XX\", getPcNum(number));\n","// about section\n\nconst About = () => (\n  <section id=\"help\">\n    <h3>\n      <i className=\"fas fa-question-circle\"></i>\n      <span>About this tool</span>\n    </h3>\n    <p>\n      This tool uses a machine learning model trained on 1.7 million{\" \"}\n      <a href=\"https://www.ncbi.nlm.nih.gov/pmc/tools/openftlist/\">\n        PubMed Central open access documents\n      </a>{\" \"}\n      to find similar papers and journals based on the textual content of your{\" \"}\n      <a href=\"https://www.biorxiv.org/\">bioRxiv</a> or{\" \"}\n      <a href=\"https://www.medrxiv.org/\">medRxiv</a> preprint. These results can\n      be used as a starting point when searching for a place to publish your\n      paper.\n    </p>\n    <p>\n      The tool also provides a \"map\" of the PubMed Central documents, grouped\n      into bins based on similar textual content, and shows you where your\n      preprint falls on the map. Select a square to learn more about the papers\n      in that bin.\n    </p>\n    <p>\n      The map also incorporates a set of 50{\" \"}\n      <a href=\"https://en.wikipedia.org/wiki/Principal_component_analysis\">\n        principal components\n      </a>{\" \"}\n      (PCs) generated from bioRxiv. Each PC represents two high level concepts\n      characterized by keywords of various strengths, illustrated in the word\n      cloud thumbnails above the map. Select a thumbnail to color the map by\n      that PC. Deeper orange squares will be papers that correlate more with the\n      orange keywords in the image, and vice versa for blue.\n    </p>\n    <p>\n      For more information, see the{\" \"}\n      <a href=\"https://github.com/greenelab/preprint-similarity-search\">\n        readme on GitHub\n      </a>\n      .\n    </p>\n  </section>\n);\n\nexport default About;\n","// footer component\n\nconst Footer = () => (\n  <footer>\n    <section>\n      <p>\n        A project of the <a href=\"https://greenelab.com/\">Greene Lab</a>\n        <br />\n        <a href=\"https://github.com/greenelab/preprint-similarity-search\">\n          <i className=\"fab fa-github\"></i>\n          <span>View on GitHub</span>\n        </a>\n      </p>\n    </section>\n  </footer>\n);\n\nexport default Footer;\n","import { useState } from \"react\";\n\nimport Header from \"./header\";\nimport Search from \"./search\";\nimport PreprintInfo from \"./preprint-info\";\nimport SimilarJournals from \"./similar-journals\";\nimport SimilarPapers from \"./similar-papers\";\nimport MapSections from \"./map-sections\";\nimport About from \"./about\";\nimport Footer from \"./footer\";\nimport Status from \"./status\";\nimport { empty } from \"./status\";\nimport { success } from \"./status\";\n\nimport \"./app.css\";\n\n// main app component\n\nconst App = () => {\n  // status state\n  const [status, setStatus] = useState(empty);\n\n  // main data\n  const [preprint, setPreprint] = useState({});\n  const [similarJournals, setSimilarJournals] = useState([]);\n  const [similarPapers, setSimilarPapers] = useState([]);\n  const [coordinates, setCoordinates] = useState({});\n\n  // render\n  return (\n    <>\n      <Header />\n      <main>\n        <Search\n          {...{\n            status,\n            setStatus,\n            setPreprint,\n            setSimilarJournals,\n            setSimilarPapers,\n            setCoordinates,\n          }}\n        />\n        <Status {...{ status }} />\n        <hr />\n        {status === success && (\n          <>\n            <PreprintInfo {...{ preprint }} />\n            <hr />\n            <SimilarPapers {...{ similarPapers }} />\n            <hr />\n            <SimilarJournals {...{ similarJournals }} />\n            <hr />\n          </>\n        )}\n        <MapSections {...{ coordinates }} />\n        <hr />\n        <About />\n      </main>\n      <Footer />\n    </>\n  );\n};\n\nexport default App;","import { render } from 'react-dom';\nimport * as Sentry from '@sentry/react';\nimport App from './app';\n\nSentry.init({\n  dsn:\n    'https://b1183a2fe86f4a8f951e9bb67341c07f@o7983.ingest.sentry.io/5407669', // api key\n  environment: process.env.NODE_ENV // production or development\n});\n\n// render whole app\nrender(<App />, document.getElementById('root'));\n"],"sourceRoot":""}