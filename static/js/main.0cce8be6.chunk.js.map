{"version":3,"sources":["logo.svg","header.js","backend.js","status.js","search.js","preprint-info.js","similar-journals.js","similar-papers.js","cloud-buttons.js","map.js","legend.js","cell-details.js","map-section.js","about.js","footer.js","app.js","index.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","createElement","id","fill","d","_ref4","stroke","strokeWidth","strokeLinecap","strokeLinejoin","_ref5","_ref6","_ref7","transform","_ref","svgRef","title","props","viewBox","ref","ForwardRef","forwardRef","className","getPreprintInfo","query","a","fetch","json","info","message","console","log","preprintTitle","preprintUrl","URL","flat","join","getNeighbors","neighbors","similarJournals","journal_neighbors","similarPapers","paper_neighbors","coordinates","x","dim1","y","dim2","removePMC","entry","pmcid","document","replace","forEach","getNeighborsMetadata","array","ids","map","filter","metadata","result","incorp","cleanNeighbors","distances","distance","max","Math","min","diff","sort","b","index","authors","author","name","journal","fulljournalname","split","year","pubdate","strength","rank","status","setPreprintTitle","setPreprintUrl","setStatus","setSimilarJournals","setSimilarPapers","setCoordinates","useState","getUrl","setQuery","onChange","useCallback","event","value","trim","search","doi","updateUrl","cleanDoi","setUrl","onNav","useEffect","window","addEventListener","removeEventListener","href","onSubmit","preventDefault","type","placeholder","disabled","URLSearchParams","location","substring","get","oldUrl","newUrl","history","pushState","rankColorA","color","rankColorB","style","backgroundColor","mix","selectedPc","setSelectedPc","range","startImage","endImage","number","CloudButton","hover","setHover","reference","setReference","popper","setPopper","timeout","useRef","usePopper","placement","modifiers","options","adaptive","offset","rootBoundary","styles","attributes","update","data-number","getPcNum","data-selected","onClick","onMouseEnter","clearTimeout","current","setTimeout","onMouseLeave","src","getCloudUrl","alt","onLoad","createPortal","body","cells","selectedCell","setSelectedCell","svg","setViewBox","cell","pc","pcs","find","score","absScore","abs","counts","count","minCount","maxCount","getBBox","width","height","undefined","concat","cellSize","pcColorB","pcColorA","pcColorC","countColorB","countColorA","cx","cy","r","toLocaleString","journals","slice","role","parseInt","toFixed","setCells","getMapData","start","end","Array","from","_","String","padStart","render","getElementById"],"mappings":"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","file":"static/js/main.0cce8be6.chunk.js","sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"style\", null, \"\\n    #logo:hover #star,\\n    #logo[data-spin] #star {\\n      animation: star_rotate 2s ease forwards infinite;\\n    }\\n    @keyframes star_rotate {\\n      from {\\n        transform: rotate(0);\\n      }\\n      to {\\n        transform: rotate(360deg);\\n      }\\n    }\\n  \");\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"path\", {\n  id: \"book_filling\",\n  fill: \"#ffe0b2\",\n  d: \"       M 10 50       L 50 70       L 90 50       L 90 35       L 50 55       L 10 35       A 10 10 0 0 0 10 50       M 10 65       L 50 85       L 90 65       L 90 50       L 50 70       L 10 50       A 10 10 0 0 0 10 65     \"\n});\n\nvar _ref4 = /*#__PURE__*/React.createElement(\"path\", {\n  id: \"book_top_cover\",\n  fill: \"#000000\",\n  stroke: \"#000000\",\n  strokeWidth: 5,\n  strokeLinecap: \"round\",\n  strokeLinejoin: \"round\",\n  d: \"       M 50 15       L 90 35       L 50 55       L 10 35       z     \"\n});\n\nvar _ref5 = /*#__PURE__*/React.createElement(\"path\", {\n  id: \"book_outlines\",\n  fill: \"none\",\n  stroke: \"#000000\",\n  strokeWidth: 5,\n  strokeLinecap: \"round\",\n  strokeLinejoin: \"round\",\n  d: \"       M 10 50       L 30 60       M 47.5 68.75       L 50 70       L 90 50       M 10 65       L 50 85       L 90 65       M 10 35       A 10 10 0 0 0 10 50       A 10 10 0 0 0 10 65     \"\n});\n\nvar _ref6 = /*#__PURE__*/React.createElement(\"path\", {\n  id: \"bookmark\",\n  fill: \"#000000\",\n  stroke: \"#000000\",\n  strokeWidth: 2,\n  strokeLinecap: \"round\",\n  strokeLinejoin: \"round\",\n  d: \"       M 35 55       L 35 71.25       L 38.75 69.25       L 42.5 74.75       L 42.5 58.75       z     \"\n});\n\nvar _ref7 = /*#__PURE__*/React.createElement(\"g\", {\n  transform: \"translate(50,34) rotate(26.565) skewX(-26.565) scale(0.10)\"\n}, /*#__PURE__*/React.createElement(\"path\", {\n  id: \"star\",\n  fill: \"#ffe0b2\",\n  stroke: \"#ffe0b2\",\n  strokeWidth: 20,\n  strokeLinecap: \"round\",\n  strokeLinejoin: \"round\",\n  d: \"         M 0.000 -100.000         L 29.389 -40.451         L 95.106 -30.902         L 47.553 15.451         L 58.779 80.902         L 0.000 50.000         L -58.779 80.902         L -47.553 15.451         L -95.106 -30.902         L -29.389 -40.451         z       \"\n}));\n\nvar SvgLogo = function SvgLogo(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 100 100\",\n    id: \"logo\",\n    ref: svgRef\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _ref2, _ref3, _ref4, _ref5, _ref6, _ref7);\n};\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgLogo, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/logo.e444815c.svg\";\nexport { ForwardRef as ReactComponent };","import React from 'react';\n\nimport { ReactComponent as Logo } from './logo.svg';\n\nimport './header.css';\n\n// header component\n\nexport default () => (\n  <header>\n    <section>\n      <h1>AnnoRxver</h1>\n      <h2>Journal Recommender</h2>\n      <Logo className='logo' />\n    </section>\n  </header>\n);\n","const crossRef = 'https://api.crossref.org/works/';\n\n// lookup metadata info for queried preprint from crossref\nexport const getPreprintInfo = async (query) => {\n  // look up info\n  const { message: info } = await (await fetch(crossRef + query)).json();\n  console.log(info);\n\n  // rename and normalize props\n  let { title: preprintTitle, URL: preprintUrl } = info;\n  preprintTitle = preprintTitle.flat().join(' ');\n\n  // return results\n  return { preprintTitle, preprintUrl };\n};\n\nconst backendServer = 'https://api-journal-rec.greenelab.com/doi/';\n\n// get neighbor and coordinate data from backend\nexport const getNeighbors = async (query) => {\n  // lookup data from backend\n  const neighbors = await (await fetch(backendServer + query)).json();\n\n  // extract results\n  const similarJournals = neighbors.journal_neighbors || [];\n  const similarPapers = neighbors.paper_neighbors || [];\n  const coordinates = {\n    x: neighbors['2d_coord'].dim1,\n    y: neighbors['2d_coord'].dim2\n  };\n\n  // remove \"PMC\" prefix from PMCID's\n  const removePMC = (entry) =>\n    (entry.pmcid = (entry.pmcid || entry.document || '').replace('PMC', ''));\n  similarJournals.forEach(removePMC);\n  similarPapers.forEach(removePMC);\n\n  // return results\n  return { similarJournals, similarPapers, coordinates };\n};\n\nconst metaLookup =\n  'https://eutils.ncbi.nlm.nih.gov/entrez/eutils/esummary.fcgi?db=pmc&tool=AnnoRxivir&email=greenescientist@gmail.com&retmode=json&id=';\n\n// look up journal or paper metadata from nih.gov\nexport const getNeighborsMetadata = async (array) => {\n  // get pmcid's for looking up meta data\n  const ids = array.map((entry) => entry.pmcid).filter((entry) => entry);\n\n  // lookup metadata\n  const metadata = (await (await fetch(metaLookup + ids.join(','))).json())\n    .result;\n\n  // incorp meta data into journal/paper objects\n  const incorp = (entry) => ({ ...entry, ...(metadata[entry.pmcid] || {}) });\n  array = array.map(incorp);\n\n  // return results\n  return array;\n};\n\n// clean journal or paper neighbor data to handle more conveniently\nexport const cleanNeighbors = (array) => {\n  // get range of distances\n  const distances = array.map((entry) => entry.distance);\n  const max = Math.max(...distances);\n  const min = Math.min(...distances);\n  const diff = max - min;\n\n  // sort by smaller distances first\n  array.sort((a, b) => a.distance - b.distance);\n\n  // set new values of array. keep only needed props and rename sensibly\n  array = array.map((entry, index) => ({\n    // pubmed id\n    id: entry.pmcid || null,\n    // name of paper\n    title: entry.title || '',\n    // authors of paper\n    authors: (entry.authors || [])\n      .map((author) => author.name || '')\n      .filter((name) => name)\n      .join(', '),\n    // name of journal\n    journal: (entry.fulljournalname || entry.journal || '')\n      .split('_')\n      .join(' '),\n    // year of publication\n    year: (entry.pubdate || '').split(' ')[0] || '',\n    // distance score\n    distance: entry.distance,\n    // normalized distance score\n    strength: (entry.distance - min) / diff,\n    // whole number rank\n    rank: index + 1\n  }));\n\n  return array;\n};\n","import React from 'react';\n\nimport './status.css';\n\n// status key codes\nexport const empty = '';\nexport const loading = 'LOADING';\nexport const error = 'ERROR';\nexport const success = 'SUCCESS';\n\n// loading/error message component\n\nexport default ({ status }) => {\n  if (status === loading) {\n    return (\n      <section className='center'>\n        <div className='loading'>\n          <i className='fas fa-spinner fa-spin icon_with_text'></i>\n          <span>Loading...</span>\n        </div>\n      </section>\n    );\n  }\n\n  if (status === error) {\n    return (\n      <section className='center'>\n        <div className='error'>\n          <i className='far fa-times-circle icon_with_text'></i>\n          <span>Couldn't get results</span>\n        </div>\n      </section>\n    );\n  }\n\n  return null;\n};\n","import React, { useEffect } from 'react';\nimport { useState } from 'react';\nimport { useCallback } from 'react';\n\nimport { getPreprintInfo } from './backend';\nimport { getNeighbors } from './backend';\nimport { getNeighborsMetadata } from './backend';\nimport { cleanNeighbors } from './backend';\nimport { loading, success, error } from './status';\n\nimport './search.css';\n\n// search box component\n\nexport default ({\n  setPreprintTitle,\n  setPreprintUrl,\n  status,\n  setStatus,\n  setSimilarJournals,\n  setSimilarPapers,\n  setCoordinates\n}) => {\n  // default query\n  const [query, setQuery] = useState(getUrl() || '');\n\n  // on type\n  const onChange = useCallback(\n    (event) => setQuery(event.target.value.trim()),\n    []\n  );\n\n  // search\n  const search = useCallback(\n    async (doi, updateUrl = true) => {\n      // clean doi\n      doi = cleanDoi(doi);\n\n      // update search box with cleaned doi\n      setQuery(doi);\n\n      // exit if doi query empty\n      if (!doi)\n        return;\n\n      // set loading status\n      setStatus(loading);\n\n      // update url based on search\n      if (updateUrl)\n        setUrl(doi);\n\n      try {\n        // get preprint info\n        const { preprintTitle, preprintUrl } = await getPreprintInfo(doi);\n\n        // set preprint info\n        setPreprintTitle(preprintTitle);\n        setPreprintUrl(preprintUrl);\n\n        // get neighbor data\n        let {\n          similarJournals,\n          similarPapers,\n          coordinates\n        } = await getNeighbors(doi);\n        similarJournals = await getNeighborsMetadata(similarJournals);\n        similarPapers = await getNeighborsMetadata(similarPapers);\n        similarJournals = cleanNeighbors(similarJournals);\n        similarPapers = cleanNeighbors(similarPapers);\n\n        // set neighbor data\n        setSimilarJournals(similarJournals);\n        setSimilarPapers(similarPapers);\n        setCoordinates(coordinates);\n        setStatus(success);\n      } catch (errorMessage) {\n        console.log(errorMessage);\n        // set error status if any problem\n        setStatus(error);\n      }\n    },\n    [\n      setCoordinates,\n      setPreprintTitle,\n      setPreprintUrl,\n      setSimilarJournals,\n      setSimilarPapers,\n      setStatus\n    ]\n  );\n\n  // when user navigates back/forward\n  const onNav = useCallback(() => {\n    // get new doi\n    const doi = getUrl();\n    if (!doi)\n      return;\n    // put doi in search box\n    setQuery(doi);\n    // run search, without updating url since browser does this automatically\n    search(doi, false);\n  }, [search]);\n\n  // search for doi in url if any on first load\n  useEffect(() => {\n    if (getUrl())\n      search(getUrl());\n  }, [search]);\n\n  // listen for user back/forward nav\n  useEffect(() => {\n    window.addEventListener('popstate', onNav);\n    return () => window.removeEventListener('popstate', onNav);\n  }, [onNav, search]);\n\n  // render\n  return (\n    <section id='search'>\n      <p className='center'>\n        <i>\n          Enter the <a href='https://www.biorxiv.org/'>bioRxiv</a> DOI of your\n          preprint\n        </i>\n      </p>\n      <form\n        className='search'\n        onSubmit={(event) => {\n          // prevent page from navigating away/refreshing on submit\n          event.preventDefault();\n          // run search\n          search(query);\n        }}\n      >\n        <input\n          className='search_input'\n          value={query}\n          onChange={onChange}\n          type='text'\n          placeholder='e.g. 10.1101/833400'\n          disabled={status === 'LOADING'}\n        />\n        <button\n          className='search_button'\n          type='submit'\n          title='Search for related papers and journals'\n          disabled={status === 'LOADING'}\n        >\n          <i className='fas fa-search'></i>\n        </button>\n      </form>\n    </section>\n  );\n};\n\n// clean what user types into search box for convenience\n// remove everything before first number, eg \"doi:\"\n// remove version at end, eg \"v4\"\nconst cleanDoi = (query) =>\n  query.replace(/^\\D*/g, '').replace(/v\\d+$/g, '').trim();\n\n// get doi from url\nconst getUrl = () =>\n  new URLSearchParams(window.location.search.substring(1)).get('doi');\n\n// put doi in url as param\nconst setUrl = (doi) => {\n  const oldUrl = window.location.href;\n  const base = window.location.href.split(/[?#]/)[0];\n  const newUrl = base + '?doi=' + doi;\n  // compare old to new url to prevent duplicate history entries when refreshing\n  if (oldUrl !== newUrl)\n    window.history.pushState(null, null, newUrl);\n};\n","import React from 'react';\n\nimport Status from './status';\n\n// preprint info section\n\nexport default ({ preprintTitle, preprintUrl, status }) => (\n  <section id='your-preprint'>\n    <h3>\n      <i className='fas fa-feather-alt heading_icon'></i>Your Preprint\n    </h3>\n    {!(preprintTitle && preprintUrl) && <Status {...{ status }} />}\n    {preprintTitle && preprintUrl && (\n      <p className='center'>\n        <a href={preprintUrl}>{preprintTitle}</a>\n      </p>\n    )}\n  </section>\n);\n","import React from 'react';\n\nimport color from 'color';\n\nimport Status from './status';\nimport { success } from './status';\n\nimport './card.css';\n\nconst rankColorA = color('#ff980020');\nconst rankColorB = color('#ff9800');\n\nconst googleLink = 'https://www.google.com/search?q=';\n\n// similar journals section\n\nexport default ({ similarJournals, status }) => (\n  <section id='similar-journals'>\n    <h3>\n      <i className='fas fa-bookmark heading_icon'></i>Most Similar Journals\n    </h3>\n    {status !== success && <Status {...{ status }} />}\n    {status === success &&\n      similarJournals.map(\n        ({ journal, rank, distance, strength }, index) => (\n          <div key={index} className='card'>\n            <div\n              className='card_score'\n              title={'Distance score: ' + distance}\n              style={{\n                backgroundColor: rankColorB.mix(rankColorA, strength)\n              }}\n            >\n              {rank}\n            </div>\n            <div className='card_details'>\n              <a href={googleLink + journal}>{journal}</a>\n            </div>\n          </div>\n        )\n      )}\n  </section>\n);\n","import React from 'react';\n\nimport color from 'color';\n\nimport Status from './status';\nimport { success } from './status';\n\nimport './card.css';\n\nconst rankColorA = color('#ff980020');\nconst rankColorB = color('#ff9800');\n\nconst paperLink = 'https://www.ncbi.nlm.nih.gov/pmc/articles/';\n\n// related papers section\n\nexport default ({ similarPapers, status }) => (\n  <section id='similar-papers'>\n    <h3>\n      <i className='fas fa-scroll heading_icon'></i>Most Similar Papers\n    </h3>\n    {status !== success && <Status {...{ status }} />}\n    {status === success &&\n      similarPapers.map(\n        (\n          { id, title, authors, year, journal, rank, distance, strength },\n          index\n        ) => (\n          <div key={index} className='card'>\n            <div\n              className='card_score'\n              title={'Distance score: ' + distance}\n              style={{ backgroundColor: rankColorB.mix(rankColorA, strength) }}\n            >\n              {rank}\n            </div>\n            <div className='card_details'>\n              <a href={paperLink + id} title={title}>\n                {title}\n              </a>\n              <div title={authors} className='truncate'>\n                {authors}\n              </div>\n              <div title={journal + ' · ' + year} className='truncate'>\n                {journal} · {year}\n              </div>\n            </div>\n          </div>\n        )\n      )}\n  </section>\n);\n","import React from 'react';\nimport { createPortal } from 'react-dom';\nimport { useState } from 'react';\nimport { useRef } from 'react';\nimport { usePopper } from 'react-popper';\n\nimport { startImage } from './map-section';\nimport { endImage } from './map-section';\nimport { range } from './map-section';\nimport { getPcNum } from './map-section';\nimport { getCloudUrl } from './map-section';\n\nimport './cloud-buttons.css';\n\n// tooltip open delay\nconst delay = 500;\n\n// cloud image button components\n\nexport default ({ selectedPc, setSelectedPc }) => (\n  <p className='center'>\n    {range(startImage, endImage).map((number) => (\n      <CloudButton key={number} {...{ number, selectedPc, setSelectedPc }} />\n    ))}\n  </p>\n);\n\n// cloud image button component\nconst CloudButton = ({ number, selectedPc, setSelectedPc }) => {\n  // component state\n  const [hover, setHover] = useState(false);\n  const [reference, setReference] = useState(null);\n  const [popper, setPopper] = useState(null);\n\n  // tooltip timer\n  const timeout = useRef();\n\n  // make tooltip\n  const { styles, attributes, update } = usePopper(reference, popper, {\n    placement: 'top',\n    modifiers: [\n      // https://github.com/popperjs/popper-core/issues/1138\n      { name: 'computeStyles', options: { adaptive: false } },\n      { name: 'offset', options: { offset: [0, 10] } },\n      { name: 'flip', options: { rootBoundary: 'document' } }\n    ]\n  });\n\n  // render\n  return (\n    <>\n      <button\n        ref={setReference}\n        className='cloud_button'\n        data-number={getPcNum(number)}\n        data-selected={selectedPc === number}\n        onClick={() =>\n          selectedPc === number ? setSelectedPc(null) : setSelectedPc(number)\n        }\n        onMouseEnter={() => {\n          window.clearTimeout(timeout.current);\n          timeout.current = window.setTimeout(() => setHover(true), delay);\n        }}\n        onMouseLeave={() => {\n          window.clearTimeout(timeout.current);\n          setHover(false);\n        }}\n      >\n        <img\n          src={getCloudUrl(number)}\n          title={'Select principal component ' + getPcNum(number)}\n          alt={'Select principal component ' + getPcNum(number)}\n          onLoad={update}\n        />\n      </button>\n      {hover &&\n        createPortal(\n          <img\n            ref={setPopper}\n            src={getCloudUrl(number)}\n            className='cloud_enlarged'\n            title={'Select principal component ' + getPcNum(number)}\n            alt={'Select principal component ' + getPcNum(number)}\n            onLoad={update}\n            style={styles.popper}\n            {...attributes.popper}\n          />,\n          document.body\n        )}\n    </>\n  );\n};\n","import React from 'react';\nimport { useState } from 'react';\nimport { useEffect } from 'react';\nimport { useRef } from 'react';\n\nimport { pcColorA } from './map-section';\nimport { pcColorB } from './map-section';\nimport { pcColorC } from './map-section';\nimport { countColorA } from './map-section';\nimport { countColorB } from './map-section';\nimport { getPcNum } from './map-section';\n\nimport './map.css';\n\n// size of map cells in svg units. match to bin width of plot data\nconst cellSize = 0.4 + 0.005;\n\n// map component\n\n// pubmed central map section\nexport default ({\n  cells,\n  selectedPc,\n  selectedCell,\n  setSelectedCell,\n  coordinates\n}) => {\n  // component state\n  const svg = useRef();\n  const [viewBox, setViewBox] = useState('');\n\n  if (!selectedPc) {\n    // if no selected pc, color cells by paper count\n    // normalize counts\n    const counts = cells.map((cell) => cell.count);\n    const minCount = Math.min(...counts);\n    const maxCount = Math.max(...counts);\n    for (const cell of cells)\n      cell.strength = (cell.count - minCount) / (maxCount - minCount);\n  } else {\n    // if pc selected, color cells by pc score\n    // normalize pc scores\n    for (const cell of cells) {\n      const pc = cell.pcs.find((pc) => pc.name === getPcNum(selectedPc));\n      cell.score = pc?.score || 0;\n    }\n    const absScore =\n      Math.max(...cells.map((cell) => Math.abs(cell.score))) || 1;\n    for (const cell of cells)\n      cell.strength = cell.score / absScore;\n  }\n\n  // set svg viewbox based on bbox of content in it, ie fit view\n  useEffect(() => {\n    if (!svg.current)\n      return;\n    const { x, y, width, height } = svg.current.getBBox();\n    setViewBox([x, y, width, height].join(' '));\n  }, [cells]);\n\n  // render\n  return (\n    <p>\n      <svg ref={svg} viewBox={viewBox || undefined} className='map'>\n        {\n          // put extra selected cell last, so it will always be on top\n          cells.concat(selectedCell || []).map((cell, number) => (\n            <rect\n              key={number}\n              className='cell'\n              x={cell.x - cellSize / 2}\n              y={cell.y - cellSize / 2}\n              width={cellSize}\n              height={cellSize}\n              data-selected={cell === selectedCell}\n              fill={\n                selectedPc ?\n                  pcColorB.mix(\n                    cell.strength > 0 ? pcColorA : pcColorC,\n                    Math.abs(cell.strength)\n                  ) :\n                  countColorB.mix(countColorA, cell.strength)\n              }\n              onClick={() =>\n                cell === selectedCell ?\n                  setSelectedCell(null) :\n                  setSelectedCell(cell)\n              }\n            />\n          ))\n        }\n        {coordinates.x && coordinates.y && (\n          <circle\n            className='marker'\n            cx={coordinates.x}\n            cy={coordinates.y}\n            r={cellSize / 2}\n          />\n        )}\n      </svg>\n    </p>\n  );\n};\n","import React from 'react';\n\nimport { pcColorA } from './map-section';\nimport { pcColorC } from './map-section';\nimport { countColorA } from './map-section';\nimport { countColorB } from './map-section';\nimport { getPcNum } from './map-section';\n\nimport './legend.css';\n\n// map legend component\n\nexport default ({ selectedPc, coordinates }) => (\n  <p className='legend'>\n    {selectedPc && (\n      <>\n        <span>\n          <span\n            className='legend_square'\n            style={{ backgroundColor: pcColorA }}\n          ></span>\n          pos pc\n          {getPcNum(selectedPc)}\n        </span>\n        <span>\n          <span\n            className='legend_square'\n            style={{ backgroundColor: pcColorC }}\n          ></span>\n          neg pc\n          {getPcNum(selectedPc)}\n        </span>\n      </>\n    )}\n    {!selectedPc && (\n      <>\n        <span>\n          <span\n            className='legend_square'\n            style={{ backgroundColor: countColorA }}\n          ></span>\n          many papers\n        </span>\n        <span>\n          <span\n            className='legend_square'\n            style={{ backgroundColor: countColorB }}\n          ></span>\n          few papers\n        </span>\n      </>\n    )}\n    {coordinates.x && coordinates.y && (\n      <>\n        <span>\n          <span\n            className='legend_circle'\n            style={{ backgroundColor: 'var(--red)' }}\n          ></span>\n          your preprint\n        </span>\n      </>\n    )}\n  </p>\n);\n","import React from 'react';\n\nimport { getPcNum } from './map-section';\n\nimport './cell-details.css';\n\n// details of selected cell component\n\nexport default ({ selectedCell, selectedPc, setSelectedPc }) => (\n  <div>\n    <h4>Papers</h4>\n    <p>{selectedCell.count.toLocaleString()}</p>\n    <h4>Top Journals</h4>\n    <p>\n      {selectedCell.journals.map(({ name, count }, number) => (\n        <span key={number} className='cell_detail_row'>\n          <span className='truncate'>{name}</span>\n          <span className='truncate'>{count.toLocaleString()} papers</span>\n        </span>\n      ))}\n    </p>\n    <h4>Top Principal Components</h4>\n    <p>\n      {selectedCell.pcs.slice(0, 5).map(({ name, score }, number) => (\n        <span key={number} className='cell_detail_row'>\n          <a\n            role='button'\n            title={'Select principal component ' + getPcNum(parseInt(name))}\n            onClick={() => setSelectedPc(parseInt(name))}\n          >\n            {name}\n            {parseInt(name) === selectedPc && <i className='fas fa-check'></i>}\n          </a>\n          <span>{score.toFixed(2)} score</span>\n        </span>\n      ))}\n    </p>\n  </div>\n);\n","import React from 'react';\nimport { useState } from 'react';\nimport { useEffect } from 'react';\n\nimport CloudButtons from './cloud-buttons';\nimport Map from './map';\nimport Legend from './legend';\nimport CellDetails from './cell-details';\n\nimport color from 'color';\n\n// map cell data\nconst mapData = './data/plot.json';\n\n// word cloud \"principal component\" (pc) images\nexport const cloudImages =\n  'https://raw.githubusercontent.com/greenelab/annorxiver/master/biorxiv/pca_association_experiment/output/word_pca_similarity/figures/pca_XX_cossim_word_cloud.png';\nexport const startImage = 1;\nexport const endImage = 50;\n\n// map count color;\nexport const countColorA = color('#606060');\nexport const countColorB = color('#e0e0e0');\n\n// map principal component gradient colors\nexport const pcColorA = color('#ff9800');\nexport const pcColorB = color('#e0e0e0');\nexport const pcColorC = color('#2196f3');\n\n// map section component\n\nexport default ({ coordinates }) => {\n  // component state\n  const [cells, setCells] = useState([]);\n  const [selectedPc, setSelectedPc] = useState(null);\n  const [selectedCell, setSelectedCell] = useState(null);\n\n  // on app start, load map cell data\n  useEffect(() => {\n    const getMapData = async () =>\n      setCells(await (await fetch(mapData)).json());\n    getMapData();\n  }, []);\n\n  // render\n  return (\n    <section id='map'>\n      <h3>\n        <i className='fas fa-map heading_icon'></i>Map of PubMed Central\n      </h3>\n      <CloudButtons {...{ selectedPc, setSelectedPc }} />\n      <Map\n        {...{ cells, selectedPc, selectedCell, setSelectedCell, coordinates }}\n      />\n      <Legend {...{ selectedPc, coordinates }} />\n      {selectedCell && (\n        <CellDetails {...{ selectedCell, selectedPc, setSelectedPc }} />\n      )}\n    </section>\n  );\n};\n\n// util func to generate range between ints\nexport const range = (start, end) =>\n  Array.from({ length: end - start + 1 }, (_, i) => start + i);\n\n// get principal component number padded with 0's\nexport const getPcNum = (number) => String(number).padStart(2, '0');\n\n// get url of word cloud image\nexport const getCloudUrl = (number) =>\n  cloudImages.replace('XX', getPcNum(number));\n","import React from 'react';\n\n// about section\n\nexport default () => (\n  <section id='help'>\n    <h3>\n      <i className='fas fa-question-circle heading_icon'></i>About this tool\n    </h3>\n    <p>\n      This tool uses a machine learning model trained on 1.7 million{' '}\n      <a href='https://www.ncbi.nlm.nih.gov/pmc/'>PubMed Central</a> documents\n      to recommend suitable journals based on the textual content of your{' '}\n      <a href='https://www.biorxiv.org/'>bioRxiv</a> preprint. This tool\n      provides a \"map\" of all documents within{' '}\n      <a href='https://www.ncbi.nlm.nih.gov/pmc/tools/openftlist/'>\n        {' '}\n        PubMed Central's Open Access Corpus{' '}\n      </a>\n      , and plots where your <a href='https://www.biorxiv.org/'>bioRxiv</a>{' '}\n      preprint falls on this map. Each square bin on the map represents a group\n      of papers that share similar textual content. Click on a square to view\n      more information about papers contained in a given bin.\n    </p>\n    <p>\n      This tool also contains a set of 50 <i> principal components</i> (PCs)\n      that were generated by performing Principal Component Analysis (PCA) on\n      the <a href='https://www.biorxiv.org/'>bioRxiv</a> corpus. Each PC\n      represents two high level concepts characterized by keywords of various\n      strengths. These keywords are illustrated within the word cloud thumbnails\n      above the map. Select a thumbnail to color the map by that specific PC.\n      Deeper orange cells will be papers that correlate more with the orange\n      keywords in the image, and vice versa for blue. For information on how\n      this tool works, see the{' '}\n      <a href='https://github.com/greenelab/annorxiver-journal-recommender#annorxiver-journal-recommender'>\n        readme on GitHub\n      </a>\n      .\n    </p>\n  </section>\n);\n","import React from 'react';\n\n// footer component\n\nexport default () => (\n  <footer>\n    <section>\n      <p>\n        A project of the <a href='https://greenelab.com/'>Greene Lab</a>\n        <br />\n        <a href='https://github.com/greenelab/annorxiver_journal_rec_app'>\n          <i className='fab fa-github icon_with_text'></i>\n          <span>View on GitHub</span>\n        </a>\n      </p>\n    </section>\n  </footer>\n);\n","import React from 'react';\nimport { useState } from 'react';\n\nimport Header from './header';\nimport Search from './search';\nimport PreprintInfo from './preprint-info';\nimport SimilarJournals from './similar-journals';\nimport SimilarPapers from './similar-papers';\nimport MapSection from './map-section';\nimport About from './about';\nimport Footer from './footer';\n\nimport './app.css';\n\nimport { empty } from './status';\n\n// main app component\n\nexport default () => {\n  // data status\n  const [status, setStatus] = useState(empty);\n\n  // main data\n  const [preprintTitle, setPreprintTitle] = useState('');\n  const [preprintUrl, setPreprintUrl] = useState('');\n  const [similarJournals, setSimilarJournals] = useState([]);\n  const [similarPapers, setSimilarPapers] = useState([]);\n  const [coordinates, setCoordinates] = useState({});\n\n  // render\n  return (\n    <>\n      <Header />\n      <main>\n        <Search\n          {...{\n            preprintTitle,\n            preprintUrl,\n            setPreprintTitle,\n            setPreprintUrl,\n            status,\n            setStatus,\n            setSimilarJournals,\n            setSimilarPapers,\n            setCoordinates\n          }}\n        />\n        <hr />\n        {status !== empty && (\n          <>\n            <PreprintInfo {...{ preprintTitle, preprintUrl, status }} />\n            <hr />\n            <SimilarPapers {...{ similarPapers, status }} />\n            <hr />\n            <SimilarJournals {...{ similarJournals, status }} />\n            <hr />\n          </>\n        )}\n        <MapSection {...{ coordinates }} />\n        <hr />\n        <About />\n      </main>\n      <Footer />\n    </>\n  );\n};\n","import React from 'react';\nimport { render } from 'react-dom';\nimport App from './app';\n\n// render whole app\nrender(<App />, document.getElementById('root'));\n"],"sourceRoot":""}