{"version":3,"sources":["logo.svg","header.js","error.js","backend.js","tooltip.js","status.js","search.js","preprint-info.js","similar-journals.js","similar-papers.js","cloud-buttons.js","math.js","hooks.js","map.js","legend.js","cell-details.js","map-sections.js","about.js","footer.js","app.js","index.js"],"names":["_style","_path","_path2","_path3","_path4","_g","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgLogo","_ref","svgRef","title","titleId","props","xmlns","viewBox","id","ref","fill","d","stroke","strokeWidth","strokeLinecap","strokeLinejoin","transform","ForwardRef","Header","className","CustomError","args","name","Error","getNeighbors","a","doi","text","url","doiServer","options","method","body","fetch","response","ok","json","neighbors","message","preprint","paper_info","xml_found","similarJournals","journal_neighbors","similarPapers","paper_neighbors","coordinates","removePMC","entry","pmcid","document","replace","forEach","getNeighborsMetadata","array","ids","map","filter","join","metadata","result","incorp","cleanPreprint","authors","split","journal","publisher","year","accepted_date","prelim","cleanNeighbors","distances","distance","max","Math","min","diff","sort","b","index","author","fulljournalname","pubdate","strength","rank","Tooltip","forwardRef","content","children","rest","useState","setTarget","popper","setPopper","arrow","setArrow","isOpen","setOpen","timer","useRef","open","window","clearTimeout","current","setTimeout","close","placement","modifiers","adaptive","offset","element","padding","usePopper","styles","attributes","update","useEffect","onMouseEnter","onMouseLeave","onFocus","onBlur","el","Children","isValidElement","cloneElement","onLoad","createPortal","style","empty","loading","success","Status","status","cleanDoi","trim","getUrl","URLSearchParams","location","search","substring","get","setUrl","oldUrl","href","newUrl","history","pushState","Search","setStatus","setPreprint","setSimilarJournals","setSimilarPapers","setCoordinates","setDoi","drag","setDrag","onChange","useCallback","event","value","updateUrl","console","log","Sentry","tags","onNav","addEventListener","removeEventListener","onDrop","preventDefault","stopPropagation","file","dataTransfer","files","type","onSubmit","onDragEnter","onDragLeave","onDragOver","data-drag","placeholder","disabled","select","PreprintInfo","tabIndex","rankColorA","color","rankColorB","SimilarJournals","toFixed","backgroundColor","mix","SimilarPapers","CloudButtons","selectedPc","setSelectedPc","range","startImage","endImage","number","CloudButton","src","getCloudUrl","alt","getPcNum","minHeight","data-number","data-selected","onClick","limit","sq","x","pow","rt","sqrt","boost","knee","r","useViewBox","rerender","svg","undefined","setViewBox","getBBox","y","width","height","n","cellSize","Map","cells","selectedCell","setSelectedCell","cell","pc","pcs","find","score","absScore","abs","counts","count","minCount","maxCount","concat","pcColorB","pcColorA","pcColorC","countColorB","countColorA","cx","cy","Legend","CellDetails","lemmas","scores","lemma","minScore","maxScore","size","right","bottom","toLocaleString","journals","left","textAnchor","dominantBaseline","fontSize","substr","MapSections","setCells","getMapData","start","end","Array","from","_","String","padStart","About","Footer","App","dsn","environment","process","render","getElementById"],"mappings":"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","file":"static/js/main.2201f7a0.chunk.js","sourcesContent":["var _style, _path, _path2, _path3, _path4, _g;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgLogo(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 100 100\",\n    id: \"logo\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _style || (_style = /*#__PURE__*/React.createElement(\"style\", null, \"\\n    #logo:hover #star,\\n    #logo[data-spin] #star {\\n      animation: star_rotate 2s ease forwards infinite;\\n    }\\n    @keyframes star_rotate {\\n      from {\\n        transform: rotate(0);\\n      }\\n      to {\\n        transform: rotate(360deg);\\n      }\\n    }\\n  \")), _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    id: \"book_filling\",\n    fill: \"#ffe0b2\",\n    d: \"       M 10 50       L 50 70       L 90 50       L 90 35       L 50 55       L 10 35       A 10 10 0 0 0 10 50       M 10 65       L 50 85       L 90 65       L 90 50       L 50 70       L 10 50       A 10 10 0 0 0 10 65     \"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    id: \"book_top_cover\",\n    fill: \"#000000\",\n    stroke: \"#000000\",\n    strokeWidth: 5,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"       M 50 15       L 90 35       L 50 55       L 10 35       z     \"\n  })), _path3 || (_path3 = /*#__PURE__*/React.createElement(\"path\", {\n    id: \"book_outlines\",\n    fill: \"none\",\n    stroke: \"#000000\",\n    strokeWidth: 5,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"       M 10 50       L 30 60       M 47.5 68.75       L 50 70       L 90 50       M 10 65       L 50 85       L 90 65       M 10 35       A 10 10 0 0 0 10 50       A 10 10 0 0 0 10 65     \"\n  })), _path4 || (_path4 = /*#__PURE__*/React.createElement(\"path\", {\n    id: \"bookmark\",\n    fill: \"#000000\",\n    stroke: \"#000000\",\n    strokeWidth: 2,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"       M 35 55       L 35 71.25       L 38.75 69.25       L 42.5 74.75       L 42.5 58.75       z     \"\n  })), _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    transform: \"translate(50,34) rotate(26.565) skewX(-26.565) scale(0.10)\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    id: \"star\",\n    fill: \"#ffe0b2\",\n    stroke: \"#ffe0b2\",\n    strokeWidth: 20,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"         M 0.000 -100.000         L 29.389 -40.451         L 95.106 -30.902         L 47.553 15.451         L 58.779 80.902         L 0.000 50.000         L -58.779 80.902         L -47.553 15.451         L -95.106 -30.902         L -29.389 -40.451         z       \"\n  }))));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgLogo);\nexport default __webpack_public_path__ + \"static/media/logo.af21f6ef.svg\";\nexport { ForwardRef as ReactComponent };","import { ReactComponent as Logo } from \"./logo.svg\";\n\nimport \"./header.css\";\n\n// header component\n\nconst Header = () => (\n  <header>\n    <section>\n      <h1>Preprint</h1>\n      <h2>Similarity Search</h2>\n      <Logo className=\"logo\" />\n    </section>\n  </header>\n);\n\nexport default Header;\n","export class CustomError extends Error {\n  constructor(...args) {\n    super(...args);\n    this.name = \"CustomError\";\n  }\n}\n","import { CustomError } from \"./error\";\n\nconst doiServer = \"https://api-pss.greenelab.com/doi\";\nconst textServer = \"https://api-pss.greenelab.com/text\";\n\n// get neighbor and coordinate data from backend\nexport const getNeighbors = async ({ doi, text }) => {\n  // look up data from backend\n  const url = text ? textServer : doiServer + \"/\" + doi;\n  const options = { method: text ? \"POST\" : \"GET\", body: text || null };\n  const response = await fetch(url, options);\n  if (!response.ok) throw new Error();\n  const neighbors = await response.json();\n\n  // if error returned, throw error with message\n  if (neighbors.message) throw new CustomError(neighbors.message);\n\n  // extract results\n  const preprint = neighbors.paper_info || {};\n  preprint.xml_found = neighbors.xml_found;\n  const similarJournals = neighbors.journal_neighbors || [];\n  const similarPapers = neighbors.paper_neighbors || [];\n  const coordinates = neighbors.coordinates || {};\n\n  // remove \"PMC\" prefix from PMCID's\n  const removePMC = (entry) =>\n    (entry.pmcid = (entry.pmcid || entry.document || \"\").replace(\"PMC\", \"\"));\n  similarJournals.forEach(removePMC);\n  similarPapers.forEach(removePMC);\n\n  // return results\n  return { preprint, similarJournals, similarPapers, coordinates };\n};\n\nconst metaLookup =\n  \"https://eutils.ncbi.nlm.nih.gov/entrez/eutils/esummary.fcgi?db=pmc&email=greenescientist@gmail.com&retmode=json&id=\";\n\n// look up journal or paper metadata from nih.gov\nexport const getNeighborsMetadata = async (array) => {\n  // get pmcid's for looking up meta data\n  const ids = array.map((entry) => entry.pmcid).filter((entry) => entry);\n\n  // look up metadata\n  const metadata = (await (await fetch(metaLookup + ids.join(\",\"))).json())\n    .result;\n\n  // incorp meta data into journal/paper objects\n  const incorp = (entry) => ({ ...entry, ...(metadata[entry.pmcid] || {}) });\n  array = array.map(incorp);\n\n  // return results\n  return array;\n};\n\n// clean preprint data to handle more conveniently\nexport const cleanPreprint = (preprint = {}) => ({\n  // doi\n  id: preprint.doi || null,\n  // name of paper\n  title: preprint.title || \"\",\n  // authors of paper\n  authors: (preprint.authors || \"\").split(\"; \").join(\", \"),\n  // name of journal\n  journal: preprint.publisher || \"\",\n  // year of publication\n  year: (preprint.accepted_date || \"\").split(\"-\")[0] || \"\",\n  // is preliminary (PDF) result or XML/HTML result\n  prelim: preprint.xml_found ? false : true,\n  // is a direct plain text upload\n  text: preprint.title ? false : true\n});\n\n// clean journal or paper neighbor data to handle more conveniently\nexport const cleanNeighbors = (array) => {\n  // get range of distances\n  const distances = array.map((entry) => entry.distance);\n  const max = Math.max(...distances);\n  const min = Math.min(...distances);\n  const diff = max - min;\n\n  // sort by smaller distances first\n  array.sort((a, b) => a.distance - b.distance);\n\n  // set new values of array. keep only needed props and rename sensibly\n  array = array.map((entry, index) => ({\n    // pubmed id\n    id: entry.pmcid || null,\n    // name of paper\n    title: entry.title || \"\",\n    // authors of paper\n    authors: (entry.authors || [])\n      .map((author) => author.name || \"\")\n      .filter((name) => name)\n      .join(\", \"),\n    // name of journal\n    journal: (entry.fulljournalname || entry.journal || \"\")\n      .split(\"_\")\n      .join(\" \"),\n    // year of publication\n    year: (entry.pubdate || \"\").split(\" \")[0] || \"\",\n    // distance score\n    distance: entry.distance,\n    // normalized distance score\n    strength: (entry.distance - min) / diff,\n    // whole number rank\n    rank: index + 1,\n  }));\n\n  return array;\n};\n","import { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport { useRef } from \"react\";\nimport { isValidElement } from \"react\";\nimport { cloneElement } from \"react\";\nimport { forwardRef } from \"react\";\nimport { Children } from \"react\";\nimport { createPortal } from \"react-dom\";\nimport { usePopper } from \"react-popper\";\n\nimport \"./tooltip.css\";\n\nconst placement = \"top\";\nconst delay = 100;\n\nconst Tooltip = forwardRef(({ content, children, ...rest }, ref) => {\n  // popper elements\n  const [target, setTarget] = useState(null);\n  const [popper, setPopper] = useState(null);\n  const [arrow, setArrow] = useState(null);\n\n  // open state\n  const [isOpen, setOpen] = useState(false);\n\n  // open delay timer\n  const timer = useRef();\n\n  // open tooltip\n  const open = () => {\n    // don't open if no content\n    if (!content) return;\n    window.clearTimeout(timer?.current);\n    timer.current = window.setTimeout(() => setOpen(true), delay);\n  };\n\n  // close tooltip\n  const close = () => {\n    window.clearTimeout(timer?.current);\n    setOpen(false);\n  };\n\n  // popper.js options\n  let options = {\n    placement,\n    modifiers: [\n      // https://github.com/popperjs/popper-core/issues/1138\n      { name: \"computeStyles\", options: { adaptive: false } },\n      { name: \"offset\", options: { offset: [0, 10] } },\n      { name: \"arrow\", options: { element: arrow, padding: 10 } },\n    ],\n  };\n  const { styles, attributes, update } = usePopper(target, popper, options);\n\n  useEffect(() => {\n    if (update) update();\n  }, [content, update]);\n\n  // attach props to child\n  if (children) {\n    const props = {\n      ...rest,\n      onMouseEnter: open,\n      onMouseLeave: close,\n      onFocus: open,\n      onBlur: close,\n      ref: (el) => {\n        setTarget(el);\n        return ref;\n      },\n    };\n    children = Children.map(children, (element, index) => {\n      if (index > 0) return element;\n      if (isValidElement(element)) return cloneElement(element, props);\n      return element;\n    });\n  }\n\n  // attach props to content\n  if (isValidElement(content)) {\n    const props = {\n      onLoad: update,\n    };\n    content = cloneElement(content, props);\n  }\n\n  return (\n    <>\n      {children}\n      {isOpen &&\n        createPortal(\n          <div\n            ref={setPopper}\n            className=\"tooltip\"\n            style={{ ...styles.popper }}\n            {...attributes.popper}\n          >\n            {typeof content === \"string\" && (\n              <div className=\"tooltip_content\">{content}</div>\n            )}\n            {typeof content !== \"string\" && content}\n            <div\n              ref={setArrow}\n              className=\"tooltip_arrow\"\n              style={styles.arrow}\n            />\n          </div>,\n          document.body\n        )}\n    </>\n  );\n});\n\nexport default Tooltip;\n","import \"./status.css\";\n\n// status key codes\nexport const empty = \"EMPTY\";\nexport const loading = \"LOADING\";\nexport const success = \"SUCCESS\";\n\n// loading/error status component\n\nconst Status = ({ status }) => {\n  if (status === empty) {\n    return (\n      <section className=\"center gray\">\n        <i className=\"fas fa-exclamation\"></i>\n        <span>Search for a doi</span>\n      </section>\n    );\n  }\n\n  if (status === loading) {\n    return (\n      <section className=\"center gray\">\n        <i className=\"fas fa-spinner fa-spin\"></i>\n        <span>Loading...</span>\n      </section>\n    );\n  }\n\n  if (status === success) return null;\n\n  return (\n    <section className=\"center red\">\n      <i className=\"far fa-times-circle\"></i>\n      <span>{status || \"Couldn't get results\"}</span>\n    </section>\n  );\n};\n\nexport default Status;\n","import { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport { useCallback } from \"react\";\nimport * as Sentry from \"@sentry/react\";\n\nimport { getNeighbors } from \"./backend\";\nimport { getNeighborsMetadata } from \"./backend\";\nimport { cleanPreprint } from \"./backend\";\nimport { cleanNeighbors } from \"./backend\";\n\nimport Tooltip from \"./tooltip\";\n\nimport { loading } from \"./status\";\nimport { success } from \"./status\";\n\nimport \"./search.css\";\n\nconst defaultSearch = \"e.g. 10.1101/833400\";\n\n// search box component\n\nconst Search = ({\n  status,\n  setStatus,\n  setPreprint,\n  setSimilarJournals,\n  setSimilarPapers,\n  setCoordinates,\n}) => {\n  const [doi, setDoi] = useState(getUrl() || defaultSearch); // doi query\n  const [drag, setDrag] = useState(false); // text upload drag\n\n  // on type\n  const onChange = useCallback(\n    (event) => setDoi(event.target.value.trim()),\n    []\n  );\n\n  // search\n  const search = useCallback(\n    async ({ doi, text }, updateUrl = true) => {\n      // clean doi and update search box\n      if (doi) {\n        doi = cleanDoi(doi);\n        setDoi(doi);\n      }\n\n      // exit if doi query empty\n      if (doi === \"\") return;\n\n      // update url based on search\n      if (updateUrl) setUrl(doi);\n\n      // set loading status\n      setStatus(loading);\n\n      // get preprint info and neighbor data\n      try {\n        let { preprint, similarJournals, similarPapers, coordinates } =\n          await getNeighbors({ doi, text });\n        preprint = cleanPreprint(preprint);\n        similarJournals = await getNeighborsMetadata(similarJournals);\n        similarPapers = await getNeighborsMetadata(similarPapers);\n        similarJournals = cleanNeighbors(similarJournals);\n        similarPapers = cleanNeighbors(similarPapers);\n        setStatus(success);\n        setPreprint(preprint);\n        setSimilarJournals(similarJournals);\n        setSimilarPapers(similarPapers);\n        setCoordinates(coordinates);\n      } catch (error) {\n        console.log(error);\n        if (error.name !== \"CustomError\")\n          error.message = \"Couldn't get results\";\n        setStatus(error.message);\n        setPreprint({});\n        setSimilarJournals([]);\n        setSimilarPapers([]);\n        setCoordinates({});\n        Sentry.captureException(error, { tags: { doi } });\n      }\n    },\n    [\n      setStatus,\n      setPreprint,\n      setSimilarJournals,\n      setSimilarPapers,\n      setCoordinates,\n    ]\n  );\n\n  // when user navigates back/forward\n  const onNav = useCallback(() => {\n    // get new doi\n    const doi = getUrl();\n    if (!doi) return;\n    // put doi in search box\n    setDoi(doi);\n    // run search, without updating url since browser does this automatically\n    search({ doi }, false);\n  }, [search]);\n\n  // search for doi in url if any on first load\n  useEffect(() => {\n    if (getUrl()) search(getUrl());\n  }, [search]);\n\n  // listen for user back/forward nav\n  useEffect(() => {\n    window.addEventListener(\"popstate\", onNav);\n    return () => window.removeEventListener(\"popstate\", onNav);\n  }, [onNav, search]);\n\n  // on button drag file over, set drag flag on\n  const onDragEnter = () => setDrag(true);\n\n  // on button drag file off, set drag flag off\n  const onDragLeave = () => setDrag(false);\n\n  // on button drag file\n  const onDragOver = (event) => event.preventDefault();\n\n  // on button file drop\n  const onDrop = async (event) => {\n    // prevent navigating\n    event.preventDefault();\n    event.stopPropagation();\n    setDrag(false);\n\n    // get text file contents\n    const file = event.dataTransfer.files[0];\n    if (file.type !== \"text/plain\") return;\n    const text = (await file.text()) || \"\";\n\n    // run search\n    search({ text });\n  };\n  // render\n  return (\n    <section id=\"search\">\n      <p className=\"center\">\n        <i>\n          Enter the <a href=\"https://www.biorxiv.org/\">bioRxiv</a> or{\" \"}\n          <a href=\"https://www.medrxiv.org/\">medRxiv</a> DOI of your preprint\n        </i>\n      </p>\n      <form\n        className=\"search\"\n        onSubmit={(event) => {\n          // prevent page from navigating away/refreshing on submit\n          event.preventDefault();\n          // run search\n          search({ doi });\n        }}\n        onDragEnter={onDragEnter}\n        onDragLeave={onDragLeave}\n        onDragOver={onDragOver}\n        onDrop={onDrop}\n        data-drag={drag}\n      >\n        <input\n          className=\"search_input\"\n          value={doi}\n          onChange={onChange}\n          type=\"text\"\n          placeholder=\"e.g. 10.1101/833400\"\n          disabled={status === loading}\n          onFocus={({ target }) => target.select()}\n        />\n        <Tooltip content=\"Search for related papers and journals\">\n          <button\n            className=\"search_button\"\n            type=\"submit\"\n            disabled={status === loading}\n          >\n            <i className=\"fas fa-search\"></i>\n          </button>\n        </Tooltip>\n      </form>\n    </section>\n  );\n};\n\n// clean what user types into search box for convenience\n// remove everything before first number, eg \"doi:\"\n// remove version at end, eg \"v4\"\nconst cleanDoi = (doi) => doi.replace(/^\\D*/g, \"\").replace(/v\\d+$/g, \"\").trim();\n\n// get doi from url\nconst getUrl = () =>\n  new URLSearchParams(window.location.search.substring(1)).get(\"doi\");\n\n// put doi in url as param\nconst setUrl = (doi) => {\n  const oldUrl = window.location.href;\n  const base = window.location.href.split(/[?#]/)[0];\n  const newUrl = base + (doi ? \"?doi=\" + doi : \"\");\n  // compare old to new url to prevent duplicate history entries when refreshing\n  if (oldUrl !== newUrl) window.history.pushState(null, null, newUrl);\n};\n\nexport default Search;\n","import Tooltip from \"./tooltip\";\n\nconst link = \"https://doi.org/\";\n\n// preprint info section\n\nconst PreprintInfo = ({\n  preprint: { id, title, authors, journal, year, prelim, text },\n}) => (\n  <section id=\"your-preprint\">\n    <h3>\n      <i className=\"fas fa-feather-alt\"></i>\n      <span>Your Preprint</span>\n    </h3>\n    {!text && (\n      <p>\n        <a href={link + id} className=\"card_detail\">\n          {title}\n        </a>\n        <span className=\"card_detail truncate\" tabIndex=\"0\">\n          {authors}\n        </span>\n        <span className=\"card_detail truncate\" tabIndex=\"0\">\n          {journal} · {year}\n        </span>\n      </p>\n    )}\n    {!text && prelim && (\n      <Tooltip content=\"These results were generated using the PDF version of the preprint, which is less reliable and can reduce the accuracy of predictions. Check back later when the full-text version is available.\">\n        <p className=\"center gray\">\n          <i className=\"fas fa-info-circle\"></i>\n          <span>Preliminary results</span>\n        </p>\n      </Tooltip>\n    )}\n    {text && (\n      <Tooltip content=\"You uploaded a plain text version of your preprint\">\n        <p className=\"center gray\">\n          <i className=\"fas fa-info-circle\"></i>\n          <span>Plain text</span>\n        </p>\n      </Tooltip>\n    )}\n  </section>\n);\n\nexport default PreprintInfo;\n","import color from \"color\";\n\nimport Tooltip from \"./tooltip\";\n\nimport \"./card.css\";\n\nconst rankColorA = color(\"#ff980020\");\nconst rankColorB = color(\"#ff9800\");\n\nconst link = \"https://www.google.com/search?q=\";\n\n// similar journals section\n\nconst SimilarJournals = ({ similarJournals }) => (\n  <section id=\"similar-journals\">\n    <Tooltip content=\"The closest journals within our generated paper embedding space\">\n      <h3>\n        <i className=\"fas fa-bookmark\"></i>\n        <span>Most Similar Journals</span>\n      </h3>\n    </Tooltip>\n    {similarJournals.map(({ journal, rank, distance, strength }, index) => (\n      <div key={index} className=\"card\">\n        <Tooltip content={\"Distance score: \" + distance.toFixed(2)}>\n          <div\n            className=\"card_score\"\n            style={{ backgroundColor: rankColorB.mix(rankColorA, strength) }}\n          >\n            {rank}\n          </div>\n        </Tooltip>\n        <div className=\"card_details\">\n          <a href={link + journal} className=\"card_detail\">\n            {journal}\n          </a>\n        </div>\n      </div>\n    ))}\n  </section>\n);\n\nexport default SimilarJournals;\n","import color from \"color\";\n\nimport Tooltip from \"./tooltip\";\n\nimport \"./card.css\";\n\nconst rankColorA = color(\"#ff980020\");\nconst rankColorB = color(\"#ff9800\");\n\nconst link = \"https://www.ncbi.nlm.nih.gov/pmc/articles/\";\n\n// related papers section\n\nconst SimilarPapers = ({ similarPapers }) => (\n  <section id=\"similar-papers\">\n    <Tooltip content=\"The closest paper within our generated paper embedding space\">\n      <h3>\n        <i className=\"fas fa-scroll\"></i>\n        <span>Most Similar Papers</span>\n      </h3>\n    </Tooltip>\n    {similarPapers.map(\n      (\n        { id, title, authors, year, journal, rank, distance, strength },\n        index\n      ) => (\n        <div key={index} className=\"card\">\n          <Tooltip content={\"Distance score: \" + distance.toFixed(2)}>\n            <div\n              className=\"card_score\"\n              style={{ backgroundColor: rankColorB.mix(rankColorA, strength) }}\n            >\n              {rank}\n            </div>\n          </Tooltip>\n          <div className=\"card_details\">\n            <a href={link + id} className=\"card_detail\">\n              {title}\n            </a>\n            <div className=\"card_detail truncate\" tabIndex=\"0\">\n              {authors}\n            </div>\n            <div className=\"card_detail truncate\" tabIndex=\"0\">\n              {journal} · {year}\n            </div>\n          </div>\n        </div>\n      )\n    )}\n  </section>\n);\n\nexport default SimilarPapers;\n","import { startImage } from \"./map-sections\";\nimport { endImage } from \"./map-sections\";\nimport { range } from \"./map-sections\";\nimport { getPcNum } from \"./map-sections\";\nimport { getCloudUrl } from \"./map-sections\";\nimport Tooltip from \"./tooltip\";\n\nimport \"./cloud-buttons.css\";\n\n// cloud image button components\n\nconst CloudButtons = ({ selectedPc, setSelectedPc }) => (\n  <p className=\"center\">\n    {range(startImage, endImage).map((number) => (\n      <CloudButton key={number} {...{ number, selectedPc, setSelectedPc }} />\n    ))}\n  </p>\n);\n\nexport default CloudButtons;\n\n// cloud image button component\nconst CloudButton = ({ number, selectedPc, setSelectedPc }) => (\n  <Tooltip\n    content={\n      <img\n        src={getCloudUrl(number)}\n        className=\"cloud_enlarged\"\n        alt={\"Principal component \" + getPcNum(number)}\n        // put min estimated height to avoid flickering\n        style={{ minHeight: \"300px\" }}\n      />\n    }\n  >\n    <button\n      className=\"cloud_button\"\n      data-number={getPcNum(number)}\n      data-selected={selectedPc === number}\n      title={\n        (selectedPc === number ? \"Deselect\" : \"Select\") +\n        \" this principal component\"\n      }\n      onClick={() =>\n        selectedPc === number ? setSelectedPc(null) : setSelectedPc(number)\n      }\n    >\n      <img\n        src={getCloudUrl(number)}\n        alt={\"Principal component \" + getPcNum(number)}\n      />\n    </button>\n  </Tooltip>\n);\n","// limit value between min and max values\nconst limit = (value, min, max) => Math.max(Math.min(value, max), min);\n\n// shorthands for math functions\nconst sq = (x) => Math.pow(x, 2);\nconst rt = (x) => Math.sqrt(x);\n\n// boost a normalized (0 to 1) value in non-linear, \"circular\" way\n// see comments below. middle values will be boosted more than extreme values.\nexport const boost = (x, knee = 0) => {\n  // limit inputs\n  x = limit(x, 0, 1);\n  knee = limit(knee, 0.00001, 1);\n\n  // find formula for center (x,y) of circle given 2 points and radius:\n  // https://stackoverflow.com/questions/36211171/finding-center-of-a-circle-given-two-points-and-radius\n\n  // set (x1,y1) and (x2,y2) to (0,0) and (1,1):\n  // (x-0.5-0.5sqrt(2r^2-1))^2/r^2 + (y-0.5+0.5sqrt(2r^2-1))^2/r^2 = 1\n\n  // graph the equation on desmos.com to understand what this boost func does:\n  // \\frac{\\left(x-\\ 0.5-0.5\\sqrt{2r^{2}-1}\\right)^{2}}{r^{2}}+\\frac{\\left(y-0.5+0.5\\sqrt{2r^{2}-1}\\right)^{2}}{r^{2}}=1\\ \\left\\{0<x<1\\right\\}\\ \\left\\{0<y<1\\right\\}\n\n  // knee will determine radius:\n  // 0% knee = infinite radius = straight line from (0,0) to (1,1)\n  // 100% knee = radius of 1 = quarter circle from (0,0) to (1,1)\n  const r = 1 / knee;\n\n  // solve previous formula for x with WolframAlpha and simplify\n  const a = rt(2 * sq(r) - 1);\n  return (1 + rt(2) * rt(2 * x * a + sq(r) - a - 2 * sq(x) + 2 * x) - a) / 2;\n};\n","import { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport { useRef } from \"react\";\n\n// get fitted view box of svg\nexport const useViewBox = (rerender) => {\n  const svg = useRef();\n  const [viewBox, setViewBox] = useState(undefined);\n\n  useEffect(() => {\n    // if svg not mounted yet, exit\n    if (!svg.current) return;\n    // get bbox of content in svg\n    const { x, y, width, height } = svg.current.getBBox();\n    // set view box to bbox, essentially fitting view to content\n    setViewBox([x, y, width, height].map((n) => n.toFixed(2)).join(\" \"));\n  }, [rerender]);\n\n  return [svg, viewBox];\n};\n","import { pcColorA } from \"./map-sections\";\nimport { pcColorB } from \"./map-sections\";\nimport { pcColorC } from \"./map-sections\";\nimport { countColorA } from \"./map-sections\";\nimport { countColorB } from \"./map-sections\";\nimport { getPcNum } from \"./map-sections\";\nimport { boost } from \"./math\";\nimport { useViewBox } from \"./hooks\";\n\nimport \"./map.css\";\n\n// size of map cells in svg units. match to bin width of plot data\nlet cellSize = 0.85;\n// increase by small % to reduce anti-alias gaps between cells\ncellSize *= 1.05;\n\n// map component\n\n// pubmed central map section\nconst Map = ({\n  cells,\n  selectedPc,\n  selectedCell,\n  setSelectedCell,\n  coordinates,\n}) => {\n  // component state\n  const [svg, viewBox] = useViewBox(cells);\n\n  if (!selectedPc) {\n    // if no selected pc, color cells by paper count\n    // normalize counts\n    const counts = cells.map((cell) => cell.count);\n    const minCount = Math.min(...counts);\n    const maxCount = Math.max(...counts);\n    for (const cell of cells) {\n      cell.strength = (cell.count - minCount) / (maxCount - minCount) || 0;\n      cell.strength = boost(cell.strength, 1);\n    }\n  } else {\n    // if pc selected, color cells by pc score\n    // normalize pc scores\n    for (const cell of cells) {\n      const pc = cell.pcs.find((pc) => pc.name === getPcNum(selectedPc));\n      cell.score = pc?.score || 0;\n    }\n    const absScore =\n      Math.max(...cells.map((cell) => Math.abs(cell.score))) || 1;\n    for (const cell of cells) cell.strength = cell.score / absScore || 0;\n  }\n\n  // render\n  return (\n    <p>\n      <svg ref={svg} viewBox={viewBox} className=\"map\">\n        {\n          // put extra selected cell last, so it will always be on top\n          cells.concat(selectedCell || []).map((cell, number) => (\n            <rect\n              key={number}\n              className=\"cell\"\n              x={cell.x}\n              y={cell.y}\n              width={cellSize}\n              height={cellSize}\n              data-selected={cell === selectedCell}\n              fill={\n                selectedPc\n                  ? pcColorB.mix(\n                      cell.strength > 0 ? pcColorA : pcColorC,\n                      Math.abs(cell.strength)\n                    )\n                  : countColorB.mix(countColorA, cell.strength)\n              }\n              strokeWidth={cellSize / 4}\n              onClick={() =>\n                cell === selectedCell\n                  ? setSelectedCell(null)\n                  : setSelectedCell(cell)\n              }\n            />\n          ))\n        }\n        {typeof coordinates.x === \"number\" &&\n          typeof coordinates.y === \"number\" && (\n            <circle\n              className=\"marker\"\n              strokeWidth={cellSize / 4}\n              cx={coordinates.x}\n              cy={coordinates.y}\n              r={cellSize / 2}\n            />\n          )}\n      </svg>\n    </p>\n  );\n};\n\nexport default Map;\n","import { pcColorA } from \"./map-sections\";\nimport { pcColorC } from \"./map-sections\";\nimport { countColorA } from \"./map-sections\";\nimport { countColorB } from \"./map-sections\";\nimport { getPcNum } from \"./map-sections\";\n\nimport \"./legend.css\";\n\n// map legend component\n\nconst Legend = ({ selectedPc, coordinates }) => (\n  <p className=\"legend\">\n    {selectedPc && (\n      <>\n        <span>\n          <span\n            className=\"legend_square\"\n            style={{ backgroundColor: pcColorA }}\n          ></span>\n          pos pc\n          {getPcNum(selectedPc)}\n        </span>\n        <span>\n          <span\n            className=\"legend_square\"\n            style={{ backgroundColor: pcColorC }}\n          ></span>\n          neg pc\n          {getPcNum(selectedPc)}\n        </span>\n      </>\n    )}\n    {!selectedPc && (\n      <>\n        <span>\n          <span\n            className=\"legend_square\"\n            style={{ backgroundColor: countColorA }}\n          ></span>\n          many papers\n        </span>\n        <span>\n          <span\n            className=\"legend_square\"\n            style={{ backgroundColor: countColorB }}\n          ></span>\n          few papers\n        </span>\n      </>\n    )}\n    {coordinates.x && coordinates.y && (\n      <>\n        <span>\n          <span\n            className=\"legend_circle\"\n            style={{ backgroundColor: \"var(--red)\" }}\n          ></span>\n          your preprint\n        </span>\n      </>\n    )}\n  </p>\n);\n\nexport default Legend;\n","import { Fragment } from \"react\";\n\nimport Tooltip from \"./tooltip\";\nimport { useViewBox } from \"./hooks\";\n\nimport \"./cell-details.css\";\n\n// lemma plot settings\nconst maxChars = 20;\n\n// details of selected cell component\n\nconst CellDetails = ({ selectedCell }) => {\n  // get lemmas from selected cell\n  const lemmas = selectedCell.lemmas || [];\n\n  // component state\n  const [svg, viewBox] = useViewBox(lemmas);\n\n  // normalize lemma scores\n  const scores = lemmas.map((lemma) => lemma.score);\n  const minScore = Math.min(...scores);\n  const maxScore = Math.max(...scores);\n  for (const lemma of lemmas)\n    lemma.strength = (lemma.score - minScore) / (maxScore - minScore) || 0;\n\n  // height of rows and font size of text in svg units (and pixels, because\n  // width of svg is matched to view box which is fit to contents)\n  const size = 15;\n\n  // width of svg, based on view box\n  const width = (viewBox || \"\").split(\" \")[2] || 0;\n  // plot area boundaries\n  const left = 0;\n  const top = 0;\n  const right = lemmas.length * size + size;\n  const bottom = lemmas.length * size + size;\n  // min width of bars\n  const minWidth = size / 2;\n\n  return (\n    <>\n      <h4>Papers</h4>\n      <p>{selectedCell.count.toLocaleString()}</p>\n      <h4>Top Journals</h4>\n      <p>\n        {selectedCell.journals.map(({ name, count }, number) => (\n          <span key={number} className=\"cell_detail_row\">\n            <span className=\"truncate\">{name}</span>\n            <span className=\"truncate\">{count.toLocaleString()} papers</span>\n          </span>\n        ))}\n      </p>\n      <h4>Top Lemmas</h4>\n      <p>\n        <svg\n          ref={svg}\n          viewBox={viewBox}\n          className=\"chart\"\n          style={{ width: width + \"px\" }}\n        >\n          {lemmas.map((lemma, index) => {\n            const width = Math.max(lemma.strength * (right - left), minWidth);\n            const y = top + (index + 1) * size;\n            return (\n              <Fragment key={index}>\n                <Tooltip content={lemma.name}>\n                  <text\n                    x={left - size * 0.75}\n                    y={y}\n                    textAnchor=\"end\"\n                    dominantBaseline=\"middle\"\n                    fontSize={size}\n                  >\n                    {lemma.name.length > maxChars\n                      ? lemma.name.substr(0, maxChars) + \"...\"\n                      : lemma.name}\n                  </text>\n                </Tooltip>\n                <rect\n                  x={left}\n                  y={y - size / 4}\n                  width={width}\n                  height={size / 2}\n                />\n              </Fragment>\n            );\n          })}\n          <path\n            d={`M ${left} ${top} L ${left} ${bottom} L ${right} ${bottom}`}\n            strokeWidth={size / 10}\n          />\n          <text\n            x={(left + right) / 2}\n            y={bottom + size * 0.75}\n            textAnchor=\"middle\"\n            dominantBaseline=\"hanging\"\n            fontSize={size}\n          >\n            Association Strength\n          </text>\n        </svg>\n      </p>\n    </>\n  );\n};\n\nexport default CellDetails;\n","import { useState } from \"react\";\nimport { useEffect } from \"react\";\n\nimport Tooltip from \"./tooltip\";\nimport CloudButtons from \"./cloud-buttons\";\nimport Map from \"./map\";\nimport Legend from \"./legend\";\nimport CellDetails from \"./cell-details\";\n\nimport color from \"color\";\n\n// map cell data\nconst mapData = \"./data/plot.json\";\n\n// word cloud \"principal component\" (pc) images\nexport const cloudImages =\n  \"https://raw.githubusercontent.com/greenelab/annorxiver/master/biorxiv/pca_association_experiment/output/word_pca_similarity/figure_pieces/pca_XX_cossim_word_cloud.png\";\nexport const startImage = 1;\nexport const endImage = 50;\n\n// map count color;\nexport const countColorA = color(\"#606060\");\nexport const countColorB = color(\"#e0e0e0\");\n\n// map principal component gradient colors\nexport const pcColorA = color(\"#ff9800\");\nexport const pcColorB = color(\"#ffffff\");\nexport const pcColorC = color(\"#2196f3\");\n\n// map sections component\n\nconst MapSections = ({ coordinates }) => {\n  // component state\n  const [cells, setCells] = useState([]);\n  const [selectedPc, setSelectedPc] = useState(null);\n  const [selectedCell, setSelectedCell] = useState(null);\n\n  // on app start, load map cell data\n  useEffect(() => {\n    const getMapData = async () =>\n      setCells(await (await fetch(mapData)).json());\n    getMapData();\n  }, []);\n\n  // render\n  return (\n    <>\n      <section id=\"map\">\n        <Tooltip content=\"A visualization of the PubMed landscape based on on textual content and model data\">\n          <h3>\n            <i className=\"fas fa-map\"></i>\n            <span>Map of PubMed Central</span>\n          </h3>\n        </Tooltip>\n        <CloudButtons {...{ selectedPc, setSelectedPc }} />\n        <Map\n          {...{ cells, selectedPc, selectedCell, setSelectedCell, coordinates }}\n        />\n        <Legend {...{ selectedPc, coordinates }} />\n      </section>\n      {selectedCell && (\n        <>\n          <hr />\n          <section id=\"cell-details\">\n            <h3>\n              <i className=\"fas fa-square\"></i>\n              <span>Selected Square</span>\n            </h3>\n            <CellDetails {...{ selectedCell, selectedPc, setSelectedPc }} />\n          </section>\n        </>\n      )}\n    </>\n  );\n};\n\nexport default MapSections;\n\n// util func to generate range between ints\nexport const range = (start, end) =>\n  Array.from({ length: end - start + 1 }, (_, i) => start + i);\n\n// get principal component number padded with 0's\nexport const getPcNum = (number) => String(number).padStart(2, \"0\");\n\n// get url of word cloud image\nexport const getCloudUrl = (number) =>\n  cloudImages.replace(\"XX\", getPcNum(number));\n","import Tooltip from \"./tooltip\";\n\n// about section\n\nconst About = () => (\n  <section id=\"help\">\n    <Tooltip content=\"Overview of this tool in more detail\">\n      <h3>\n        <i className=\"fas fa-question-circle\"></i>\n        <span>About this tool</span>\n      </h3>\n    </Tooltip>\n    <p>\n      This tool uses a machine learning model trained on 1.7 million{\" \"}\n      <a href=\"https://www.ncbi.nlm.nih.gov/pmc/tools/openftlist/\">\n        PubMed Central open access documents\n      </a>{\" \"}\n      to find similar papers and journals based on the textual content of your{\" \"}\n      <a href=\"https://www.biorxiv.org/\">bioRxiv</a> or{\" \"}\n      <a href=\"https://www.medrxiv.org/\">medRxiv</a> preprint. These results can\n      be used as a starting point when searching for a place to publish your\n      paper.\n    </p>\n    <p>\n      The tool also provides a \"map\" of the PubMed Central documents, grouped\n      into bins based on similar textual content, and shows you where your\n      preprint falls on the map. Select a square to learn more about the papers\n      in that bin.\n    </p>\n    <p>\n      The map also incorporates a set of 50{\" \"}\n      <a href=\"https://en.wikipedia.org/wiki/Principal_component_analysis\">\n        principal components\n      </a>{\" \"}\n      (PCs) generated from bio/medRxiv. Each PC represents two high level\n      concepts characterized by keywords of various strengths, illustrated in\n      the word cloud thumbnails above the map. Select a thumbnail to color the\n      map by that PC. Deeper orange squares will be papers that correlate more\n      with the orange keywords in the image, and vice versa for blue.\n    </p>\n    <p>\n      For more information, see the{\" \"}\n      <a href=\"https://github.com/greenelab/preprint-similarity-search\">\n        links in the readme\n      </a>\n      .\n    </p>\n  </section>\n);\n\nexport default About;\n","// footer component\n\nconst Footer = () => (\n  <footer>\n    <section>\n      <p>\n        A project of the <a href=\"https://greenelab.com/\">Greene Lab</a>\n        <br />\n        <a href=\"https://github.com/greenelab/preprint-similarity-search\">\n          <i className=\"fab fa-github\"></i>\n          <span>View on GitHub</span>\n        </a>\n      </p>\n    </section>\n  </footer>\n);\n\nexport default Footer;\n","import { useState } from \"react\";\n\nimport Header from \"./header\";\nimport Search from \"./search\";\nimport PreprintInfo from \"./preprint-info\";\nimport SimilarJournals from \"./similar-journals\";\nimport SimilarPapers from \"./similar-papers\";\nimport MapSections from \"./map-sections\";\nimport About from \"./about\";\nimport Footer from \"./footer\";\nimport Status from \"./status\";\nimport { empty } from \"./status\";\nimport { success } from \"./status\";\n\nimport \"./app.css\";\n\n// main app component\n\nconst App = () => {\n  // status state\n  const [status, setStatus] = useState(empty);\n\n  // main data\n  const [preprint, setPreprint] = useState({});\n  const [similarJournals, setSimilarJournals] = useState([]);\n  const [similarPapers, setSimilarPapers] = useState([]);\n  const [coordinates, setCoordinates] = useState({});\n\n  // render\n  return (\n    <>\n      <Header />\n      <main>\n        <Search\n          {...{\n            status,\n            setStatus,\n            setPreprint,\n            setSimilarJournals,\n            setSimilarPapers,\n            setCoordinates,\n          }}\n        />\n        <Status {...{ status }} />\n        {status === success && (\n          <>\n            <PreprintInfo {...{ preprint }} />\n            <hr />\n            <SimilarPapers {...{ similarPapers }} />\n            <hr />\n            <SimilarJournals {...{ similarJournals }} />\n          </>\n        )}\n        <hr />\n        <MapSections {...{ coordinates }} />\n        <hr />\n        <About />\n      </main>\n      <Footer />\n    </>\n  );\n};\n\nexport default App;\n","import { render } from 'react-dom';\nimport * as Sentry from '@sentry/react';\nimport App from './app';\n\nSentry.init({\n  dsn:\n    'https://b1183a2fe86f4a8f951e9bb67341c07f@o7983.ingest.sentry.io/5407669', // api key\n  environment: process.env.NODE_ENV // production or development\n});\n\n// render whole app\nrender(<App />, document.getElementById('root'));\n"],"sourceRoot":""}