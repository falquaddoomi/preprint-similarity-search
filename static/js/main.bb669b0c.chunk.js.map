{"version":3,"sources":["logo.svg","header.js","error.js","backend.js","status.js","search.js","preprint-info.js","similar-journals.js","similar-papers.js","cloud-buttons.js","math.js","hooks.js","map.js","legend.js","cell-details.js","map-sections.js","about.js","footer.js","app.js","index.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","createElement","_ref3","id","fill","d","_ref4","stroke","strokeWidth","strokeLinecap","strokeLinejoin","_ref5","_ref6","_ref7","transform","_ref","svgRef","title","props","viewBox","ref","ForwardRef","forwardRef","className","CustomError","args","name","Error","getNeighbors","query","a","fetch","response","ok","json","neighbors","message","preprint","paper_info","similarJournals","journal_neighbors","similarPapers","paper_neighbors","coordinates","removePMC","entry","pmcid","document","replace","forEach","getNeighborsMetadata","array","ids","map","filter","join","metadata","result","incorp","cleanPreprint","doi","authors","split","journal","publisher","year","accepted_date","cleanNeighbors","distances","distance","max","Math","min","diff","sort","b","index","author","fulljournalname","pubdate","strength","rank","status","setStatus","setPreprint","setSimilarJournals","setSimilarPapers","setCoordinates","useState","getUrl","setQuery","onChange","useCallback","event","value","trim","search","updateUrl","cleanDoi","setUrl","Sentry","tags","onNav","useEffect","window","addEventListener","removeEventListener","href","onSubmit","preventDefault","type","placeholder","disabled","URLSearchParams","location","substring","get","oldUrl","newUrl","history","pushState","tabIndex","rankColorA","color","rankColorB","style","backgroundColor","mix","selectedPc","setSelectedPc","range","startImage","endImage","number","CloudButton","hover","setHover","reference","setReference","popper","setPopper","timeout","useRef","usePopper","placement","modifiers","options","adaptive","offset","rootBoundary","styles","attributes","update","data-number","getPcNum","data-selected","onClick","onMouseEnter","clearTimeout","current","setTimeout","onMouseLeave","src","getCloudUrl","alt","onLoad","createPortal","body","limit","sq","x","pow","rt","sqrt","boost","knee","r","useViewBox","rerender","svg","undefined","setViewBox","getBBox","y","width","height","n","toFixed","cells","selectedCell","setSelectedCell","cell","pc","pcs","find","score","absScore","abs","counts","count","minCount","maxCount","concat","cellSize","pcColorB","pcColorA","pcColorC","countColorB","countColorA","cx","cy","lemmas","scores","lemma","minScore","maxScore","right","bottom","toLocaleString","journals","size","left","textAnchor","dominantBaseline","fontSize","substr","setCells","getMapData","start","end","Array","from","_","String","padStart","dsn","environment","process","render","getElementById"],"mappings":"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","file":"static/js/main.bb669b0c.chunk.js","sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"style\", null, \"\\n    #logo:hover #star,\\n    #logo[data-spin] #star {\\n      animation: star_rotate 2s ease forwards infinite;\\n    }\\n    @keyframes star_rotate {\\n      from {\\n        transform: rotate(0);\\n      }\\n      to {\\n        transform: rotate(360deg);\\n      }\\n    }\\n  \");\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"path\", {\n  id: \"book_filling\",\n  fill: \"#ffe0b2\",\n  d: \"       M 10 50       L 50 70       L 90 50       L 90 35       L 50 55       L 10 35       A 10 10 0 0 0 10 50       M 10 65       L 50 85       L 90 65       L 90 50       L 50 70       L 10 50       A 10 10 0 0 0 10 65     \"\n});\n\nvar _ref4 = /*#__PURE__*/React.createElement(\"path\", {\n  id: \"book_top_cover\",\n  fill: \"#000000\",\n  stroke: \"#000000\",\n  strokeWidth: 5,\n  strokeLinecap: \"round\",\n  strokeLinejoin: \"round\",\n  d: \"       M 50 15       L 90 35       L 50 55       L 10 35       z     \"\n});\n\nvar _ref5 = /*#__PURE__*/React.createElement(\"path\", {\n  id: \"book_outlines\",\n  fill: \"none\",\n  stroke: \"#000000\",\n  strokeWidth: 5,\n  strokeLinecap: \"round\",\n  strokeLinejoin: \"round\",\n  d: \"       M 10 50       L 30 60       M 47.5 68.75       L 50 70       L 90 50       M 10 65       L 50 85       L 90 65       M 10 35       A 10 10 0 0 0 10 50       A 10 10 0 0 0 10 65     \"\n});\n\nvar _ref6 = /*#__PURE__*/React.createElement(\"path\", {\n  id: \"bookmark\",\n  fill: \"#000000\",\n  stroke: \"#000000\",\n  strokeWidth: 2,\n  strokeLinecap: \"round\",\n  strokeLinejoin: \"round\",\n  d: \"       M 35 55       L 35 71.25       L 38.75 69.25       L 42.5 74.75       L 42.5 58.75       z     \"\n});\n\nvar _ref7 = /*#__PURE__*/React.createElement(\"g\", {\n  transform: \"translate(50,34) rotate(26.565) skewX(-26.565) scale(0.10)\"\n}, /*#__PURE__*/React.createElement(\"path\", {\n  id: \"star\",\n  fill: \"#ffe0b2\",\n  stroke: \"#ffe0b2\",\n  strokeWidth: 20,\n  strokeLinecap: \"round\",\n  strokeLinejoin: \"round\",\n  d: \"         M 0.000 -100.000         L 29.389 -40.451         L 95.106 -30.902         L 47.553 15.451         L 58.779 80.902         L 0.000 50.000         L -58.779 80.902         L -47.553 15.451         L -95.106 -30.902         L -29.389 -40.451         z       \"\n}));\n\nvar SvgLogo = function SvgLogo(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 100 100\",\n    id: \"logo\",\n    ref: svgRef\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _ref2, _ref3, _ref4, _ref5, _ref6, _ref7);\n};\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgLogo, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/logo.e444815c.svg\";\nexport { ForwardRef as ReactComponent };","import React from 'react';\n\nimport { ReactComponent as Logo } from './logo.svg';\n\nimport './header.css';\n\n// header component\n\nexport default () => (\n  <header>\n    <section>\n      <h1>Preprint</h1>\n      <h2>Similarity Search</h2>\n      <Logo className='logo' />\n    </section>\n  </header>\n);\n","export class CustomError extends Error {\n  constructor(...args) {\n    super(...args);\n    this.name = 'CustomError';\n  }\n}\n","import { CustomError } from './error';\n\nconst backendServer = 'https://api-pss.greenelab.com/doi/';\n\n// get neighbor and coordinate data from backend\nexport const getNeighbors = async (query) => {\n  // look up data from backend\n  const response = await fetch(backendServer + query);\n  if (!response.ok)\n    throw new Error();\n  const neighbors = await response.json();\n\n  // if error returned, throw error with message\n  if (neighbors.message)\n    throw new CustomError(neighbors.message);\n\n  // extract results\n  const preprint = neighbors.paper_info || {};\n  const similarJournals = neighbors.journal_neighbors || [];\n  const similarPapers = neighbors.paper_neighbors || [];\n  const coordinates = neighbors.coordinates || {};\n\n  // remove \"PMC\" prefix from PMCID's\n  const removePMC = (entry) =>\n    (entry.pmcid = (entry.pmcid || entry.document || '').replace('PMC', ''));\n  similarJournals.forEach(removePMC);\n  similarPapers.forEach(removePMC);\n\n  // return results\n  return { preprint, similarJournals, similarPapers, coordinates };\n};\n\nconst metaLookup =\n  'https://eutils.ncbi.nlm.nih.gov/entrez/eutils/esummary.fcgi?db=pmc&email=greenescientist@gmail.com&retmode=json&id=';\n\n// look up journal or paper metadata from nih.gov\nexport const getNeighborsMetadata = async (array) => {\n  // get pmcid's for looking up meta data\n  const ids = array.map((entry) => entry.pmcid).filter((entry) => entry);\n\n  // look up metadata\n  const metadata = (await (await fetch(metaLookup + ids.join(','))).json())\n    .result;\n\n  // incorp meta data into journal/paper objects\n  const incorp = (entry) => ({ ...entry, ...(metadata[entry.pmcid] || {}) });\n  array = array.map(incorp);\n\n  // return results\n  return array;\n};\n\n// clean preprint data to handle more conveniently\nexport const cleanPreprint = (preprint) => ({\n  // doi\n  id: preprint.doi || null,\n  // name of paper\n  title: preprint.title || '',\n  // authors of paper\n  authors: (preprint.authors || []).split('; ').join(', '),\n  // name of journal\n  journal: preprint.publisher || '',\n  // year of publication\n  year: preprint.accepted_date.split('-')[0] || ''\n});\n\n// clean journal or paper neighbor data to handle more conveniently\nexport const cleanNeighbors = (array) => {\n  // get range of distances\n  const distances = array.map((entry) => entry.distance);\n  const max = Math.max(...distances);\n  const min = Math.min(...distances);\n  const diff = max - min;\n\n  // sort by smaller distances first\n  array.sort((a, b) => a.distance - b.distance);\n\n  // set new values of array. keep only needed props and rename sensibly\n  array = array.map((entry, index) => ({\n    // pubmed id\n    id: entry.pmcid || null,\n    // name of paper\n    title: entry.title || '',\n    // authors of paper\n    authors: (entry.authors || [])\n      .map((author) => author.name || '')\n      .filter((name) => name)\n      .join(', '),\n    // name of journal\n    journal: (entry.fulljournalname || entry.journal || '')\n      .split('_')\n      .join(' '),\n    // year of publication\n    year: (entry.pubdate || '').split(' ')[0] || '',\n    // distance score\n    distance: entry.distance,\n    // normalized distance score\n    strength: (entry.distance - min) / diff,\n    // whole number rank\n    rank: index + 1\n  }));\n\n  return array;\n};\n","import React from 'react';\n\nimport './status.css';\n\n// status key codes\nexport const empty = 'EMPTY';\nexport const loading = 'LOADING';\nexport const success = 'SUCCESS';\n\n// loading/error status component\n\nexport default ({ status }) => {\n  if (status === empty) {\n    return (\n      <section className='center gray'>\n        <i className='fas fa-exclamation icon_with_text'></i>\n        <span>Search for a doi</span>\n      </section>\n    );\n  }\n\n  if (status === loading) {\n    return (\n      <section className='center gray'>\n        <i className='fas fa-spinner fa-spin icon_with_text'></i>\n        <span>Loading...</span>\n      </section>\n    );\n  }\n\n  if (status === success)\n    return null;\n\n  return (\n    <section className='center red'>\n      <i className='far fa-times-circle icon_with_text'></i>\n      <span>{status || \"Couldn't get results\"}</span>\n    </section>\n  );\n};\n","import React from 'react';\nimport { useEffect } from 'react';\nimport { useState } from 'react';\nimport { useCallback } from 'react';\nimport * as Sentry from '@sentry/react';\n\nimport { getNeighbors } from './backend';\nimport { getNeighborsMetadata } from './backend';\nimport { cleanPreprint } from './backend';\nimport { cleanNeighbors } from './backend';\n\nimport { loading } from './status';\nimport { success } from './status';\n\nimport './search.css';\n\nconst defaultSearch = 'e.g. 10.1101/833400';\n\n// search box component\n\nexport default ({\n  status,\n  setStatus,\n  setPreprint,\n  setSimilarJournals,\n  setSimilarPapers,\n  setCoordinates\n}) => {\n  // default query\n  const [query, setQuery] = useState(getUrl() || defaultSearch);\n\n  // on type\n  const onChange = useCallback(\n    (event) => setQuery(event.target.value.trim()),\n    []\n  );\n\n  // search\n  const search = useCallback(\n    async (doi, updateUrl = true) => {\n      // clean doi\n      doi = cleanDoi(doi);\n\n      // update search box with cleaned doi\n      setQuery(doi);\n\n      // exit if doi query empty\n      if (!doi)\n        return;\n\n      // update url based on search\n      if (updateUrl)\n        setUrl(doi);\n\n      // set loading status\n      setStatus(loading);\n\n      // get preprint info and neighbor data\n      try {\n        let {\n          preprint,\n          similarJournals,\n          similarPapers,\n          coordinates\n        } = await getNeighbors(doi);\n        preprint = cleanPreprint(preprint);\n        similarJournals = await getNeighborsMetadata(similarJournals);\n        similarPapers = await getNeighborsMetadata(similarPapers);\n        similarJournals = cleanNeighbors(similarJournals);\n        similarPapers = cleanNeighbors(similarPapers);\n        setStatus(success);\n        setPreprint(preprint);\n        setSimilarJournals(similarJournals);\n        setSimilarPapers(similarPapers);\n        setCoordinates(coordinates);\n      } catch (error) {\n        if (error.name !== 'CustomError')\n          error.message = \"Couldn't get results\";\n        setStatus(error.message);\n        setPreprint({});\n        setSimilarJournals([]);\n        setSimilarPapers([]);\n        setCoordinates({});\n        Sentry.captureException(error, { tags: { doi } });\n      }\n    },\n    [\n      setStatus,\n      setPreprint,\n      setSimilarJournals,\n      setSimilarPapers,\n      setCoordinates\n    ]\n  );\n\n  // when user navigates back/forward\n  const onNav = useCallback(() => {\n    // get new doi\n    const doi = getUrl();\n    if (!doi)\n      return;\n    // put doi in search box\n    setQuery(doi);\n    // run search, without updating url since browser does this automatically\n    search(doi, false);\n  }, [search]);\n\n  // search for doi in url if any on first load\n  useEffect(() => {\n    if (getUrl())\n      search(getUrl());\n  }, [search]);\n\n  // listen for user back/forward nav\n  useEffect(() => {\n    window.addEventListener('popstate', onNav);\n    return () => window.removeEventListener('popstate', onNav);\n  }, [onNav, search]);\n\n  // render\n  return (\n    <section id='search'>\n      <p className='center'>\n        <i>\n          Enter the <a href='https://www.biorxiv.org/'>bioRxiv</a> or{' '}\n          <a href='https://www.medrxiv.org/'>medRxiv</a> DOI of your preprint\n        </i>\n      </p>\n      <form\n        className='search'\n        onSubmit={(event) => {\n          // prevent page from navigating away/refreshing on submit\n          event.preventDefault();\n          // run search\n          search(query);\n        }}\n      >\n        <input\n          className='search_input'\n          value={query}\n          onChange={onChange}\n          type='text'\n          placeholder='e.g. 10.1101/833400'\n          disabled={status === loading}\n        />\n        <button\n          className='search_button'\n          type='submit'\n          title='Search for related papers and journals'\n          disabled={status === loading}\n        >\n          <i className='fas fa-search'></i>\n        </button>\n      </form>\n    </section>\n  );\n};\n\n// clean what user types into search box for convenience\n// remove everything before first number, eg \"doi:\"\n// remove version at end, eg \"v4\"\nconst cleanDoi = (query) =>\n  query.replace(/^\\D*/g, '').replace(/v\\d+$/g, '').trim();\n\n// get doi from url\nconst getUrl = () =>\n  new URLSearchParams(window.location.search.substring(1)).get('doi');\n\n// put doi in url as param\nconst setUrl = (doi) => {\n  const oldUrl = window.location.href;\n  const base = window.location.href.split(/[?#]/)[0];\n  const newUrl = base + '?doi=' + doi;\n  // compare old to new url to prevent duplicate history entries when refreshing\n  if (oldUrl !== newUrl)\n    window.history.pushState(null, null, newUrl);\n};\n","import React from 'react';\n\nconst link = 'https://doi.org/';\n\n// preprint info section\n\nexport default ({ preprint: { id, title, authors, journal, year } }) => (\n  <section id='your-preprint'>\n    <h3>\n      <i className='fas fa-feather-alt heading_icon'></i>Your Preprint\n    </h3>\n    <p>\n      <a href={link + id} title={title} className='card_detail'>\n        {title}\n      </a>\n      <span title={authors} className='card_detail truncate' tabIndex='0'>\n        {authors}\n      </span>\n      <span\n        title={journal + ' · ' + year}\n        className='card_detail truncate'\n        tabIndex='0'\n      >\n        {journal} · {year}\n      </span>\n    </p>\n  </section>\n);\n","import React from 'react';\n\nimport color from 'color';\n\nimport './card.css';\n\nconst rankColorA = color('#ff980020');\nconst rankColorB = color('#ff9800');\n\nconst link = 'https://www.google.com/search?q=';\n\n// similar journals section\n\nexport default ({ similarJournals }) => (\n  <section id='similar-journals'>\n    <h3>\n      <i className='fas fa-bookmark heading_icon'></i>Most Similar Journals\n    </h3>\n    {similarJournals.map(({ journal, rank, distance, strength }, index) => (\n      <div key={index} className='card'>\n        <div\n          className='card_score'\n          title={'Distance score: ' + distance}\n          style={{ backgroundColor: rankColorB.mix(rankColorA, strength) }}\n        >\n          {rank}\n        </div>\n        <div className='card_details'>\n          <a href={link + journal} className='card_detail'>\n            {journal}\n          </a>\n        </div>\n      </div>\n    ))}\n  </section>\n);\n","import React from 'react';\n\nimport color from 'color';\n\nimport './card.css';\n\nconst rankColorA = color('#ff980020');\nconst rankColorB = color('#ff9800');\n\nconst link = 'https://www.ncbi.nlm.nih.gov/pmc/articles/';\n\n// related papers section\n\nexport default ({ similarPapers }) => (\n  <section id='similar-papers'>\n    <h3>\n      <i className='fas fa-scroll heading_icon'></i>Most Similar Papers\n    </h3>\n    {similarPapers.map(\n      (\n        { id, title, authors, year, journal, rank, distance, strength },\n        index\n      ) => (\n        <div key={index} className='card'>\n          <div\n            className='card_score'\n            title={'Distance score: ' + distance}\n            style={{ backgroundColor: rankColorB.mix(rankColorA, strength) }}\n          >\n            {rank}\n          </div>\n          <div className='card_details'>\n            <a href={link + id} title={title} className='card_detail'>\n              {title}\n            </a>\n            <div title={authors} className='card_detail truncate' tabIndex='0'>\n              {authors}\n            </div>\n            <div\n              title={journal + ' · ' + year}\n              className='card_detail truncate'\n              tabIndex='0'\n            >\n              {journal} · {year}\n            </div>\n          </div>\n        </div>\n      )\n    )}\n  </section>\n);\n","import React from 'react';\nimport { createPortal } from 'react-dom';\nimport { useState } from 'react';\nimport { useRef } from 'react';\nimport { usePopper } from 'react-popper';\n\nimport { startImage } from './map-sections';\nimport { endImage } from './map-sections';\nimport { range } from './map-sections';\nimport { getPcNum } from './map-sections';\nimport { getCloudUrl } from './map-sections';\n\nimport './cloud-buttons.css';\n\n// tooltip open delay\nconst delay = 200;\n\n// cloud image button components\n\nexport default ({ selectedPc, setSelectedPc }) => (\n  <p className='center'>\n    {range(startImage, endImage).map((number) => (\n      <CloudButton key={number} {...{ number, selectedPc, setSelectedPc }} />\n    ))}\n  </p>\n);\n\n// cloud image button component\nconst CloudButton = ({ number, selectedPc, setSelectedPc }) => {\n  // component state\n  const [hover, setHover] = useState(false);\n  const [reference, setReference] = useState(null);\n  const [popper, setPopper] = useState(null);\n\n  // tooltip timer\n  const timeout = useRef();\n\n  // make tooltip\n  const { styles, attributes, update } = usePopper(reference, popper, {\n    placement: 'top',\n    modifiers: [\n      // https://github.com/popperjs/popper-core/issues/1138\n      { name: 'computeStyles', options: { adaptive: false } },\n      { name: 'offset', options: { offset: [0, 10] } },\n      { name: 'flip', options: { rootBoundary: 'document' } }\n    ]\n  });\n\n  // render\n  return (\n    <>\n      <button\n        ref={setReference}\n        className='cloud_button'\n        data-number={getPcNum(number)}\n        data-selected={selectedPc === number}\n        onClick={() =>\n          selectedPc === number ? setSelectedPc(null) : setSelectedPc(number)\n        }\n        onMouseEnter={() => {\n          window.clearTimeout(timeout.current);\n          timeout.current = window.setTimeout(() => setHover(true), delay);\n        }}\n        onMouseLeave={() => {\n          window.clearTimeout(timeout.current);\n          setHover(false);\n        }}\n      >\n        <img\n          src={getCloudUrl(number)}\n          title={'Select principal component ' + getPcNum(number)}\n          alt={'Select principal component ' + getPcNum(number)}\n          onLoad={update}\n        />\n      </button>\n      {hover &&\n        createPortal(\n          <img\n            ref={setPopper}\n            src={getCloudUrl(number)}\n            className='cloud_enlarged'\n            title={'Select principal component ' + getPcNum(number)}\n            alt={'Select principal component ' + getPcNum(number)}\n            onLoad={update}\n            style={styles.popper}\n            {...attributes.popper}\n          />,\n          document.body\n        )}\n    </>\n  );\n};\n","// limit value between min and max values\nconst limit = (value, min, max) => Math.max(Math.min(value, max), min);\n\n// shorthands for math functions\nconst sq = (x) => Math.pow(x, 2);\nconst rt = (x) => Math.sqrt(x);\n\n// boost a normalized (0 to 1) value in non-linear, \"circular\" way\n// see comments below. middle values will be boosted more than extreme values.\nexport const boost = (x, knee = 0) => {\n  // limit inputs\n  x = limit(x, 0, 1);\n  knee = limit(knee, 0.00001, 1);\n\n  // find formula for center (x,y) of circle given 2 points and radius:\n  // https://stackoverflow.com/questions/36211171/finding-center-of-a-circle-given-two-points-and-radius\n\n  // set (x1,y1) and (x2,y2) to (0,0) and (1,1):\n  // (x-0.5-0.5sqrt(2r^2-1))^2/r^2 + (y-0.5+0.5sqrt(2r^2-1))^2/r^2 = 1\n\n  // graph the equation on desmos.com to understand what this boost func does:\n  // \\frac{\\left(x-\\ 0.5-0.5\\sqrt{2r^{2}-1}\\right)^{2}}{r^{2}}+\\frac{\\left(y-0.5+0.5\\sqrt{2r^{2}-1}\\right)^{2}}{r^{2}}=1\\ \\left\\{0<x<1\\right\\}\\ \\left\\{0<y<1\\right\\}\n\n  // knee will determine radius:\n  // 0% knee = infinite radius = straight line from (0,0) to (1,1)\n  // 100% knee = radius of 1 = quarter circle from (0,0) to (1,1)\n  const r = 1 / knee;\n\n  // solve previous formula for x with WolframAlpha and simplify\n  const a = rt(2 * sq(r) - 1);\n  return (1 + rt(2) * rt(2 * x * a + sq(r) - a - 2 * sq(x) + 2 * x) - a) / 2;\n};\n","import { useState } from 'react';\nimport { useEffect } from 'react';\nimport { useRef } from 'react';\n\n// get fitted view box of svg\nexport const useViewBox = (rerender) => {\n  const svg = useRef();\n  const [viewBox, setViewBox] = useState(undefined);\n\n  useEffect(() => {\n    // if svg not mounted yet, exit\n    if (!svg.current)\n      return;\n    // get bbox of content in svg\n    const { x, y, width, height } = svg.current.getBBox();\n    // set view box to bbox, essentially fitting view to content\n    setViewBox([x, y, width, height].map((n) => n.toFixed(2)).join(' '));\n  }, [rerender]);\n\n  return [svg, viewBox];\n};\n","import React from 'react';\n\nimport { pcColorA } from './map-sections';\nimport { pcColorB } from './map-sections';\nimport { pcColorC } from './map-sections';\nimport { countColorA } from './map-sections';\nimport { countColorB } from './map-sections';\nimport { getPcNum } from './map-sections';\nimport { boost } from './math';\nimport { useViewBox } from './hooks';\n\nimport './map.css';\n\n// size of map cells in svg units. match to bin width of plot data\nlet cellSize = 0.85;\n// increase by small % to reduce anti-alias gaps between cells\ncellSize *= 1.05;\n\n// map component\n\n// pubmed central map section\nexport default ({\n  cells,\n  selectedPc,\n  selectedCell,\n  setSelectedCell,\n  coordinates\n}) => {\n  // component state\n  const [svg, viewBox] = useViewBox(cells);\n\n  if (!selectedPc) {\n    // if no selected pc, color cells by paper count\n    // normalize counts\n    const counts = cells.map((cell) => cell.count);\n    const minCount = Math.min(...counts);\n    const maxCount = Math.max(...counts);\n    for (const cell of cells) {\n      cell.strength = (cell.count - minCount) / (maxCount - minCount) || 0;\n      cell.strength = boost(cell.strength, 1);\n    }\n  } else {\n    // if pc selected, color cells by pc score\n    // normalize pc scores\n    for (const cell of cells) {\n      const pc = cell.pcs.find((pc) => pc.name === getPcNum(selectedPc));\n      cell.score = pc?.score || 0;\n    }\n    const absScore =\n      Math.max(...cells.map((cell) => Math.abs(cell.score))) || 1;\n    for (const cell of cells)\n      cell.strength = cell.score / absScore || 0;\n  }\n\n  // render\n  return (\n    <p>\n      <svg ref={svg} viewBox={viewBox} className='map'>\n        {\n          // put extra selected cell last, so it will always be on top\n          cells.concat(selectedCell || []).map((cell, number) => (\n            <rect\n              key={number}\n              className='cell'\n              x={cell.x}\n              y={cell.y}\n              width={cellSize}\n              height={cellSize}\n              data-selected={cell === selectedCell}\n              fill={\n                selectedPc ?\n                  pcColorB.mix(\n                    cell.strength > 0 ? pcColorA : pcColorC,\n                    Math.abs(cell.strength)\n                  ) :\n                  countColorB.mix(countColorA, cell.strength)\n              }\n              strokeWidth={cellSize / 4}\n              onClick={() =>\n                cell === selectedCell ?\n                  setSelectedCell(null) :\n                  setSelectedCell(cell)\n              }\n            />\n          ))\n        }\n        {typeof coordinates.x === 'number' &&\n          typeof coordinates.y === 'number' && (\n          <circle\n            className='marker'\n            strokeWidth={cellSize / 4}\n            cx={coordinates.x}\n            cy={coordinates.y}\n            r={cellSize / 2}\n          />\n        )}\n      </svg>\n    </p>\n  );\n};\n","import React from 'react';\n\nimport { pcColorA } from './map-sections';\nimport { pcColorC } from './map-sections';\nimport { countColorA } from './map-sections';\nimport { countColorB } from './map-sections';\nimport { getPcNum } from './map-sections';\n\nimport './legend.css';\n\n// map legend component\n\nexport default ({ selectedPc, coordinates }) => (\n  <p className='legend'>\n    {selectedPc && (\n      <>\n        <span>\n          <span\n            className='legend_square'\n            style={{ backgroundColor: pcColorA }}\n          ></span>\n          pos pc\n          {getPcNum(selectedPc)}\n        </span>\n        <span>\n          <span\n            className='legend_square'\n            style={{ backgroundColor: pcColorC }}\n          ></span>\n          neg pc\n          {getPcNum(selectedPc)}\n        </span>\n      </>\n    )}\n    {!selectedPc && (\n      <>\n        <span>\n          <span\n            className='legend_square'\n            style={{ backgroundColor: countColorA }}\n          ></span>\n          many papers\n        </span>\n        <span>\n          <span\n            className='legend_square'\n            style={{ backgroundColor: countColorB }}\n          ></span>\n          few papers\n        </span>\n      </>\n    )}\n    {coordinates.x && coordinates.y && (\n      <>\n        <span>\n          <span\n            className='legend_circle'\n            style={{ backgroundColor: 'var(--red)' }}\n          ></span>\n          your preprint\n        </span>\n      </>\n    )}\n  </p>\n);\n","import React from 'react';\nimport { Fragment } from 'react';\n\nimport { useViewBox } from './hooks';\n\nimport './cell-details.css';\n\n// lemma plot settings\nconst maxChars = 20;\n\n// details of selected cell component\n\nexport default ({ selectedCell }) => {\n  // get lemmas from selected cell\n  const lemmas = selectedCell.lemmas || [];\n\n  // component state\n  const [svg, viewBox] = useViewBox(lemmas);\n\n  // normalize lemma scores\n  const scores = lemmas.map((lemma) => lemma.score);\n  const minScore = Math.min(...scores);\n  const maxScore = Math.max(...scores);\n  for (const lemma of lemmas)\n    lemma.strength = (lemma.score - minScore) / (maxScore - minScore) || 0;\n\n  // height of rows and font size of text in svg units (and pixels, because\n  // width of svg is matched to view box which is fit to contents)\n  const size = 15;\n\n  // width of svg, based on view box\n  const width = (viewBox || '').split(' ')[2] || 0;\n  // plot area boundaries\n  const left = 0;\n  const top = 0;\n  const right = lemmas.length * size + size;\n  const bottom = lemmas.length * size + size;\n  // min width of bars\n  const minWidth = size / 2;\n\n  return (\n    <>\n      <h4>Papers</h4>\n      <p>{selectedCell.count.toLocaleString()}</p>\n      <h4>Top Journals</h4>\n      <p>\n        {selectedCell.journals.map(({ name, count }, number) => (\n          <span key={number} className='cell_detail_row'>\n            <span className='truncate'>{name}</span>\n            <span className='truncate'>{count.toLocaleString()} papers</span>\n          </span>\n        ))}\n      </p>\n      <h4>Top Lemmas</h4>\n      <p>\n        <svg\n          ref={svg}\n          viewBox={viewBox}\n          className='chart'\n          style={{ width: width + 'px' }}\n        >\n          {lemmas.map((lemma, index) => {\n            const width = Math.max(lemma.strength * (right - left), minWidth);\n            const y = top + (index + 1) * size;\n            return (\n              <Fragment key={index}>\n                <text\n                  x={left - size * 0.75}\n                  y={y}\n                  textAnchor='end'\n                  dominantBaseline='middle'\n                  fontSize={size}\n                  title={lemma.name}\n                >\n                  {lemma.name.length > maxChars ?\n                    lemma.name.substr(0, maxChars) + '...' :\n                    lemma.name}\n                </text>\n                <rect\n                  x={left}\n                  y={y - size / 4}\n                  width={width}\n                  height={size / 2}\n                />\n              </Fragment>\n            );\n          })}\n          <path\n            d={`M ${left} ${top} L ${left} ${bottom} L ${right} ${bottom}`}\n            strokeWidth={size / 10}\n          />\n          <text\n            x={(left + right) / 2}\n            y={bottom + size * 0.75}\n            textAnchor='middle'\n            dominantBaseline='hanging'\n            fontSize={size}\n          >\n            Association Strength\n          </text>\n        </svg>\n      </p>\n    </>\n  );\n};\n","import React from 'react';\nimport { useState } from 'react';\nimport { useEffect } from 'react';\n\nimport CloudButtons from './cloud-buttons';\nimport Map from './map';\nimport Legend from './legend';\nimport CellDetails from './cell-details';\n\nimport color from 'color';\n\n// map cell data\nconst mapData = './data/plot.json';\n\n// word cloud \"principal component\" (pc) images\nexport const cloudImages =\n  'https://raw.githubusercontent.com/greenelab/annorxiver/master/biorxiv/pca_association_experiment/output/word_pca_similarity/figure_pieces/pca_XX_cossim_word_cloud.png';\nexport const startImage = 1;\nexport const endImage = 50;\n\n// map count color;\nexport const countColorA = color('#606060');\nexport const countColorB = color('#e0e0e0');\n\n// map principal component gradient colors\nexport const pcColorA = color('#ff9800');\nexport const pcColorB = color('#e0e0e0');\nexport const pcColorC = color('#2196f3');\n\n// map section component\n\nexport default ({ coordinates }) => {\n  // component state\n  const [cells, setCells] = useState([]);\n  const [selectedPc, setSelectedPc] = useState(null);\n  const [selectedCell, setSelectedCell] = useState(null);\n\n  // on app start, load map cell data\n  useEffect(() => {\n    const getMapData = async () =>\n      setCells(await (await fetch(mapData)).json());\n    getMapData();\n  }, []);\n\n  // render\n  return (\n    <>\n      <section id='map'>\n        <h3>\n          <i className='fas fa-map heading_icon'></i>Map of PubMed Central\n        </h3>\n        <CloudButtons {...{ selectedPc, setSelectedPc }} />\n        <Map\n          {...{ cells, selectedPc, selectedCell, setSelectedCell, coordinates }}\n        />\n        <Legend {...{ selectedPc, coordinates }} />\n      </section>\n      {selectedCell && (\n        <>\n          <hr />\n          <section id='cell-details'>\n            <h3>\n              <i className='fas fa-square heading_icon'></i>Selected Square\n            </h3>\n            <CellDetails {...{ selectedCell, selectedPc, setSelectedPc }} />\n          </section>\n        </>\n      )}\n    </>\n  );\n};\n\n// util func to generate range between ints\nexport const range = (start, end) =>\n  Array.from({ length: end - start + 1 }, (_, i) => start + i);\n\n// get principal component number padded with 0's\nexport const getPcNum = (number) => String(number).padStart(2, '0');\n\n// get url of word cloud image\nexport const getCloudUrl = (number) =>\n  cloudImages.replace('XX', getPcNum(number));\n","import React from 'react';\n\n// about section\n\nexport default () => (\n  <section id='help'>\n    <h3>\n      <i className='fas fa-question-circle heading_icon'></i>About this tool\n    </h3>\n    <p>\n      This tool uses a machine learning model trained on 1.7 million{' '}\n      <a href='https://www.ncbi.nlm.nih.gov/pmc/tools/openftlist/'>\n        PubMed Central open access documents\n      </a>{' '}\n      to find similar papers and journals based on the textual content of your{' '}\n      <a href='https://www.biorxiv.org/'>bioRxiv</a> or{' '}\n      <a href='https://www.medrxiv.org/'>medRxiv</a> preprint. These results can\n      be used as a starting point when searching for a place to publish your\n      paper.\n    </p>\n    <p>\n      The tool also provides a \"map\" of the PubMed Central documents, grouped\n      into bins based on similar textual content, and shows you where your\n      preprint falls on the map. Select a square to learn more about the papers\n      in that bin.\n    </p>\n    <p>\n      The map also incorporates a set of 50{' '}\n      <a href='https://en.wikipedia.org/wiki/Principal_component_analysis'>\n        principal components\n      </a>{' '}\n      (PCs) generated from bioRxiv. Each PC represents two high level concepts\n      characterized by keywords of various strengths, illustrated in the word\n      cloud thumbnails above the map. Select a thumbnail to color the map by\n      that PC. Deeper orange squares will be papers that correlate more with the\n      orange keywords in the image, and vice versa for blue.\n    </p>\n    <p>\n      For more information, see the{' '}\n      <a href='https://github.com/greenelab/preprint-similarity-search'>\n        readme on GitHub\n      </a>\n      .\n    </p>\n  </section>\n);\n","import React from 'react';\n\n// footer component\n\nexport default () => (\n  <footer>\n    <section>\n      <p>\n        A project of the <a href='https://greenelab.com/'>Greene Lab</a>\n        <br />\n        <a href='https://github.com/greenelab/preprint-similarity-search'>\n          <i className='fab fa-github icon_with_text'></i>\n          <span>View on GitHub</span>\n        </a>\n      </p>\n    </section>\n  </footer>\n);\n","import React from 'react';\nimport { useState } from 'react';\n\nimport Header from './header';\nimport Search from './search';\nimport PreprintInfo from './preprint-info';\nimport SimilarJournals from './similar-journals';\nimport SimilarPapers from './similar-papers';\nimport MapSections from './map-sections';\nimport About from './about';\nimport Footer from './footer';\nimport Status from './status';\nimport { empty } from './status';\nimport { success } from './status';\n\nimport './app.css';\n\n// main app component\n\nexport default () => {\n  // status state\n  const [status, setStatus] = useState(empty);\n\n  // main data\n  const [preprint, setPreprint] = useState({});\n  const [similarJournals, setSimilarJournals] = useState([]);\n  const [similarPapers, setSimilarPapers] = useState([]);\n  const [coordinates, setCoordinates] = useState({});\n\n  // render\n  return (\n    <>\n      <Header />\n      <main>\n        <Search\n          {...{\n            status,\n            setStatus,\n            setPreprint,\n            setSimilarJournals,\n            setSimilarPapers,\n            setCoordinates\n          }}\n        />\n        <Status {...{ status }} />\n        <hr />\n        {status === success && (\n          <>\n            <PreprintInfo {...{ preprint }} />\n            <hr />\n            <SimilarPapers {...{ similarPapers }} />\n            <hr />\n            <SimilarJournals {...{ similarJournals }} />\n            <hr />\n          </>\n        )}\n        <MapSections {...{ coordinates }} />\n        <hr />\n        <About />\n      </main>\n      <Footer />\n    </>\n  );\n};\n","import React from 'react';\nimport { render } from 'react-dom';\nimport * as Sentry from '@sentry/react';\nimport App from './app';\n\nSentry.init({\n  dsn:\n    'https://b1183a2fe86f4a8f951e9bb67341c07f@o7983.ingest.sentry.io/5407669', // api key\n  environment: process.env.NODE_ENV // production or development\n});\n\n// render whole app\nrender(<App />, document.getElementById('root'));\n"],"sourceRoot":""}