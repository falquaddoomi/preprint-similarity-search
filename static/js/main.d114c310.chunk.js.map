{"version":3,"sources":["logo.svg","header.js","backend.js","status.js","search.js","preprint-info.js","similar-journals.js","similar-papers.js","cloud-buttons.js","map.js","legend.js","cell-details.js","map-section.js","about.js","footer.js","app.js","index.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","createElement","id","fill","d","_ref4","stroke","strokeWidth","strokeLinecap","strokeLinejoin","_ref5","_ref6","_ref7","transform","_ref","svgRef","title","props","viewBox","ref","ForwardRef","forwardRef","className","getPreprintInfo","query","a","fetch","json","info","message","console","log","preprint","flat","join","url","URL","authors","author","map","given","family","filter","name","journal","publisher","year","accepted","getNeighbors","neighbors","similarJournals","journal_neighbors","similarPapers","paper_neighbors","coordinates","x","dim1","y","dim2","removePMC","entry","pmcid","document","replace","forEach","getNeighborsMetadata","array","ids","metadata","result","incorp","cleanNeighbors","distances","distance","max","Math","min","diff","sort","b","index","fulljournalname","split","pubdate","strength","rank","status","setPreprint","setStatus","setSimilarJournals","setSimilarPapers","setCoordinates","useState","getUrl","setQuery","onChange","useCallback","event","value","trim","search","doi","updateUrl","cleanDoi","setUrl","Sentry","tags","onNav","useEffect","window","addEventListener","removeEventListener","href","onSubmit","preventDefault","type","placeholder","disabled","URLSearchParams","location","substring","get","oldUrl","newUrl","history","pushState","tabIndex","rankColorA","color","rankColorB","style","backgroundColor","mix","selectedPc","setSelectedPc","range","startImage","endImage","number","CloudButton","hover","setHover","reference","setReference","popper","setPopper","timeout","useRef","usePopper","placement","modifiers","options","adaptive","offset","rootBoundary","styles","attributes","update","data-number","getPcNum","data-selected","onClick","onMouseEnter","clearTimeout","current","setTimeout","onMouseLeave","src","getCloudUrl","alt","onLoad","createPortal","body","cells","selectedCell","setSelectedCell","svg","setViewBox","cell","pc","pcs","find","score","absScore","abs","counts","count","minCount","maxCount","getBBox","width","height","undefined","concat","pcColorB","pcColorA","pcColorC","countColorB","countColorA","cx","cy","r","toLocaleString","journals","slice","role","parseInt","toFixed","setCells","getMapData","start","end","Array","from","_","String","padStart","dsn","environment","process","render","getElementById"],"mappings":"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","file":"static/js/main.d114c310.chunk.js","sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"style\", null, \"\\n    #logo:hover #star,\\n    #logo[data-spin] #star {\\n      animation: star_rotate 2s ease forwards infinite;\\n    }\\n    @keyframes star_rotate {\\n      from {\\n        transform: rotate(0);\\n      }\\n      to {\\n        transform: rotate(360deg);\\n      }\\n    }\\n  \");\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"path\", {\n  id: \"book_filling\",\n  fill: \"#ffe0b2\",\n  d: \"       M 10 50       L 50 70       L 90 50       L 90 35       L 50 55       L 10 35       A 10 10 0 0 0 10 50       M 10 65       L 50 85       L 90 65       L 90 50       L 50 70       L 10 50       A 10 10 0 0 0 10 65     \"\n});\n\nvar _ref4 = /*#__PURE__*/React.createElement(\"path\", {\n  id: \"book_top_cover\",\n  fill: \"#000000\",\n  stroke: \"#000000\",\n  strokeWidth: 5,\n  strokeLinecap: \"round\",\n  strokeLinejoin: \"round\",\n  d: \"       M 50 15       L 90 35       L 50 55       L 10 35       z     \"\n});\n\nvar _ref5 = /*#__PURE__*/React.createElement(\"path\", {\n  id: \"book_outlines\",\n  fill: \"none\",\n  stroke: \"#000000\",\n  strokeWidth: 5,\n  strokeLinecap: \"round\",\n  strokeLinejoin: \"round\",\n  d: \"       M 10 50       L 30 60       M 47.5 68.75       L 50 70       L 90 50       M 10 65       L 50 85       L 90 65       M 10 35       A 10 10 0 0 0 10 50       A 10 10 0 0 0 10 65     \"\n});\n\nvar _ref6 = /*#__PURE__*/React.createElement(\"path\", {\n  id: \"bookmark\",\n  fill: \"#000000\",\n  stroke: \"#000000\",\n  strokeWidth: 2,\n  strokeLinecap: \"round\",\n  strokeLinejoin: \"round\",\n  d: \"       M 35 55       L 35 71.25       L 38.75 69.25       L 42.5 74.75       L 42.5 58.75       z     \"\n});\n\nvar _ref7 = /*#__PURE__*/React.createElement(\"g\", {\n  transform: \"translate(50,34) rotate(26.565) skewX(-26.565) scale(0.10)\"\n}, /*#__PURE__*/React.createElement(\"path\", {\n  id: \"star\",\n  fill: \"#ffe0b2\",\n  stroke: \"#ffe0b2\",\n  strokeWidth: 20,\n  strokeLinecap: \"round\",\n  strokeLinejoin: \"round\",\n  d: \"         M 0.000 -100.000         L 29.389 -40.451         L 95.106 -30.902         L 47.553 15.451         L 58.779 80.902         L 0.000 50.000         L -58.779 80.902         L -47.553 15.451         L -95.106 -30.902         L -29.389 -40.451         z       \"\n}));\n\nvar SvgLogo = function SvgLogo(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 100 100\",\n    id: \"logo\",\n    ref: svgRef\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _ref2, _ref3, _ref4, _ref5, _ref6, _ref7);\n};\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgLogo, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/logo.e444815c.svg\";\nexport { ForwardRef as ReactComponent };","import React from 'react';\n\nimport { ReactComponent as Logo } from './logo.svg';\n\nimport './header.css';\n\n// header component\n\nexport default () => (\n  <header>\n    <section>\n      <h1>AnnoRxiver</h1>\n      <h2>Journal Recommender</h2>\n      <Logo className='logo' />\n    </section>\n  </header>\n);\n","const crossRef = 'https://api.crossref.org/works/';\n\n// look up metadata info for queried preprint from crossref\nexport const getPreprintInfo = async (query) => {\n  // look up info\n  const { message: info } = await (await fetch(crossRef + query)).json();\n  console.log('Preprint info:', info);\n\n  // rename and normalize props\n  const preprint = {\n    title: (info.title || []).flat().join(''),\n    url: info.URL || '',\n    authors: (info.author || [])\n      .map((author) => (author.given || '') + ' ' + (author.family || ''))\n      .filter((name) => name)\n      .join(', '),\n    journal: info.publisher || '',\n    year: info.accepted?.['date-parts']?.[0]?.[0] || ''\n  };\n\n  // return results\n  return preprint;\n};\n\nconst backendServer = 'https://api-journal-rec.greenelab.com/doi/';\n\n// get neighbor and coordinate data from backend\nexport const getNeighbors = async (query) => {\n  // look up data from backend\n  const neighbors = await (await fetch(backendServer + query)).json();\n\n  // extract results\n  const similarJournals = neighbors.journal_neighbors || [];\n  const similarPapers = neighbors.paper_neighbors || [];\n  const coordinates = {\n    x: neighbors['2d_coord'].dim1,\n    y: neighbors['2d_coord'].dim2\n  };\n\n  // remove \"PMC\" prefix from PMCID's\n  const removePMC = (entry) =>\n    (entry.pmcid = (entry.pmcid || entry.document || '').replace('PMC', ''));\n  similarJournals.forEach(removePMC);\n  similarPapers.forEach(removePMC);\n\n  // return results\n  return { similarJournals, similarPapers, coordinates };\n};\n\nconst metaLookup =\n  'https://eutils.ncbi.nlm.nih.gov/entrez/eutils/esummary.fcgi?db=pmc&tool=AnnoRxivir&email=greenescientist@gmail.com&retmode=json&id=';\n\n// look up journal or paper metadata from nih.gov\nexport const getNeighborsMetadata = async (array) => {\n  // get pmcid's for looking up meta data\n  const ids = array.map((entry) => entry.pmcid).filter((entry) => entry);\n\n  // look up metadata\n  const metadata = (await (await fetch(metaLookup + ids.join(','))).json())\n    .result;\n\n  // incorp meta data into journal/paper objects\n  const incorp = (entry) => ({ ...entry, ...(metadata[entry.pmcid] || {}) });\n  array = array.map(incorp);\n\n  // return results\n  return array;\n};\n\n// clean journal or paper neighbor data to handle more conveniently\nexport const cleanNeighbors = (array) => {\n  // get range of distances\n  const distances = array.map((entry) => entry.distance);\n  const max = Math.max(...distances);\n  const min = Math.min(...distances);\n  const diff = max - min;\n\n  // sort by smaller distances first\n  array.sort((a, b) => a.distance - b.distance);\n\n  // set new values of array. keep only needed props and rename sensibly\n  array = array.map((entry, index) => ({\n    // pubmed id\n    id: entry.pmcid || null,\n    // name of paper\n    title: entry.title || '',\n    // authors of paper\n    authors: (entry.authors || [])\n      .map((author) => author.name || '')\n      .filter((name) => name)\n      .join(', '),\n    // name of journal\n    journal: (entry.fulljournalname || entry.journal || '')\n      .split('_')\n      .join(' '),\n    // year of publication\n    year: (entry.pubdate || '').split(' ')[0] || '',\n    // distance score\n    distance: entry.distance,\n    // normalized distance score\n    strength: (entry.distance - min) / diff,\n    // whole number rank\n    rank: index + 1\n  }));\n\n  return array;\n};\n","import React from 'react';\n\nimport './status.css';\n\n// status key codes\nexport const empty = '';\nexport const loading = 'LOADING';\nexport const error = 'ERROR';\nexport const success = 'SUCCESS';\n\n// loading/error message component\n\nexport default ({ status }) => {\n  if (status === loading) {\n    return (\n      <section className='center'>\n        <div className='loading'>\n          <i className='fas fa-spinner fa-spin icon_with_text'></i>\n          <span>Loading...</span>\n        </div>\n      </section>\n    );\n  }\n\n  if (status === error) {\n    return (\n      <section className='center'>\n        <div className='error'>\n          <i className='far fa-times-circle icon_with_text'></i>\n          <span>Couldn't get results</span>\n        </div>\n      </section>\n    );\n  }\n\n  return null;\n};\n","import React from 'react';\nimport { useEffect } from 'react';\nimport { useState } from 'react';\nimport { useCallback } from 'react';\nimport * as Sentry from '@sentry/react';\n\nimport { getPreprintInfo } from './backend';\nimport { getNeighbors } from './backend';\nimport { getNeighborsMetadata } from './backend';\nimport { cleanNeighbors } from './backend';\nimport { loading, success, error } from './status';\n\nimport './search.css';\n\n// search box component\n\nexport default ({\n  setPreprint,\n  status,\n  setStatus,\n  setSimilarJournals,\n  setSimilarPapers,\n  setCoordinates\n}) => {\n  // default query\n  const [query, setQuery] = useState(getUrl() || '');\n\n  // on type\n  const onChange = useCallback(\n    (event) => setQuery(event.target.value.trim()),\n    []\n  );\n\n  // search\n  const search = useCallback(\n    async (doi, updateUrl = true) => {\n      // clean doi\n      doi = cleanDoi(doi);\n\n      // update search box with cleaned doi\n      setQuery(doi);\n\n      // exit if doi query empty\n      if (!doi)\n        return;\n\n      // set loading status\n      setStatus(loading);\n\n      // update url based on search\n      if (updateUrl)\n        setUrl(doi);\n\n      try {\n        // get preprint info\n        const preprint = await getPreprintInfo(doi);\n\n        // set preprint info\n        setPreprint(preprint);\n\n        // get neighbor data\n        let {\n          similarJournals,\n          similarPapers,\n          coordinates\n        } = await getNeighbors(doi);\n        similarJournals = await getNeighborsMetadata(similarJournals);\n        similarPapers = await getNeighborsMetadata(similarPapers);\n        similarJournals = cleanNeighbors(similarJournals);\n        similarPapers = cleanNeighbors(similarPapers);\n\n        // set neighbor data\n        setSimilarJournals(similarJournals);\n        setSimilarPapers(similarPapers);\n        setCoordinates(coordinates);\n        setStatus(success);\n      } catch (errorMessage) {\n        console.log(errorMessage);\n        // log error message and doi to Sentry\n        Sentry.captureException(errorMessage, { tags: { doi } });\n        // set error status if any problem\n        setStatus(error);\n      }\n    },\n    [\n      setPreprint,\n      setStatus,\n      setSimilarJournals,\n      setSimilarPapers,\n      setCoordinates\n    ]\n  );\n\n  // when user navigates back/forward\n  const onNav = useCallback(() => {\n    // get new doi\n    const doi = getUrl();\n    if (!doi)\n      return;\n    // put doi in search box\n    setQuery(doi);\n    // run search, without updating url since browser does this automatically\n    search(doi, false);\n  }, [search]);\n\n  // search for doi in url if any on first load\n  useEffect(() => {\n    if (getUrl())\n      search(getUrl());\n  }, [search]);\n\n  // listen for user back/forward nav\n  useEffect(() => {\n    window.addEventListener('popstate', onNav);\n    return () => window.removeEventListener('popstate', onNav);\n  }, [onNav, search]);\n\n  // render\n  return (\n    <section id='search'>\n      <p className='center'>\n        <i>\n          Enter the <a href='https://www.biorxiv.org/'>bioRxiv</a> or{' '}\n          <a href='https://www.medrxiv.org/'>medRxiv</a> DOI of your preprint\n        </i>\n      </p>\n      <form\n        className='search'\n        onSubmit={(event) => {\n          // prevent page from navigating away/refreshing on submit\n          event.preventDefault();\n          // run search\n          search(query);\n        }}\n      >\n        <input\n          className='search_input'\n          value={query}\n          onChange={onChange}\n          type='text'\n          placeholder='e.g. 10.1101/833400'\n          disabled={status === 'LOADING'}\n        />\n        <button\n          className='search_button'\n          type='submit'\n          title='Search for related papers and journals'\n          disabled={status === 'LOADING'}\n        >\n          <i className='fas fa-search'></i>\n        </button>\n      </form>\n    </section>\n  );\n};\n\n// clean what user types into search box for convenience\n// remove everything before first number, eg \"doi:\"\n// remove version at end, eg \"v4\"\nconst cleanDoi = (query) =>\n  query.replace(/^\\D*/g, '').replace(/v\\d+$/g, '').trim();\n\n// get doi from url\nconst getUrl = () =>\n  new URLSearchParams(window.location.search.substring(1)).get('doi');\n\n// put doi in url as param\nconst setUrl = (doi) => {\n  const oldUrl = window.location.href;\n  const base = window.location.href.split(/[?#]/)[0];\n  const newUrl = base + '?doi=' + doi;\n  // compare old to new url to prevent duplicate history entries when refreshing\n  if (oldUrl !== newUrl)\n    window.history.pushState(null, null, newUrl);\n};\n","import React from 'react';\n\nimport Status from './status';\n\n// preprint info section\n\nexport default ({ preprint, status }) => (\n  <section id='your-preprint'>\n    <h3>\n      <i className='fas fa-feather-alt heading_icon'></i>Your Preprint\n    </h3>\n    {Object.keys(preprint).length === 0 && <Status {...{ status }} />}\n    {Object.keys(preprint).length !== 0 && (\n      <p>\n        <a href={preprint.url} title={preprint.title} className='card_detail'>\n          {preprint.title}\n        </a>\n        <div\n          title={preprint.authors}\n          className='card_detail truncate'\n          tabIndex='0'\n        >\n          {preprint.authors}\n        </div>\n        <div\n          title={preprint.journal + ' · ' + preprint.year}\n          className='card_detail truncate'\n          tabIndex='0'\n        >\n          {preprint.journal} · {preprint.year}\n        </div>\n      </p>\n    )}\n  </section>\n);\n","import React from 'react';\n\nimport color from 'color';\n\nimport Status from './status';\nimport { success } from './status';\n\nimport './card.css';\n\nconst rankColorA = color('#ff980020');\nconst rankColorB = color('#ff9800');\n\nconst googleLink = 'https://www.google.com/search?q=';\n\n// similar journals section\n\nexport default ({ similarJournals, status }) => (\n  <section id='similar-journals'>\n    <h3>\n      <i className='fas fa-bookmark heading_icon'></i>Most Similar Journals\n    </h3>\n    {status !== success && <Status {...{ status }} />}\n    {status === success &&\n      similarJournals.map(({ journal, rank, distance, strength }, index) => (\n        <div key={index} className='card'>\n          <div\n            className='card_score'\n            title={'Distance score: ' + distance}\n            style={{ backgroundColor: rankColorB.mix(rankColorA, strength) }}\n          >\n            {rank}\n          </div>\n          <div className='card_details'>\n            <a href={googleLink + journal} className='card_detail'>\n              {journal}\n            </a>\n          </div>\n        </div>\n      ))}\n  </section>\n);\n","import React from 'react';\n\nimport color from 'color';\n\nimport Status from './status';\nimport { success } from './status';\n\nimport './card.css';\n\nconst rankColorA = color('#ff980020');\nconst rankColorB = color('#ff9800');\n\nconst paperLink = 'https://www.ncbi.nlm.nih.gov/pmc/articles/';\n\n// related papers section\n\nexport default ({ similarPapers, status }) => (\n  <section id='similar-papers'>\n    <h3>\n      <i className='fas fa-scroll heading_icon'></i>Most Similar Papers\n    </h3>\n    {status !== success && <Status {...{ status }} />}\n    {status === success &&\n      similarPapers.map(\n        (\n          { id, title, authors, year, journal, rank, distance, strength },\n          index\n        ) => (\n          <div key={index} className='card'>\n            <div\n              className='card_score'\n              title={'Distance score: ' + distance}\n              style={{ backgroundColor: rankColorB.mix(rankColorA, strength) }}\n            >\n              {rank}\n            </div>\n            <div className='card_details'>\n              <a href={paperLink + id} title={title} className='card_detail'>\n                {title}\n              </a>\n              <div\n                title={authors}\n                className='card_detail truncate'\n                tabIndex='0'\n              >\n                {authors}\n              </div>\n              <div\n                title={journal + ' · ' + year}\n                className='card_detail truncate'\n                tabIndex='0'\n              >\n                {journal} · {year}\n              </div>\n            </div>\n          </div>\n        )\n      )}\n  </section>\n);\n","import React from 'react';\nimport { createPortal } from 'react-dom';\nimport { useState } from 'react';\nimport { useRef } from 'react';\nimport { usePopper } from 'react-popper';\n\nimport { startImage } from './map-section';\nimport { endImage } from './map-section';\nimport { range } from './map-section';\nimport { getPcNum } from './map-section';\nimport { getCloudUrl } from './map-section';\n\nimport './cloud-buttons.css';\n\n// tooltip open delay\nconst delay = 200;\n\n// cloud image button components\n\nexport default ({ selectedPc, setSelectedPc }) => (\n  <p className='center'>\n    {range(startImage, endImage).map((number) => (\n      <CloudButton key={number} {...{ number, selectedPc, setSelectedPc }} />\n    ))}\n  </p>\n);\n\n// cloud image button component\nconst CloudButton = ({ number, selectedPc, setSelectedPc }) => {\n  // component state\n  const [hover, setHover] = useState(false);\n  const [reference, setReference] = useState(null);\n  const [popper, setPopper] = useState(null);\n\n  // tooltip timer\n  const timeout = useRef();\n\n  // make tooltip\n  const { styles, attributes, update } = usePopper(reference, popper, {\n    placement: 'top',\n    modifiers: [\n      // https://github.com/popperjs/popper-core/issues/1138\n      { name: 'computeStyles', options: { adaptive: false } },\n      { name: 'offset', options: { offset: [0, 10] } },\n      { name: 'flip', options: { rootBoundary: 'document' } }\n    ]\n  });\n\n  // render\n  return (\n    <>\n      <button\n        ref={setReference}\n        className='cloud_button'\n        data-number={getPcNum(number)}\n        data-selected={selectedPc === number}\n        onClick={() =>\n          selectedPc === number ? setSelectedPc(null) : setSelectedPc(number)\n        }\n        onMouseEnter={() => {\n          window.clearTimeout(timeout.current);\n          timeout.current = window.setTimeout(() => setHover(true), delay);\n        }}\n        onMouseLeave={() => {\n          window.clearTimeout(timeout.current);\n          setHover(false);\n        }}\n      >\n        <img\n          src={getCloudUrl(number)}\n          title={'Select principal component ' + getPcNum(number)}\n          alt={'Select principal component ' + getPcNum(number)}\n          onLoad={update}\n        />\n      </button>\n      {hover &&\n        createPortal(\n          <img\n            ref={setPopper}\n            src={getCloudUrl(number)}\n            className='cloud_enlarged'\n            title={'Select principal component ' + getPcNum(number)}\n            alt={'Select principal component ' + getPcNum(number)}\n            onLoad={update}\n            style={styles.popper}\n            {...attributes.popper}\n          />,\n          document.body\n        )}\n    </>\n  );\n};\n","import React from 'react';\nimport { useState } from 'react';\nimport { useEffect } from 'react';\nimport { useRef } from 'react';\n\nimport { pcColorA } from './map-section';\nimport { pcColorB } from './map-section';\nimport { pcColorC } from './map-section';\nimport { countColorA } from './map-section';\nimport { countColorB } from './map-section';\nimport { getPcNum } from './map-section';\n\nimport './map.css';\n\n// size of map cells in svg units. match to bin width of plot data\nconst cellSize = 0.4 + 0.01;\n\n// map component\n\n// pubmed central map section\nexport default ({\n  cells,\n  selectedPc,\n  selectedCell,\n  setSelectedCell,\n  coordinates\n}) => {\n  // component state\n  const svg = useRef();\n  const [viewBox, setViewBox] = useState('');\n\n  if (!selectedPc) {\n    // if no selected pc, color cells by paper count\n    // normalize counts\n    const counts = cells.map((cell) => cell.count);\n    const minCount = Math.min(...counts);\n    const maxCount = Math.max(...counts);\n    for (const cell of cells)\n      cell.strength = (cell.count - minCount) / (maxCount - minCount);\n  } else {\n    // if pc selected, color cells by pc score\n    // normalize pc scores\n    for (const cell of cells) {\n      const pc = cell.pcs.find((pc) => pc.name === getPcNum(selectedPc));\n      cell.score = pc?.score || 0;\n    }\n    const absScore =\n      Math.max(...cells.map((cell) => Math.abs(cell.score))) || 1;\n    for (const cell of cells)\n      cell.strength = cell.score / absScore;\n  }\n\n  // set svg viewbox based on bbox of content in it, ie fit view\n  useEffect(() => {\n    if (!svg.current)\n      return;\n    const { x, y, width, height } = svg.current.getBBox();\n    setViewBox([x, y, width, height].join(' '));\n  }, [cells]);\n\n  // render\n  return (\n    <p>\n      <svg ref={svg} viewBox={viewBox || undefined} className='map'>\n        {\n          // put extra selected cell last, so it will always be on top\n          cells.concat(selectedCell || []).map((cell, number) => (\n            <rect\n              key={number}\n              className='cell'\n              x={cell.x - cellSize / 2}\n              y={cell.y - cellSize / 2}\n              width={cellSize}\n              height={cellSize}\n              data-selected={cell === selectedCell}\n              fill={\n                selectedPc ?\n                  pcColorB.mix(\n                    cell.strength > 0 ? pcColorA : pcColorC,\n                    Math.abs(cell.strength)\n                  ) :\n                  countColorB.mix(countColorA, cell.strength)\n              }\n              onClick={() =>\n                cell === selectedCell ?\n                  setSelectedCell(null) :\n                  setSelectedCell(cell)\n              }\n            />\n          ))\n        }\n        {coordinates.x && coordinates.y && (\n          <circle\n            className='marker'\n            cx={coordinates.x}\n            cy={coordinates.y}\n            r={cellSize / 2}\n          />\n        )}\n      </svg>\n    </p>\n  );\n};\n","import React from 'react';\n\nimport { pcColorA } from './map-section';\nimport { pcColorC } from './map-section';\nimport { countColorA } from './map-section';\nimport { countColorB } from './map-section';\nimport { getPcNum } from './map-section';\n\nimport './legend.css';\n\n// map legend component\n\nexport default ({ selectedPc, coordinates }) => (\n  <p className='legend'>\n    {selectedPc && (\n      <>\n        <span>\n          <span\n            className='legend_square'\n            style={{ backgroundColor: pcColorA }}\n          ></span>\n          pos pc\n          {getPcNum(selectedPc)}\n        </span>\n        <span>\n          <span\n            className='legend_square'\n            style={{ backgroundColor: pcColorC }}\n          ></span>\n          neg pc\n          {getPcNum(selectedPc)}\n        </span>\n      </>\n    )}\n    {!selectedPc && (\n      <>\n        <span>\n          <span\n            className='legend_square'\n            style={{ backgroundColor: countColorA }}\n          ></span>\n          many papers\n        </span>\n        <span>\n          <span\n            className='legend_square'\n            style={{ backgroundColor: countColorB }}\n          ></span>\n          few papers\n        </span>\n      </>\n    )}\n    {coordinates.x && coordinates.y && (\n      <>\n        <span>\n          <span\n            className='legend_circle'\n            style={{ backgroundColor: 'var(--red)' }}\n          ></span>\n          your preprint\n        </span>\n      </>\n    )}\n  </p>\n);\n","import React from 'react';\n\nimport { getPcNum } from './map-section';\n\nimport './cell-details.css';\n\n// details of selected cell component\n\nexport default ({ selectedCell, selectedPc, setSelectedPc }) => (\n  <div>\n    <h4>Papers</h4>\n    <p>{selectedCell.count.toLocaleString()}</p>\n    <h4>Top Journals</h4>\n    <p>\n      {selectedCell.journals.map(({ name, count }, number) => (\n        <span key={number} className='cell_detail_row'>\n          <span className='truncate'>{name}</span>\n          <span className='truncate'>{count.toLocaleString()} papers</span>\n        </span>\n      ))}\n    </p>\n    <h4>Top Principal Components</h4>\n    <p>\n      {selectedCell.pcs.slice(0, 5).map(({ name, score }, number) => (\n        <span key={number} className='cell_detail_row'>\n          <a\n            role='button'\n            title={'Select principal component ' + getPcNum(parseInt(name))}\n            onClick={() => setSelectedPc(parseInt(name))}\n          >\n            {name}\n            {parseInt(name) === selectedPc && <i className='fas fa-check'></i>}\n          </a>\n          <span>{score.toFixed(2)} score</span>\n        </span>\n      ))}\n    </p>\n  </div>\n);\n","import React from 'react';\nimport { useState } from 'react';\nimport { useEffect } from 'react';\n\nimport CloudButtons from './cloud-buttons';\nimport Map from './map';\nimport Legend from './legend';\nimport CellDetails from './cell-details';\n\nimport color from 'color';\n\n// map cell data\nconst mapData = './data/plot.json';\n\n// word cloud \"principal component\" (pc) images\nexport const cloudImages =\n  'https://raw.githubusercontent.com/greenelab/annorxiver/master/biorxiv/pca_association_experiment/output/word_pca_similarity/figures/pca_XX_cossim_word_cloud.png';\nexport const startImage = 1;\nexport const endImage = 50;\n\n// map count color;\nexport const countColorA = color('#606060');\nexport const countColorB = color('#e0e0e0');\n\n// map principal component gradient colors\nexport const pcColorA = color('#ff9800');\nexport const pcColorB = color('#e0e0e0');\nexport const pcColorC = color('#2196f3');\n\n// map section component\n\nexport default ({ coordinates }) => {\n  // component state\n  const [cells, setCells] = useState([]);\n  const [selectedPc, setSelectedPc] = useState(null);\n  const [selectedCell, setSelectedCell] = useState(null);\n\n  // on app start, load map cell data\n  useEffect(() => {\n    const getMapData = async () =>\n      setCells(await (await fetch(mapData)).json());\n    getMapData();\n  }, []);\n\n  // render\n  return (\n    <section id='map'>\n      <h3>\n        <i className='fas fa-map heading_icon'></i>Map of PubMed Central\n      </h3>\n      <CloudButtons {...{ selectedPc, setSelectedPc }} />\n      <Map\n        {...{ cells, selectedPc, selectedCell, setSelectedCell, coordinates }}\n      />\n      <Legend {...{ selectedPc, coordinates }} />\n      {selectedCell && (\n        <CellDetails {...{ selectedCell, selectedPc, setSelectedPc }} />\n      )}\n    </section>\n  );\n};\n\n// util func to generate range between ints\nexport const range = (start, end) =>\n  Array.from({ length: end - start + 1 }, (_, i) => start + i);\n\n// get principal component number padded with 0's\nexport const getPcNum = (number) => String(number).padStart(2, '0');\n\n// get url of word cloud image\nexport const getCloudUrl = (number) =>\n  cloudImages.replace('XX', getPcNum(number));\n","import React from 'react';\n\n// about section\n\nexport default () => (\n  <section id='help'>\n    <h3>\n      <i className='fas fa-question-circle heading_icon'></i>About this tool\n    </h3>\n    <p>\n      This tool uses a machine learning model trained on 1.7 million{' '}\n      <a href='https://www.ncbi.nlm.nih.gov/pmc/tools/openftlist/'>\n        PubMed Central open access documents\n      </a>{' '}\n      to recommend suitable journals based on the textual content of your{' '}\n      <a href='https://www.biorxiv.org/'>bioRxiv</a> or{' '}\n      <a href='https://www.medrxiv.org/'>medRxiv</a> preprint.\n    </p>\n    <p>\n      The tool also provides a \"map\" of the PubMed Central documents, grouped\n      into bins based on similar textual content, and shows you where your\n      preprint falls on the map. Select a square to learn more about the papers\n      in that bin.\n    </p>\n    <p>\n      The map also incorporates a set of 50{' '}\n      <a href='https://en.wikipedia.org/wiki/Principal_component_analysis'>\n        principal components\n      </a>{' '}\n      (PCs) generated from bioRxiv. Each PC represents two high level concepts\n      characterized by keywords of various strengths, illustrated in the word\n      cloud thumbnails above the map. Select a thumbnail to color the map by\n      that PC. Deeper orange cells will be papers that correlate more with the\n      orange keywords in the image, and vice versa for blue.\n    </p>\n    <p>\n      For more information, see the{' '}\n      <a href='https://github.com/greenelab/annorxiver-journal-recommender#annorxiver-journal-recommender'>\n        readme on GitHub\n      </a>\n      .\n    </p>\n  </section>\n);\n","import React from 'react';\n\n// footer component\n\nexport default () => (\n  <footer>\n    <section>\n      <p>\n        A project of the <a href='https://greenelab.com/'>Greene Lab</a>\n        <br />\n        <a href='https://github.com/greenelab/annorxiver_journal_rec_app'>\n          <i className='fab fa-github icon_with_text'></i>\n          <span>View on GitHub</span>\n        </a>\n      </p>\n    </section>\n  </footer>\n);\n","import React from 'react';\nimport { useState } from 'react';\n\nimport Header from './header';\nimport Search from './search';\nimport PreprintInfo from './preprint-info';\nimport SimilarJournals from './similar-journals';\nimport SimilarPapers from './similar-papers';\nimport MapSection from './map-section';\nimport About from './about';\nimport Footer from './footer';\n\nimport './app.css';\n\nimport { empty } from './status';\n\n// main app component\n\nexport default () => {\n  // data status\n  const [status, setStatus] = useState(empty);\n\n  // main data\n  const [preprint, setPreprint] = useState('');\n  const [similarJournals, setSimilarJournals] = useState([]);\n  const [similarPapers, setSimilarPapers] = useState([]);\n  const [coordinates, setCoordinates] = useState({});\n\n  // render\n  return (\n    <>\n      <Header />\n      <main>\n        <Search\n          {...{\n            preprint,\n            setPreprint,\n            status,\n            setStatus,\n            setSimilarJournals,\n            setSimilarPapers,\n            setCoordinates\n          }}\n        />\n        <hr />\n        {status !== empty && (\n          <>\n            <PreprintInfo {...{ preprint, status }} />\n            <hr />\n            <SimilarPapers {...{ similarPapers, status }} />\n            <hr />\n            <SimilarJournals {...{ similarJournals, status }} />\n            <hr />\n          </>\n        )}\n        <MapSection {...{ coordinates }} />\n        <hr />\n        <About />\n      </main>\n      <Footer />\n    </>\n  );\n};\n","import React from 'react';\nimport { render } from 'react-dom';\nimport * as Sentry from '@sentry/react';\nimport App from './app';\n\nSentry.init({\n  dsn:\n    'https://b1183a2fe86f4a8f951e9bb67341c07f@o7983.ingest.sentry.io/5407669', // api key\n  environment: process.env.NODE_ENV // production or development\n});\n\n// render whole app\nrender(<App />, document.getElementById('root'));\n"],"sourceRoot":""}