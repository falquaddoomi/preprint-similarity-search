{"version":3,"sources":["logo.svg","header.js","neighbors.js","status.js","search.js","recommended-journals.js","related-papers.js","map.js","about.js","continue.js","footer.js","app.js","index.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","createElement","id","fill","d","stroke","strokeWidth","strokeLinecap","strokeLinejoin","transform","_ref","svgRef","title","props","viewBox","ref","ForwardRef","forwardRef","className","getNeighbors","query","a","fetch","json","neighbors","recommendedJournals","journal_neighbors","relatedPapers","paper_neighbors","coordinates","x","dim1","y","dim2","removePMC","entry","pmcid","document","replace","forEach","getMetadata","rest","ids","map","filter","join","metadata","result","incorp","cleanNeighbors","cleanArray","array","distances","distance","max","Math","min","diff","sort","b","index","authors","author","name","journal","fulljournalname","split","year","pubdate","strength","rank","status","setStatus","setRecommendedJournals","setRelatedPapers","setCoordinates","useState","getUrl","setQuery","onChange","useCallback","event","value","trim","console","log","search","doi","updateUrl","cleanDoi","setUrl","onNav","useEffect","window","addEventListener","removeEventListener","href","onSubmit","preventDefault","type","placeholder","disabled","URLSearchParams","location","substring","get","oldUrl","newUrl","history","pushState","style","backgroundColor","floor","toString","padStart","borderColor","countColorA","color","countColorB","pcColorA","pcColorB","pcColorC","cells","setCells","selectedPc","setSelectedPc","selectedCell","setSelectedCell","getMapData","CloudButtons","start","end","Array","from","_","number","getPcNum","String","getCloudUrl","CloudButton","hover","setHover","reference","setReference","popper","setPopper","timeout","useRef","usePopper","placement","modifiers","options","adaptive","offset","rootBoundary","styles","attributes","update","data-number","data-selected","onClick","onMouseEnter","clearTimeout","current","setTimeout","onMouseLeave","src","alt","onLoad","createPortal","body","Map","svg","setViewBox","counts","cell","count","minCount","maxCount","countStrength","pc","pcs","find","score","absScore","abs","scoreStrength","getBBox","width","height","undefined","cellSize","mix","hex","cx","cy","r","Legend","SelectedCellDetails","toLocaleString","journals","slice","role","parseInt","toFixed","show","setShow","timer","onScroll","inView","useLayoutEffect","data-show","querySelector","scrollIntoView","getBoundingClientRect","bottom","innerHeight","render","getElementById"],"mappings":"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","file":"static/js/main.7d5d4281.chunk.js","sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"style\", null, \"\\n    #logo:hover #star,\\n    #logo[data-spin] #star {\\n      animation: star_rotate 2s ease forwards infinite;\\n    }\\n    @keyframes star_rotate {\\n      from {\\n        transform: rotate(0);\\n      }\\n      to {\\n        transform: rotate(360deg);\\n      }\\n    }\\n  \");\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"path\", {\n  id: \"book_filling\",\n  fill: \"#ffe0b2\",\n  d: \"       M 10 50       L 50 70       L 90 50       L 90 35       L 50 55       L 10 35       A 10 10 0 0 0 10 50       M 10 65       L 50 85       L 90 65       L 90 50       L 50 70       L 10 50       A 10 10 0 0 0 10 65     \"\n});\n\nvar _ref4 = /*#__PURE__*/React.createElement(\"path\", {\n  id: \"book_top_cover\",\n  fill: \"#000000\",\n  stroke: \"#000000\",\n  strokeWidth: 5,\n  strokeLinecap: \"round\",\n  strokeLinejoin: \"round\",\n  d: \"       M 50 15       L 90 35       L 50 55       L 10 35       z     \"\n});\n\nvar _ref5 = /*#__PURE__*/React.createElement(\"path\", {\n  id: \"book_outlines\",\n  fill: \"none\",\n  stroke: \"#000000\",\n  strokeWidth: 5,\n  strokeLinecap: \"round\",\n  strokeLinejoin: \"round\",\n  d: \"       M 10 50       L 30 60       M 47.5 68.75       L 50 70       L 90 50       M 10 65       L 50 85       L 90 65       M 10 35       A 10 10 0 0 0 10 50       A 10 10 0 0 0 10 65     \"\n});\n\nvar _ref6 = /*#__PURE__*/React.createElement(\"path\", {\n  id: \"bookmark\",\n  fill: \"#000000\",\n  stroke: \"#000000\",\n  strokeWidth: 2,\n  strokeLinecap: \"round\",\n  strokeLinejoin: \"round\",\n  d: \"       M 35 55       L 35 71.25       L 38.75 69.25       L 42.5 74.75       L 42.5 58.75       z     \"\n});\n\nvar _ref7 = /*#__PURE__*/React.createElement(\"g\", {\n  transform: \"translate(50,34) rotate(26.565) skewX(-26.565) scale(0.10)\"\n}, /*#__PURE__*/React.createElement(\"path\", {\n  id: \"star\",\n  fill: \"#ffe0b2\",\n  stroke: \"#ffe0b2\",\n  strokeWidth: 20,\n  strokeLinecap: \"round\",\n  strokeLinejoin: \"round\",\n  d: \"         M 0.000 -100.000         L 29.389 -40.451         L 95.106 -30.902         L 47.553 15.451         L 58.779 80.902         L 0.000 50.000         L -58.779 80.902         L -47.553 15.451         L -95.106 -30.902         L -29.389 -40.451         z       \"\n}));\n\nvar SvgLogo = function SvgLogo(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 100 100\",\n    id: \"logo\",\n    ref: svgRef\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _ref2, _ref3, _ref4, _ref5, _ref6, _ref7);\n};\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgLogo, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/logo.e444815c.svg\";\nexport { ForwardRef as ReactComponent };","import React from 'react';\n\nimport { ReactComponent as Logo } from './logo.svg';\n\nimport './header.css';\n\n// header component\n\nexport default () => (\n  <header>\n    <section>\n      <h1>AnnoRxver</h1>\n      <h2>Journal Recommender</h2>\n      <Logo className='logo' />\n    </section>\n  </header>\n);\n","const backendServer = 'https://api-journal-rec.greenelab.com/doi/';\n\n// get neighbor and coordinate data from backend\nexport const getNeighbors = async (query) => {\n  // lookup data from backend\n  const neighbors = await (await fetch(backendServer + query)).json();\n\n  // extract results\n  const recommendedJournals = neighbors.journal_neighbors || [];\n  const relatedPapers = neighbors.paper_neighbors || [];\n  const coordinates = {\n    x: neighbors['2d_coord'].dim1,\n    y: neighbors['2d_coord'].dim2\n  };\n\n  // remove \"PMC\" prefix from PMCID's\n  const removePMC = (entry) =>\n    (entry.pmcid = (entry.pmcid || entry.document || '').replace('PMC', ''));\n  recommendedJournals.forEach(removePMC);\n  relatedPapers.forEach(removePMC);\n\n  // return results\n  return { recommendedJournals, relatedPapers, coordinates };\n};\n\nconst metaLookup =\n  'https://eutils.ncbi.nlm.nih.gov/entrez/eutils/esummary.fcgi?db=pmc&tool=AnnoRxivir&email=greenescientist@gmail.com&retmode=json&id=';\n\n// look up metadata from nih.gov\nexport const getMetadata = async ({\n  recommendedJournals,\n  relatedPapers,\n  ...rest\n}) => {\n  // get pmcid's of all relatedPapers for looking up meta data\n  const ids = [...recommendedJournals, ...relatedPapers]\n    .map((entry) => entry.pmcid)\n    .filter((entry) => entry);\n\n  // lookup metadata from pubmed\n  const metadata = (await (await fetch(metaLookup + ids.join(','))).json())\n    .result;\n\n  // incorp meta data into journal and paper objects\n  const incorp = (entry) => ({ ...entry, ...(metadata[entry.pmcid] || {}) });\n  recommendedJournals = recommendedJournals.map(incorp);\n  relatedPapers = relatedPapers.map(incorp);\n\n  // return results\n  return { recommendedJournals, relatedPapers, ...rest };\n};\n\n// clean neighbor data to handle more conveniently\nexport const cleanNeighbors = ({\n  recommendedJournals,\n  relatedPapers,\n  ...rest\n}) => {\n  recommendedJournals = cleanArray(recommendedJournals);\n  relatedPapers = cleanArray(relatedPapers);\n  return { recommendedJournals, relatedPapers, ...rest };\n};\n\n// clean array of journal or paper results\nconst cleanArray = (array) => {\n  // get range of distances\n  const distances = array.map((entry) => entry.distance);\n  const max = Math.max(...distances);\n  const min = Math.min(...distances);\n  const diff = max - min;\n\n  // sort by smaller distances first\n  array.sort((a, b) => a.distance - b.distance);\n\n  // set new values of array. keep only needed props and rename sensibly\n  array = array.map((entry, index) => ({\n    // pubmed id\n    id: entry.pmcid || null,\n    // name of paper\n    title: entry.title || '',\n    // authors of paper\n    authors: (entry.authors || [])\n      .map((author) => author.name || '')\n      .filter((name) => name)\n      .join(', '),\n    // name of journal\n    journal: (entry.fulljournalname || entry.journal || '')\n      .split('_')\n      .join(' '),\n    // year of publication\n    year: (entry.pubdate || '').split(' ')[0] || '',\n    // distance score\n    distance: entry.distance,\n    // normalized distance score\n    strength: (entry.distance - min) / diff,\n    // whole number rank\n    rank: index + 1\n  }));\n\n  return array;\n};\n","import React from 'react';\n\nimport './status.css';\n\n// status key codes\nexport const empty = '';\nexport const loading = 'LOADING';\nexport const error = 'ERROR';\nexport const success = 'SUCCESS';\n\n// loading/error message component\n\nexport default ({ status }) => {\n  if (status === loading) {\n    return (\n      <section className='center'>\n        <div className='message loading'>\n          <i className='fas fa-spinner fa-spin'></i>\n          <span>Loading...</span>\n        </div>\n      </section>\n    );\n  }\n\n  if (status === error) {\n    return (\n      <section className='center'>\n        <div className='error'>\n          <i className='far fa-times-circle'></i>\n          <span>Couldn't get results</span>\n        </div>\n      </section>\n    );\n  }\n\n  return null;\n};\n","import React, { useEffect } from 'react';\nimport { useState } from 'react';\nimport { useCallback } from 'react';\n\nimport { getNeighbors } from './neighbors';\nimport { getMetadata } from './neighbors';\nimport { cleanNeighbors } from './neighbors';\nimport { loading, success, error } from './status';\n\nimport './search.css';\n\n// search box component\n\nexport default ({\n  status,\n  setStatus,\n  setRecommendedJournals,\n  setRelatedPapers,\n  setCoordinates\n}) => {\n  // default query\n  const [query, setQuery] = useState(getUrl() || '10.1101/833400');\n\n  // on type\n  const onChange = useCallback(\n    (event) => setQuery(event.target.value.trim()),\n    []\n  );\n\n  console.log(query);\n\n  // search\n  const search = useCallback(\n    async (doi, updateUrl = true) => {\n      // clean doi\n      doi = cleanDoi(doi);\n\n      // update search box with cleaned doi\n      setQuery(doi);\n\n      // exit if doi query empty\n      if (!doi)\n        return;\n\n      // set loading status\n      setStatus(loading);\n\n      // update url based on search\n      if (updateUrl)\n        setUrl(doi);\n\n      try {\n        // get neighbor data\n        const {\n          recommendedJournals,\n          relatedPapers,\n          coordinates\n        } = await cleanNeighbors(await getMetadata(await getNeighbors(doi)));\n\n        // set neighbor data\n        setRecommendedJournals(recommendedJournals);\n        setRelatedPapers(relatedPapers);\n        setCoordinates(coordinates);\n        setStatus(success);\n      } catch (errorMessage) {\n        console.log(errorMessage);\n        // set error status if any problem\n        setStatus(error);\n      }\n    },\n    [setCoordinates, setRecommendedJournals, setRelatedPapers, setStatus]\n  );\n\n  // when user navigates back/forward\n  const onNav = useCallback(() => {\n    // get new doi\n    const doi = getUrl();\n    if (!doi)\n      return;\n    // put doi in search box\n    setQuery(doi);\n    // run search, without updating url since browser does this automatically\n    search(doi, false);\n  }, [search]);\n\n  // search for doi in url if any on first load\n  useEffect(() => {\n    if (getUrl())\n      search(getUrl());\n  }, [search]);\n\n  // listen for user back/forward nav\n  useEffect(() => {\n    window.addEventListener('popstate', onNav);\n    return () => window.removeEventListener('popstate', onNav);\n  }, [onNav, search]);\n\n  // render\n  return (\n    <section>\n      <p className='center'>\n        <i>\n          Enter the <a href='https://www.biorxiv.org/'>bioRxiv</a> DOI of your\n          preprint\n        </i>\n      </p>\n      <form\n        className='search'\n        onSubmit={(event) => {\n          // prevent page from navigating away/refreshing on submit\n          event.preventDefault();\n          // run search\n          search(query);\n        }}\n      >\n        <input\n          className='search_input'\n          value={query}\n          onChange={onChange}\n          type='text'\n          placeholder='e.g. 10.1101/833400'\n          disabled={status === 'LOADING'}\n        />\n        <button\n          className='search_button'\n          type='submit'\n          title='Search for related papers and journals'\n          disabled={status === 'LOADING'}\n        >\n          <i className='fas fa-search'></i>\n        </button>\n      </form>\n    </section>\n  );\n};\n\n// clean what user types into search box for convenience\n// remove everything before first number, eg \"doi:\"\n// remove version at end, eg \"v4\"\nconst cleanDoi = (query) =>\n  query.replace(/^\\D*/g, '').replace(/v\\d+$/g, '').trim();\n\n// get doi from url\nconst getUrl = () =>\n  new URLSearchParams(window.location.search.substring(1)).get('doi');\n\n// put doi in url as param\nconst setUrl = (doi) => {\n  const oldUrl = window.location.href;\n  const base = window.location.href.split(/[?#]/)[0];\n  const newUrl = base + '?doi=' + doi;\n  // compare old to new url to prevent duplicate history entries when refreshing\n  if (oldUrl !== newUrl)\n    window.history.pushState(null, null, newUrl);\n};\n","import React from 'react';\n\nimport './card.css';\n\nconst rankColor = '#ff9800';\nconst googleLink = 'https://www.google.com/search?q=';\n\n// recommended journals section\n\nexport default ({ recommendedJournals }) => (\n  <section>\n    <h3>\n      <i className='fas fa-bookmark'></i>Recommended Journals\n    </h3>\n    {recommendedJournals.map(({ journal, rank, distance, strength }, index) => (\n      <div key={index} className='card'>\n        <div\n          className='card_score'\n          title={'Distance score: ' + distance}\n          style={{\n            backgroundColor:\n              rankColor +\n              Math.floor((1 - strength) * 255)\n                .toString(16)\n                .padStart(2, '0'),\n            borderColor: rankColor\n          }}\n        >\n          {rank}\n        </div>\n        <div className='card_details'>\n          <a href={googleLink + journal}>{journal}</a>\n        </div>\n      </div>\n    ))}\n  </section>\n);\n","import React from 'react';\n\nimport './card.css';\n\nconst rankColor = '#ff9800';\nconst paperLink = 'https://www.ncbi.nlm.nih.gov/pmc/articles/';\n\n// related papers section\n\nexport default ({ relatedPapers }) => (\n  <section>\n    <h3>\n      <i className='fas fa-scroll'></i>Related Papers\n    </h3>\n    {relatedPapers.map(\n      (\n        { id, title, authors, year, journal, rank, distance, strength },\n        index\n      ) => (\n        <div key={index} className='card'>\n          <div\n            className='card_score'\n            title={'Distance score: ' + distance}\n            style={{\n              backgroundColor:\n                rankColor +\n                Math.floor((1 - strength) * 255)\n                  .toString(16)\n                  .padStart(2, '0'),\n              borderColor: rankColor\n            }}\n          >\n            {rank}\n          </div>\n          <div className='card_details'>\n            <a href={paperLink + id} title={title}>\n              {title}\n            </a>\n            <div title={authors}>{authors}</div>\n            <div title={journal + ' · ' + year}>\n              {journal} · {year}\n            </div>\n          </div>\n        </div>\n      )\n    )}\n  </section>\n);\n","import React from 'react';\nimport { createPortal } from 'react-dom';\nimport { useState } from 'react';\nimport { useEffect } from 'react';\nimport { useRef } from 'react';\nimport { usePopper } from 'react-popper';\n\nimport color from 'color';\n\nimport './map.css';\n\n// word cloud \"principal component\" (pc) images\nconst cloudImages =\n  'https://raw.githubusercontent.com/greenelab/annorxiver/master/biorxiv/pca_association_experiment/output/word_pca_similarity/figures/pca_XX_cossim_word_cloud.png';\nconst startImage = 1;\nconst endImage = 50;\n\n// tooltip open delay\nconst delay = 500;\n\n// map cell data\nconst mapData = './data/plot.json';\n// size of map cells in svg units. match to bin width of plot data\nconst cellSize = 0.45;\n\n// map count color;\nconst countColorA = color('#606060');\nconst countColorB = color('#e0e0e0');\n\n// map principal component gradient colors\nconst pcColorA = color('#ff9800');\nconst pcColorB = color('#e0e0e0');\nconst pcColorC = color('#2196f3');\n\n// map section component\n\nexport default ({ coordinates }) => {\n  // component state\n  const [cells, setCells] = useState([]);\n  const [selectedPc, setSelectedPc] = useState(null);\n  const [selectedCell, setSelectedCell] = useState(null);\n\n  // on app start, load map cell data\n  useEffect(() => {\n    const getMapData = async () =>\n      setCells(await (await fetch(mapData)).json());\n    getMapData();\n  }, []);\n\n  // render\n  return (\n    <section>\n      <h3 id='map'>\n        <i className='fas fa-map'></i>Map of PubMed Central\n      </h3>\n      <CloudButtons {...{ selectedPc, setSelectedPc }} />\n      <Map\n        {...{ cells, selectedPc, selectedCell, setSelectedCell, coordinates }}\n      />\n      <Legend {...{ selectedPc, coordinates }} />\n      {selectedCell && (\n        <SelectedCellDetails {...{ selectedCell, selectedPc, setSelectedPc }} />\n      )}\n    </section>\n  );\n};\n\n// util func to generate range between ints\nconst range = (start, end) =>\n  Array.from({ length: end - start + 1 }, (_, i) => start + i);\n\n// cloud image buttons section\nconst CloudButtons = ({ selectedPc, setSelectedPc }) => (\n  <p className='center'>\n    {range(startImage, endImage).map((number) => (\n      <CloudButton key={number} {...{ number, selectedPc, setSelectedPc }} />\n    ))}\n  </p>\n);\n\n// get principal component number padded with 0's\nconst getPcNum = (number) => String(number).padStart(2, '0');\n\n// get url of word cloud image\nconst getCloudUrl = (number) => cloudImages.replace('XX', getPcNum(number));\n\n// cloud image button component\nconst CloudButton = ({ number, selectedPc, setSelectedPc }) => {\n  // component state\n  const [hover, setHover] = useState(false);\n  const [reference, setReference] = useState(null);\n  const [popper, setPopper] = useState(null);\n\n  // tooltip timer\n  const timeout = useRef();\n\n  // make tooltip\n  const { styles, attributes, update } = usePopper(reference, popper, {\n    placement: 'top',\n    modifiers: [\n      // https://github.com/popperjs/popper-core/issues/1138\n      { name: 'computeStyles', options: { adaptive: false } },\n      { name: 'offset', options: { offset: [0, 10] } },\n      { name: 'flip', options: { rootBoundary: 'document' } }\n    ]\n  });\n\n  // render\n  return (\n    <>\n      <button\n        ref={setReference}\n        className='cloud_button'\n        data-number={getPcNum(number)}\n        data-selected={selectedPc === number}\n        onClick={() =>\n          selectedPc === number ? setSelectedPc(null) : setSelectedPc(number)\n        }\n        onMouseEnter={() => {\n          window.clearTimeout(timeout.current);\n          timeout.current = window.setTimeout(() => setHover(true), delay);\n        }}\n        onMouseLeave={() => {\n          window.clearTimeout(timeout.current);\n          setHover(false);\n        }}\n      >\n        <img\n          src={getCloudUrl(number)}\n          title={'Select principal component ' + getPcNum(number)}\n          alt={'Select principal component ' + getPcNum(number)}\n          onLoad={update}\n        />\n      </button>\n      {hover &&\n        createPortal(\n          <img\n            ref={setPopper}\n            src={getCloudUrl(number)}\n            className='cloud_enlarged'\n            title={'Select principal component ' + getPcNum(number)}\n            alt={'Select principal component ' + getPcNum(number)}\n            onLoad={update}\n            style={styles.popper}\n            {...attributes.popper}\n          />,\n          document.body\n        )}\n    </>\n  );\n};\n\n// pubmed central map section\nconst Map = ({\n  cells,\n  selectedPc,\n  selectedCell,\n  setSelectedCell,\n  coordinates\n}) => {\n  // component state\n  const svg = useRef();\n  const [viewBox, setViewBox] = useState('');\n\n  // normalize counts\n  const counts = cells.map((cell) => cell.count);\n  const minCount = Math.min(...counts);\n  const maxCount = Math.max(...counts);\n  for (const cell of cells)\n    cell.countStrength = (cell.count - minCount) / (maxCount - minCount);\n\n  // normalize pc scores\n  for (const cell of cells) {\n    const pc = cell.pcs.find((pc) => pc.name === getPcNum(selectedPc));\n    cell.score = pc?.score || 0;\n  }\n  const absScore = Math.max(...cells.map((cell) => Math.abs(cell.score))) || 1;\n  for (const cell of cells)\n    cell.scoreStrength = cell.score / absScore;\n\n  // set svg viewbox based on bbox of content in it, ie fit view\n  useEffect(() => {\n    if (!svg.current)\n      return;\n    const { x, y, width, height } = svg.current.getBBox();\n    setViewBox([x, y, width, height].join(' '));\n  }, [cells]);\n\n  // render\n  return (\n    <p>\n      <svg ref={svg} viewBox={viewBox || undefined} className='map'>\n        {cells\n          // put selected cell last, so always be on top\n          .sort((a, b) => {\n            if (a === selectedCell)\n              return 1;\n            if (b === selectedCell)\n              return -1;\n            return 0;\n          })\n          .map((cell, number) => (\n            <rect\n              key={number}\n              className='cell'\n              x={cell.x - cellSize / 2}\n              y={cell.y - cellSize / 2}\n              width={cellSize}\n              height={cellSize}\n              data-selected={cell === selectedCell}\n              fill={\n                selectedPc ?\n                  pcColorB\n                    .mix(\n                      cell.scoreStrength > 0 ? pcColorA : pcColorC,\n                      Math.abs(cell.scoreStrength)\n                    )\n                    .hex() :\n                  countColorB.mix(countColorA, cell.countStrength)\n              }\n              onClick={() =>\n                cell === selectedCell ?\n                  setSelectedCell(null) :\n                  setSelectedCell(cell)\n              }\n            />\n          ))}\n        {coordinates.x && coordinates.y && (\n          <circle\n            className='marker'\n            cx={coordinates.x}\n            cy={coordinates.y}\n            r={cellSize / 2}\n          />\n        )}\n      </svg>\n    </p>\n  );\n};\n\n// may legend\nconst Legend = ({ selectedPc, coordinates }) => (\n  <p className='legend'>\n    {selectedPc && (\n      <>\n        <span>\n          <span style={{ backgroundColor: pcColorA }}></span>pos pc\n          {getPcNum(selectedPc)}\n        </span>\n        <span>\n          <span style={{ backgroundColor: pcColorC }}></span>neg pc\n          {getPcNum(selectedPc)}\n        </span>\n      </>\n    )}\n    {!selectedPc && (\n      <>\n        <span>\n          <span style={{ backgroundColor: countColorA }}></span>many papers\n        </span>\n        <span>\n          <span style={{ backgroundColor: countColorB }}></span>few papers\n        </span>\n      </>\n    )}\n    {coordinates.x && coordinates.y && (\n      <>\n        <span>\n          <span style={{ backgroundColor: 'var(--red)' }}></span>your preprint\n        </span>\n      </>\n    )}\n  </p>\n);\n\n// details of selected cell section\nconst SelectedCellDetails = ({ selectedCell, selectedPc, setSelectedPc }) => (\n  <div>\n    <h4>Papers</h4>\n    <p>{selectedCell.count.toLocaleString()}</p>\n    <h4>Top Journals</h4>\n    <p>\n      {selectedCell.journals.map(({ name, count }, number) => (\n        <span key={number} className='cell_detail_row'>\n          <span>{name}</span>\n          <span>{count.toLocaleString()} papers</span>\n          <br />\n        </span>\n      ))}\n    </p>\n    <h4>Top Principal Components</h4>\n    <p>\n      {selectedCell.pcs.slice(0, 5).map(({ name, score }, number) => (\n        <span key={number} className='cell_detail_row'>\n          <a\n            role='button'\n            title={'Select principal component ' + getPcNum(parseInt(name))}\n            onClick={() => setSelectedPc(parseInt(name))}\n          >\n            {name}\n            {parseInt(name) === selectedPc && <i className='fas fa-check'></i>}\n          </a>\n          <span>{score.toFixed(2)} score</span>\n          <br />\n        </span>\n      ))}\n    </p>\n  </div>\n);\n","import React from 'react';\n\n// about section\n\nexport default () => (\n  <section>\n    <h3>\n      <i className='fas fa-question-circle'></i>What does this do?\n    </h3>\n    <p>\n      This tool uses a machine learning model trained on 1.7 million{' '}\n      <a href='https://www.ncbi.nlm.nih.gov/pmc/'>PubMed Central</a> documents\n      to recommend suitable journals based on the textual content of your{' '}\n      <a href='https://www.biorxiv.org/'>bioRxiv</a> preprint. For information\n      on how this works, see the{' '}\n      <a href='https://github.com/greenelab/annorxiver-journal-recommender#annorxiver-journal-recommender'>\n        readme on GitHub\n      </a>\n      .\n    </p>\n  </section>\n);\n","import React from 'react';\nimport { useState } from 'react';\nimport { useEffect } from 'react';\nimport { useCallback } from 'react';\nimport { useRef } from 'react';\nimport { useLayoutEffect } from 'react';\n\nimport './continue.css';\n\nconst delay = 3000;\nconst target = '#map';\n\nexport default () => {\n  const [show, setShow] = useState(false);\n  const timer = useRef();\n\n  const onScroll = useCallback(() => {\n    window.clearTimeout(timer.current);\n    if (inView(target))\n      setShow(false);\n    else\n      timer.current = window.setTimeout(() => setShow(true), delay);\n  }, []);\n\n  useEffect(() => {\n    onScroll();\n    window.addEventListener('scroll', onScroll);\n    return () => window.removeEventListener('scroll', onScroll);\n  }, [onScroll]);\n\n  useLayoutEffect(() => {\n    onScroll();\n  });\n\n  return (\n    <button\n      className='continue_arrow'\n      data-show={show}\n      disabled={!show}\n      onClick={() => document.querySelector(target).scrollIntoView()}\n    >\n      <i className='fas fa-arrow-down fa-2x'></i>\n    </button>\n  );\n};\n\n// test if view is on or past element\nconst inView = (query) =>\n  document.querySelector(query).getBoundingClientRect().bottom <\n  window.innerHeight;\n","import React from 'react';\n\n// footer component\n\nexport default () => (\n  <footer>\n    <section>\n      <p>\n        A project of the <a href='https://greenelab.com/'>Greene Lab</a>\n        <br />\n        <a href='https://github.com/greenelab/annorxiver_journal_rec_app'>\n          <i className='fab fa-github'></i>\n          <span>View on GitHub</span>\n        </a>\n      </p>\n    </section>\n  </footer>\n);\n","import React from 'react';\nimport { useState } from 'react';\n\nimport Header from './header';\nimport Search from './search';\nimport Status from './status';\nimport RecommendedJournals from './recommended-journals';\nimport RelatedPapers from './related-papers';\nimport Map from './map';\nimport About from './about';\nimport Continue from './continue';\nimport Footer from './footer';\n\nimport './app.css';\n\nimport { empty, success } from './status';\n\n// main app component\n\nexport default () => {\n  // data status\n  const [status, setStatus] = useState(empty);\n\n  // main data\n  const [recommendedJournals, setRecommendedJournals] = useState([]);\n  const [relatedPapers, setRelatedPapers] = useState([]);\n  const [coordinates, setCoordinates] = useState({});\n\n  // render\n  return (\n    <>\n      <Header />\n      <main>\n        <Search\n          {...{\n            status,\n            setStatus,\n            setRecommendedJournals,\n            setRelatedPapers,\n            setCoordinates\n          }}\n        />\n        <Status {...{ status }} />\n        {status === success && (\n          <RecommendedJournals {...{ recommendedJournals }} />\n        )}\n        {status === success && <RelatedPapers {...{ relatedPapers }} />}\n        <Map {...{ coordinates }} />\n        <About />\n        <Continue />\n      </main>\n      <Footer />\n    </>\n  );\n};\n","import React from 'react';\nimport { render } from 'react-dom';\nimport App from './app';\n\n// render whole app\nrender(<App />, document.getElementById('root'));\n"],"sourceRoot":""}